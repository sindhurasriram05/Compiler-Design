Created by PLY version 3.4 (http://www.dabeaz.com/ply)

Unused terminals:

    WS
    BACKQUOTE
    WITH
    EXCEPT
    PERCENTEQUAL
    IMPORT
    SLASHSLASH
    RBRACE
    EXEC
    PASS
    STARSTAREQUAL
    DEL
    MINEQUAL
    BINARYNUMBER
    TRY
    RAWSTRING
    LBRACE
    INUMBER
    AS
    LAMBDA
    RAISE
    GLOBAL
    DOT
    TILDE
    PLUSEQUAL
    HEXADECIMALNUMBER
    OCTALNUMBER
    STAREQUAL
    ELIF
    STARSTAR
    SLASHEQUAL
    ASSERT
    SEMI
    CLASS
    IS
    YIELD
    FINALLY
    AT
    UNICODESTRING
    FROM
    SLASHSLASHEQUAL

Grammar

Rule 0     S' -> file_input
Rule 1     file_input -> single_stmt ENDMARKER
Rule 2     single_stmt -> single_stmt NEWLINE
Rule 3     single_stmt -> <empty>
Rule 4     single_stmt -> single_stmt stmt
Rule 5     funcdef -> DEF NAME MarkerScope parameters MarkerArg COLON suite
Rule 6     MarkerScope -> <empty>
Rule 7     MarkerArg -> <empty>
Rule 8     parameters -> LPAREN RPAREN
Rule 9     parameters -> LPAREN varargslist RPAREN
Rule 10    function_call -> NAME LPAREN RPAREN
Rule 11    function_call -> NAME LPAREN testlist RPAREN
Rule 12    varargslist -> fpdef
Rule 13    varargslist -> fpdef EQUAL test
Rule 14    varargslist -> fpdef COMMA varargslist
Rule 15    varargslist -> fpdef EQUAL test COMMA varargslist
Rule 16    fpdef -> NAME
Rule 17    fpdef -> LPAREN fplist RPAREN
Rule 18    fplist -> fpdef
Rule 19    fplist -> fpdef COMMA fplist
Rule 20    stmt -> simple_stmt
Rule 21    stmt -> compound_stmt
Rule 22    simple_stmt -> small_stmts NEWLINE
Rule 23    small_stmts -> small_stmt
Rule 24    small_stmt -> flow_stmt Marker
Rule 25    small_stmt -> expr_stmt Marker
Rule 26    small_stmt -> print_stmt Marker
Rule 27    expr_stmt -> test EQUAL test
Rule 28    expr_stmt -> test EQUAL function_call
Rule 29    print_stmt -> PRINT
Rule 30    print_stmt -> PRINT testlist
Rule 31    flow_stmt -> break_stmt Marker
Rule 32    flow_stmt -> return_stmt Marker
Rule 33    flow_stmt -> continue_stmt Marker
Rule 34    break_stmt -> BREAK
Rule 35    continue_stmt -> CONTINUE
Rule 36    return_stmt -> RETURN
Rule 37    return_stmt -> RETURN test
Rule 38    compound_stmt -> if_stmt Marker
Rule 39    compound_stmt -> for_stmt Marker
Rule 40    compound_stmt -> while_stmt Marker
Rule 41    compound_stmt -> funcdef Marker
Rule 42    compound_stmt -> function_call Marker
Rule 43    if_stmt -> IF test COLON MarkerIf suite
Rule 44    if_stmt -> IF test COLON MarkerIf suite ELSE COLON MarkerElse suite
Rule 45    while_stmt -> WHILE Marker test COLON MarkerWhile suite
Rule 46    Marker -> <empty>
Rule 47    MarkerWhile -> <empty>
Rule 48    MarkerIf -> <empty>
Rule 49    MarkerElse -> <empty>
Rule 50    for_stmt -> FOR atom IN test COLON MarkerFor suite
Rule 51    MarkerFor -> <empty>
Rule 52    suite -> simple_stmt
Rule 53    suite -> NEWLINE INDENT stmts DEDENT
Rule 54    test -> test_expr
Rule 55    test_expr -> or_test
Rule 56    or_test -> and_test
Rule 57    or_test -> and_test OR or_test
Rule 58    and_test -> not_test
Rule 59    and_test -> not_test AND and_test
Rule 60    not_test -> NOT not_test
Rule 61    not_test -> comparison
Rule 62    comparison -> expr
Rule 63    comparison -> expr comp_op expr
Rule 64    comp_op -> LESS
Rule 65    comp_op -> GREATER
Rule 66    comp_op -> EQEQUAL
Rule 67    comp_op -> GREATEREQUAL
Rule 68    comp_op -> LESSEQUAL
Rule 69    comp_op -> NOTEQUAL
Rule 70    expr -> xor_expr
Rule 71    expr -> xor_expr VBAR expr
Rule 72    xor_expr -> and_expr
Rule 73    xor_expr -> and_expr CIRCUMFLEX xor_expr
Rule 74    and_expr -> shift_expr
Rule 75    and_expr -> shift_expr AMPER and_expr
Rule 76    shift_expr -> arith_expr
Rule 77    shift_expr -> arith_expr LEFTSHIFT shift_expr
Rule 78    shift_expr -> arith_expr RIGHTSHIFT shift_expr
Rule 79    arith_expr -> term
Rule 80    arith_expr -> term PLUS arith_expr
Rule 81    arith_expr -> term MINUS arith_expr
Rule 82    term -> factor
Rule 83    term -> factor STAR term
Rule 84    term -> factor SLASH term
Rule 85    term -> factor PERCENT term
Rule 86    factor -> power
Rule 87    factor -> PLUS factor
Rule 88    factor -> MINUS factor
Rule 89    power -> atom
Rule 90    power -> atom LSQB test RSQB
Rule 91    atom -> NAME
Rule 92    atom -> NUMBER
Rule 93    atom -> STRING
Rule 94    atom -> TRIPLESTRING
Rule 95    atom -> FNUMBER
Rule 96    atom -> LSQB RSQB
Rule 97    atom -> LSQB listmaker RSQB
Rule 98    atom -> LPAREN RPAREN
Rule 99    atom -> LPAREN testlist_comp RPAREN
Rule 100   listmaker -> test
Rule 101   listmaker -> test COMMA listmaker
Rule 102   testlist_comp -> test
Rule 103   testlist_comp -> test COMMA testlist_comp
Rule 104   testlist -> test
Rule 105   testlist -> test COMMA testlist
Rule 106   stmts -> stmt stmts
Rule 107   stmts -> stmt Marker

Terminals, with rules where they appear

AMPER                : 75
AND                  : 59
AS                   : 
ASSERT               : 
AT                   : 
BACKQUOTE            : 
BINARYNUMBER         : 
BREAK                : 34
CIRCUMFLEX           : 73
CLASS                : 
COLON                : 5 43 44 44 45 50
COMMA                : 14 15 19 101 103 105
CONTINUE             : 35
DEDENT               : 53
DEF                  : 5
DEL                  : 
DOT                  : 
ELIF                 : 
ELSE                 : 44
ENDMARKER            : 1
EQEQUAL              : 66
EQUAL                : 13 15 27 28
EXCEPT               : 
EXEC                 : 
FINALLY              : 
FNUMBER              : 95
FOR                  : 50
FROM                 : 
GLOBAL               : 
GREATER              : 65
GREATEREQUAL         : 67
HEXADECIMALNUMBER    : 
IF                   : 43 44
IMPORT               : 
IN                   : 50
INDENT               : 53
INUMBER              : 
IS                   : 
LAMBDA               : 
LBRACE               : 
LEFTSHIFT            : 77
LESS                 : 64
LESSEQUAL            : 68
LPAREN               : 8 9 10 11 17 98 99
LSQB                 : 90 96 97
MINEQUAL             : 
MINUS                : 81 88
NAME                 : 5 10 11 16 91
NEWLINE              : 2 22 53
NOT                  : 60
NOTEQUAL             : 69
NUMBER               : 92
OCTALNUMBER          : 
OR                   : 57
PASS                 : 
PERCENT              : 85
PERCENTEQUAL         : 
PLUS                 : 80 87
PLUSEQUAL            : 
PRINT                : 29 30
RAISE                : 
RAWSTRING            : 
RBRACE               : 
RETURN               : 36 37
RIGHTSHIFT           : 78
RPAREN               : 8 9 10 11 17 98 99
RSQB                 : 90 96 97
SEMI                 : 
SLASH                : 84
SLASHEQUAL           : 
SLASHSLASH           : 
SLASHSLASHEQUAL      : 
STAR                 : 83
STAREQUAL            : 
STARSTAR             : 
STARSTAREQUAL        : 
STRING               : 93
TILDE                : 
TRIPLESTRING         : 94
TRY                  : 
UNICODESTRING        : 
VBAR                 : 71
WHILE                : 45
WITH                 : 
WS                   : 
YIELD                : 
error                : 

Nonterminals, with rules where they appear

Marker               : 24 25 26 31 32 33 38 39 40 41 42 45 107
MarkerArg            : 5
MarkerElse           : 44
MarkerFor            : 50
MarkerIf             : 43 44
MarkerScope          : 5
MarkerWhile          : 45
and_expr             : 72 73 75
and_test             : 56 57 59
arith_expr           : 76 77 78 80 81
atom                 : 50 89 90
break_stmt           : 31
comp_op              : 63
comparison           : 61
compound_stmt        : 21
continue_stmt        : 33
expr                 : 62 63 63 71
expr_stmt            : 25
factor               : 82 83 84 85 87 88
file_input           : 0
flow_stmt            : 24
for_stmt             : 39
fpdef                : 12 13 14 15 18 19
fplist               : 17 19
funcdef              : 41
function_call        : 28 42
if_stmt              : 38
listmaker            : 97 101
not_test             : 58 59 60
or_test              : 55 57
parameters           : 5
power                : 86
print_stmt           : 26
return_stmt          : 32
shift_expr           : 74 75 77 78
simple_stmt          : 20 52
single_stmt          : 1 2 4
small_stmt           : 23
small_stmts          : 22
stmt                 : 4 106 107
stmts                : 53 106
suite                : 5 43 44 44 45 50
term                 : 79 80 81 83 84 85
test                 : 13 15 27 27 28 37 43 44 45 50 90 100 101 102 103 104 105
test_expr            : 54
testlist             : 11 30 105
testlist_comp        : 99 103
varargslist          : 9 14 15
while_stmt           : 40
xor_expr             : 70 71 73

Parsing method: LALR

state 0

    (0) S' -> . file_input
    (1) file_input -> . single_stmt ENDMARKER
    (2) single_stmt -> . single_stmt NEWLINE
    (3) single_stmt -> .
    (4) single_stmt -> . single_stmt stmt

    ENDMARKER       reduce using rule 3 (single_stmt -> .)
    NEWLINE         reduce using rule 3 (single_stmt -> .)
    IF              reduce using rule 3 (single_stmt -> .)
    FOR             reduce using rule 3 (single_stmt -> .)
    WHILE           reduce using rule 3 (single_stmt -> .)
    DEF             reduce using rule 3 (single_stmt -> .)
    NAME            reduce using rule 3 (single_stmt -> .)
    PRINT           reduce using rule 3 (single_stmt -> .)
    BREAK           reduce using rule 3 (single_stmt -> .)
    RETURN          reduce using rule 3 (single_stmt -> .)
    CONTINUE        reduce using rule 3 (single_stmt -> .)
    NOT             reduce using rule 3 (single_stmt -> .)
    PLUS            reduce using rule 3 (single_stmt -> .)
    MINUS           reduce using rule 3 (single_stmt -> .)
    NUMBER          reduce using rule 3 (single_stmt -> .)
    STRING          reduce using rule 3 (single_stmt -> .)
    TRIPLESTRING    reduce using rule 3 (single_stmt -> .)
    FNUMBER         reduce using rule 3 (single_stmt -> .)
    LSQB            reduce using rule 3 (single_stmt -> .)
    LPAREN          reduce using rule 3 (single_stmt -> .)

    file_input                     shift and go to state 1
    single_stmt                    shift and go to state 2

state 1

    (0) S' -> file_input .



state 2

    (1) file_input -> single_stmt . ENDMARKER
    (2) single_stmt -> single_stmt . NEWLINE
    (4) single_stmt -> single_stmt . stmt
    (20) stmt -> . simple_stmt
    (21) stmt -> . compound_stmt
    (22) simple_stmt -> . small_stmts NEWLINE
    (38) compound_stmt -> . if_stmt Marker
    (39) compound_stmt -> . for_stmt Marker
    (40) compound_stmt -> . while_stmt Marker
    (41) compound_stmt -> . funcdef Marker
    (42) compound_stmt -> . function_call Marker
    (23) small_stmts -> . small_stmt
    (43) if_stmt -> . IF test COLON MarkerIf suite
    (44) if_stmt -> . IF test COLON MarkerIf suite ELSE COLON MarkerElse suite
    (50) for_stmt -> . FOR atom IN test COLON MarkerFor suite
    (45) while_stmt -> . WHILE Marker test COLON MarkerWhile suite
    (5) funcdef -> . DEF NAME MarkerScope parameters MarkerArg COLON suite
    (10) function_call -> . NAME LPAREN RPAREN
    (11) function_call -> . NAME LPAREN testlist RPAREN
    (24) small_stmt -> . flow_stmt Marker
    (25) small_stmt -> . expr_stmt Marker
    (26) small_stmt -> . print_stmt Marker
    (31) flow_stmt -> . break_stmt Marker
    (32) flow_stmt -> . return_stmt Marker
    (33) flow_stmt -> . continue_stmt Marker
    (27) expr_stmt -> . test EQUAL test
    (28) expr_stmt -> . test EQUAL function_call
    (29) print_stmt -> . PRINT
    (30) print_stmt -> . PRINT testlist
    (34) break_stmt -> . BREAK
    (36) return_stmt -> . RETURN
    (37) return_stmt -> . RETURN test
    (35) continue_stmt -> . CONTINUE
    (54) test -> . test_expr
    (55) test_expr -> . or_test
    (56) or_test -> . and_test
    (57) or_test -> . and_test OR or_test
    (58) and_test -> . not_test
    (59) and_test -> . not_test AND and_test
    (60) not_test -> . NOT not_test
    (61) not_test -> . comparison
    (62) comparison -> . expr
    (63) comparison -> . expr comp_op expr
    (70) expr -> . xor_expr
    (71) expr -> . xor_expr VBAR expr
    (72) xor_expr -> . and_expr
    (73) xor_expr -> . and_expr CIRCUMFLEX xor_expr
    (74) and_expr -> . shift_expr
    (75) and_expr -> . shift_expr AMPER and_expr
    (76) shift_expr -> . arith_expr
    (77) shift_expr -> . arith_expr LEFTSHIFT shift_expr
    (78) shift_expr -> . arith_expr RIGHTSHIFT shift_expr
    (79) arith_expr -> . term
    (80) arith_expr -> . term PLUS arith_expr
    (81) arith_expr -> . term MINUS arith_expr
    (82) term -> . factor
    (83) term -> . factor STAR term
    (84) term -> . factor SLASH term
    (85) term -> . factor PERCENT term
    (86) factor -> . power
    (87) factor -> . PLUS factor
    (88) factor -> . MINUS factor
    (89) power -> . atom
    (90) power -> . atom LSQB test RSQB
    (91) atom -> . NAME
    (92) atom -> . NUMBER
    (93) atom -> . STRING
    (94) atom -> . TRIPLESTRING
    (95) atom -> . FNUMBER
    (96) atom -> . LSQB RSQB
    (97) atom -> . LSQB listmaker RSQB
    (98) atom -> . LPAREN RPAREN
    (99) atom -> . LPAREN testlist_comp RPAREN

    ENDMARKER       shift and go to state 3
    NEWLINE         shift and go to state 18
    IF              shift and go to state 41
    FOR             shift and go to state 29
    WHILE           shift and go to state 7
    DEF             shift and go to state 13
    NAME            shift and go to state 4
    PRINT           shift and go to state 10
    BREAK           shift and go to state 48
    RETURN          shift and go to state 11
    CONTINUE        shift and go to state 50
    NOT             shift and go to state 33
    PLUS            shift and go to state 20
    MINUS           shift and go to state 12
    NUMBER          shift and go to state 53
    STRING          shift and go to state 28
    TRIPLESTRING    shift and go to state 51
    FNUMBER         shift and go to state 31
    LSQB            shift and go to state 39
    LPAREN          shift and go to state 36

    small_stmt                     shift and go to state 5
    function_call                  shift and go to state 6
    return_stmt                    shift and go to state 8
    not_test                       shift and go to state 9
    flow_stmt                      shift and go to state 14
    xor_expr                       shift and go to state 15
    continue_stmt                  shift and go to state 17
    shift_expr                     shift and go to state 19
    print_stmt                     shift and go to state 21
    test                           shift and go to state 22
    compound_stmt                  shift and go to state 24
    and_expr                       shift and go to state 25
    break_stmt                     shift and go to state 26
    power                          shift and go to state 16
    simple_stmt                    shift and go to state 30
    factor                         shift and go to state 27
    stmt                           shift and go to state 32
    for_stmt                       shift and go to state 34
    and_test                       shift and go to state 35
    atom                           shift and go to state 37
    funcdef                        shift and go to state 38
    expr_stmt                      shift and go to state 40
    test_expr                      shift and go to state 23
    comparison                     shift and go to state 42
    term                           shift and go to state 43
    if_stmt                        shift and go to state 44
    arith_expr                     shift and go to state 45
    expr                           shift and go to state 46
    or_test                        shift and go to state 47
    while_stmt                     shift and go to state 49
    small_stmts                    shift and go to state 52

state 3

    (1) file_input -> single_stmt ENDMARKER .

    $end            reduce using rule 1 (file_input -> single_stmt ENDMARKER .)


state 4

    (10) function_call -> NAME . LPAREN RPAREN
    (11) function_call -> NAME . LPAREN testlist RPAREN
    (91) atom -> NAME .

    LPAREN          shift and go to state 54
    LSQB            reduce using rule 91 (atom -> NAME .)
    STAR            reduce using rule 91 (atom -> NAME .)
    SLASH           reduce using rule 91 (atom -> NAME .)
    PERCENT         reduce using rule 91 (atom -> NAME .)
    PLUS            reduce using rule 91 (atom -> NAME .)
    MINUS           reduce using rule 91 (atom -> NAME .)
    LEFTSHIFT       reduce using rule 91 (atom -> NAME .)
    RIGHTSHIFT      reduce using rule 91 (atom -> NAME .)
    AMPER           reduce using rule 91 (atom -> NAME .)
    CIRCUMFLEX      reduce using rule 91 (atom -> NAME .)
    VBAR            reduce using rule 91 (atom -> NAME .)
    LESS            reduce using rule 91 (atom -> NAME .)
    GREATER         reduce using rule 91 (atom -> NAME .)
    EQEQUAL         reduce using rule 91 (atom -> NAME .)
    GREATEREQUAL    reduce using rule 91 (atom -> NAME .)
    LESSEQUAL       reduce using rule 91 (atom -> NAME .)
    NOTEQUAL        reduce using rule 91 (atom -> NAME .)
    AND             reduce using rule 91 (atom -> NAME .)
    OR              reduce using rule 91 (atom -> NAME .)
    EQUAL           reduce using rule 91 (atom -> NAME .)
    NEWLINE         reduce using rule 91 (atom -> NAME .)


state 5

    (23) small_stmts -> small_stmt .

    NEWLINE         reduce using rule 23 (small_stmts -> small_stmt .)


state 6

    (42) compound_stmt -> function_call . Marker
    (46) Marker -> .

    ENDMARKER       reduce using rule 46 (Marker -> .)
    NEWLINE         reduce using rule 46 (Marker -> .)
    IF              reduce using rule 46 (Marker -> .)
    FOR             reduce using rule 46 (Marker -> .)
    WHILE           reduce using rule 46 (Marker -> .)
    DEF             reduce using rule 46 (Marker -> .)
    NAME            reduce using rule 46 (Marker -> .)
    PRINT           reduce using rule 46 (Marker -> .)
    BREAK           reduce using rule 46 (Marker -> .)
    RETURN          reduce using rule 46 (Marker -> .)
    CONTINUE        reduce using rule 46 (Marker -> .)
    NOT             reduce using rule 46 (Marker -> .)
    PLUS            reduce using rule 46 (Marker -> .)
    MINUS           reduce using rule 46 (Marker -> .)
    NUMBER          reduce using rule 46 (Marker -> .)
    STRING          reduce using rule 46 (Marker -> .)
    TRIPLESTRING    reduce using rule 46 (Marker -> .)
    FNUMBER         reduce using rule 46 (Marker -> .)
    LSQB            reduce using rule 46 (Marker -> .)
    LPAREN          reduce using rule 46 (Marker -> .)
    DEDENT          reduce using rule 46 (Marker -> .)

    Marker                         shift and go to state 55

state 7

    (45) while_stmt -> WHILE . Marker test COLON MarkerWhile suite
    (46) Marker -> .

    NOT             reduce using rule 46 (Marker -> .)
    PLUS            reduce using rule 46 (Marker -> .)
    MINUS           reduce using rule 46 (Marker -> .)
    NAME            reduce using rule 46 (Marker -> .)
    NUMBER          reduce using rule 46 (Marker -> .)
    STRING          reduce using rule 46 (Marker -> .)
    TRIPLESTRING    reduce using rule 46 (Marker -> .)
    FNUMBER         reduce using rule 46 (Marker -> .)
    LSQB            reduce using rule 46 (Marker -> .)
    LPAREN          reduce using rule 46 (Marker -> .)

    Marker                         shift and go to state 56

state 8

    (32) flow_stmt -> return_stmt . Marker
    (46) Marker -> .

    NEWLINE         reduce using rule 46 (Marker -> .)

    Marker                         shift and go to state 57

state 9

    (58) and_test -> not_test .
    (59) and_test -> not_test . AND and_test

    OR              reduce using rule 58 (and_test -> not_test .)
    RSQB            reduce using rule 58 (and_test -> not_test .)
    EQUAL           reduce using rule 58 (and_test -> not_test .)
    COLON           reduce using rule 58 (and_test -> not_test .)
    COMMA           reduce using rule 58 (and_test -> not_test .)
    NEWLINE         reduce using rule 58 (and_test -> not_test .)
    RPAREN          reduce using rule 58 (and_test -> not_test .)
    AND             shift and go to state 58


state 10

    (29) print_stmt -> PRINT .
    (30) print_stmt -> PRINT . testlist
    (104) testlist -> . test
    (105) testlist -> . test COMMA testlist
    (54) test -> . test_expr
    (55) test_expr -> . or_test
    (56) or_test -> . and_test
    (57) or_test -> . and_test OR or_test
    (58) and_test -> . not_test
    (59) and_test -> . not_test AND and_test
    (60) not_test -> . NOT not_test
    (61) not_test -> . comparison
    (62) comparison -> . expr
    (63) comparison -> . expr comp_op expr
    (70) expr -> . xor_expr
    (71) expr -> . xor_expr VBAR expr
    (72) xor_expr -> . and_expr
    (73) xor_expr -> . and_expr CIRCUMFLEX xor_expr
    (74) and_expr -> . shift_expr
    (75) and_expr -> . shift_expr AMPER and_expr
    (76) shift_expr -> . arith_expr
    (77) shift_expr -> . arith_expr LEFTSHIFT shift_expr
    (78) shift_expr -> . arith_expr RIGHTSHIFT shift_expr
    (79) arith_expr -> . term
    (80) arith_expr -> . term PLUS arith_expr
    (81) arith_expr -> . term MINUS arith_expr
    (82) term -> . factor
    (83) term -> . factor STAR term
    (84) term -> . factor SLASH term
    (85) term -> . factor PERCENT term
    (86) factor -> . power
    (87) factor -> . PLUS factor
    (88) factor -> . MINUS factor
    (89) power -> . atom
    (90) power -> . atom LSQB test RSQB
    (91) atom -> . NAME
    (92) atom -> . NUMBER
    (93) atom -> . STRING
    (94) atom -> . TRIPLESTRING
    (95) atom -> . FNUMBER
    (96) atom -> . LSQB RSQB
    (97) atom -> . LSQB listmaker RSQB
    (98) atom -> . LPAREN RPAREN
    (99) atom -> . LPAREN testlist_comp RPAREN

    NEWLINE         reduce using rule 29 (print_stmt -> PRINT .)
    NOT             shift and go to state 33
    PLUS            shift and go to state 20
    MINUS           shift and go to state 12
    NAME            shift and go to state 61
    NUMBER          shift and go to state 53
    STRING          shift and go to state 28
    TRIPLESTRING    shift and go to state 51
    FNUMBER         shift and go to state 31
    LSQB            shift and go to state 39
    LPAREN          shift and go to state 36

    comparison                     shift and go to state 42
    power                          shift and go to state 16
    arith_expr                     shift and go to state 45
    expr                           shift and go to state 46
    atom                           shift and go to state 37
    testlist                       shift and go to state 60
    or_test                        shift and go to state 47
    and_test                       shift and go to state 35
    shift_expr                     shift and go to state 19
    term                           shift and go to state 43
    not_test                       shift and go to state 9
    factor                         shift and go to state 27
    test                           shift and go to state 59
    xor_expr                       shift and go to state 15
    and_expr                       shift and go to state 25
    test_expr                      shift and go to state 23

state 11

    (36) return_stmt -> RETURN .
    (37) return_stmt -> RETURN . test
    (54) test -> . test_expr
    (55) test_expr -> . or_test
    (56) or_test -> . and_test
    (57) or_test -> . and_test OR or_test
    (58) and_test -> . not_test
    (59) and_test -> . not_test AND and_test
    (60) not_test -> . NOT not_test
    (61) not_test -> . comparison
    (62) comparison -> . expr
    (63) comparison -> . expr comp_op expr
    (70) expr -> . xor_expr
    (71) expr -> . xor_expr VBAR expr
    (72) xor_expr -> . and_expr
    (73) xor_expr -> . and_expr CIRCUMFLEX xor_expr
    (74) and_expr -> . shift_expr
    (75) and_expr -> . shift_expr AMPER and_expr
    (76) shift_expr -> . arith_expr
    (77) shift_expr -> . arith_expr LEFTSHIFT shift_expr
    (78) shift_expr -> . arith_expr RIGHTSHIFT shift_expr
    (79) arith_expr -> . term
    (80) arith_expr -> . term PLUS arith_expr
    (81) arith_expr -> . term MINUS arith_expr
    (82) term -> . factor
    (83) term -> . factor STAR term
    (84) term -> . factor SLASH term
    (85) term -> . factor PERCENT term
    (86) factor -> . power
    (87) factor -> . PLUS factor
    (88) factor -> . MINUS factor
    (89) power -> . atom
    (90) power -> . atom LSQB test RSQB
    (91) atom -> . NAME
    (92) atom -> . NUMBER
    (93) atom -> . STRING
    (94) atom -> . TRIPLESTRING
    (95) atom -> . FNUMBER
    (96) atom -> . LSQB RSQB
    (97) atom -> . LSQB listmaker RSQB
    (98) atom -> . LPAREN RPAREN
    (99) atom -> . LPAREN testlist_comp RPAREN

    NEWLINE         reduce using rule 36 (return_stmt -> RETURN .)
    NOT             shift and go to state 33
    PLUS            shift and go to state 20
    MINUS           shift and go to state 12
    NAME            shift and go to state 61
    NUMBER          shift and go to state 53
    STRING          shift and go to state 28
    TRIPLESTRING    shift and go to state 51
    FNUMBER         shift and go to state 31
    LSQB            shift and go to state 39
    LPAREN          shift and go to state 36

    comparison                     shift and go to state 42
    power                          shift and go to state 16
    arith_expr                     shift and go to state 45
    expr                           shift and go to state 46
    atom                           shift and go to state 37
    shift_expr                     shift and go to state 19
    or_test                        shift and go to state 47
    and_test                       shift and go to state 35
    term                           shift and go to state 43
    not_test                       shift and go to state 9
    factor                         shift and go to state 27
    test                           shift and go to state 62
    xor_expr                       shift and go to state 15
    and_expr                       shift and go to state 25
    test_expr                      shift and go to state 23

state 12

    (88) factor -> MINUS . factor
    (86) factor -> . power
    (87) factor -> . PLUS factor
    (88) factor -> . MINUS factor
    (89) power -> . atom
    (90) power -> . atom LSQB test RSQB
    (91) atom -> . NAME
    (92) atom -> . NUMBER
    (93) atom -> . STRING
    (94) atom -> . TRIPLESTRING
    (95) atom -> . FNUMBER
    (96) atom -> . LSQB RSQB
    (97) atom -> . LSQB listmaker RSQB
    (98) atom -> . LPAREN RPAREN
    (99) atom -> . LPAREN testlist_comp RPAREN

    PLUS            shift and go to state 20
    MINUS           shift and go to state 12
    NAME            shift and go to state 61
    NUMBER          shift and go to state 53
    STRING          shift and go to state 28
    TRIPLESTRING    shift and go to state 51
    FNUMBER         shift and go to state 31
    LSQB            shift and go to state 39
    LPAREN          shift and go to state 36

    factor                         shift and go to state 63
    power                          shift and go to state 16
    atom                           shift and go to state 37

state 13

    (5) funcdef -> DEF . NAME MarkerScope parameters MarkerArg COLON suite

    NAME            shift and go to state 64


state 14

    (24) small_stmt -> flow_stmt . Marker
    (46) Marker -> .

    NEWLINE         reduce using rule 46 (Marker -> .)

    Marker                         shift and go to state 65

state 15

    (70) expr -> xor_expr .
    (71) expr -> xor_expr . VBAR expr

    LESS            reduce using rule 70 (expr -> xor_expr .)
    GREATER         reduce using rule 70 (expr -> xor_expr .)
    EQEQUAL         reduce using rule 70 (expr -> xor_expr .)
    GREATEREQUAL    reduce using rule 70 (expr -> xor_expr .)
    LESSEQUAL       reduce using rule 70 (expr -> xor_expr .)
    NOTEQUAL        reduce using rule 70 (expr -> xor_expr .)
    AND             reduce using rule 70 (expr -> xor_expr .)
    OR              reduce using rule 70 (expr -> xor_expr .)
    NEWLINE         reduce using rule 70 (expr -> xor_expr .)
    RSQB            reduce using rule 70 (expr -> xor_expr .)
    EQUAL           reduce using rule 70 (expr -> xor_expr .)
    COMMA           reduce using rule 70 (expr -> xor_expr .)
    RPAREN          reduce using rule 70 (expr -> xor_expr .)
    COLON           reduce using rule 70 (expr -> xor_expr .)
    VBAR            shift and go to state 66


state 16

    (86) factor -> power .

    STAR            reduce using rule 86 (factor -> power .)
    SLASH           reduce using rule 86 (factor -> power .)
    PERCENT         reduce using rule 86 (factor -> power .)
    PLUS            reduce using rule 86 (factor -> power .)
    MINUS           reduce using rule 86 (factor -> power .)
    LEFTSHIFT       reduce using rule 86 (factor -> power .)
    RIGHTSHIFT      reduce using rule 86 (factor -> power .)
    AMPER           reduce using rule 86 (factor -> power .)
    CIRCUMFLEX      reduce using rule 86 (factor -> power .)
    VBAR            reduce using rule 86 (factor -> power .)
    LESS            reduce using rule 86 (factor -> power .)
    GREATER         reduce using rule 86 (factor -> power .)
    EQEQUAL         reduce using rule 86 (factor -> power .)
    GREATEREQUAL    reduce using rule 86 (factor -> power .)
    LESSEQUAL       reduce using rule 86 (factor -> power .)
    NOTEQUAL        reduce using rule 86 (factor -> power .)
    AND             reduce using rule 86 (factor -> power .)
    OR              reduce using rule 86 (factor -> power .)
    COMMA           reduce using rule 86 (factor -> power .)
    RPAREN          reduce using rule 86 (factor -> power .)
    EQUAL           reduce using rule 86 (factor -> power .)
    NEWLINE         reduce using rule 86 (factor -> power .)
    RSQB            reduce using rule 86 (factor -> power .)
    COLON           reduce using rule 86 (factor -> power .)


state 17

    (33) flow_stmt -> continue_stmt . Marker
    (46) Marker -> .

    NEWLINE         reduce using rule 46 (Marker -> .)

    Marker                         shift and go to state 67

state 18

    (2) single_stmt -> single_stmt NEWLINE .

    ENDMARKER       reduce using rule 2 (single_stmt -> single_stmt NEWLINE .)
    NEWLINE         reduce using rule 2 (single_stmt -> single_stmt NEWLINE .)
    IF              reduce using rule 2 (single_stmt -> single_stmt NEWLINE .)
    FOR             reduce using rule 2 (single_stmt -> single_stmt NEWLINE .)
    WHILE           reduce using rule 2 (single_stmt -> single_stmt NEWLINE .)
    DEF             reduce using rule 2 (single_stmt -> single_stmt NEWLINE .)
    NAME            reduce using rule 2 (single_stmt -> single_stmt NEWLINE .)
    PRINT           reduce using rule 2 (single_stmt -> single_stmt NEWLINE .)
    BREAK           reduce using rule 2 (single_stmt -> single_stmt NEWLINE .)
    RETURN          reduce using rule 2 (single_stmt -> single_stmt NEWLINE .)
    CONTINUE        reduce using rule 2 (single_stmt -> single_stmt NEWLINE .)
    NOT             reduce using rule 2 (single_stmt -> single_stmt NEWLINE .)
    PLUS            reduce using rule 2 (single_stmt -> single_stmt NEWLINE .)
    MINUS           reduce using rule 2 (single_stmt -> single_stmt NEWLINE .)
    NUMBER          reduce using rule 2 (single_stmt -> single_stmt NEWLINE .)
    STRING          reduce using rule 2 (single_stmt -> single_stmt NEWLINE .)
    TRIPLESTRING    reduce using rule 2 (single_stmt -> single_stmt NEWLINE .)
    FNUMBER         reduce using rule 2 (single_stmt -> single_stmt NEWLINE .)
    LSQB            reduce using rule 2 (single_stmt -> single_stmt NEWLINE .)
    LPAREN          reduce using rule 2 (single_stmt -> single_stmt NEWLINE .)


state 19

    (74) and_expr -> shift_expr .
    (75) and_expr -> shift_expr . AMPER and_expr

    CIRCUMFLEX      reduce using rule 74 (and_expr -> shift_expr .)
    VBAR            reduce using rule 74 (and_expr -> shift_expr .)
    LESS            reduce using rule 74 (and_expr -> shift_expr .)
    GREATER         reduce using rule 74 (and_expr -> shift_expr .)
    EQEQUAL         reduce using rule 74 (and_expr -> shift_expr .)
    GREATEREQUAL    reduce using rule 74 (and_expr -> shift_expr .)
    LESSEQUAL       reduce using rule 74 (and_expr -> shift_expr .)
    NOTEQUAL        reduce using rule 74 (and_expr -> shift_expr .)
    AND             reduce using rule 74 (and_expr -> shift_expr .)
    OR              reduce using rule 74 (and_expr -> shift_expr .)
    COMMA           reduce using rule 74 (and_expr -> shift_expr .)
    RSQB            reduce using rule 74 (and_expr -> shift_expr .)
    EQUAL           reduce using rule 74 (and_expr -> shift_expr .)
    RPAREN          reduce using rule 74 (and_expr -> shift_expr .)
    NEWLINE         reduce using rule 74 (and_expr -> shift_expr .)
    COLON           reduce using rule 74 (and_expr -> shift_expr .)
    AMPER           shift and go to state 68


state 20

    (87) factor -> PLUS . factor
    (86) factor -> . power
    (87) factor -> . PLUS factor
    (88) factor -> . MINUS factor
    (89) power -> . atom
    (90) power -> . atom LSQB test RSQB
    (91) atom -> . NAME
    (92) atom -> . NUMBER
    (93) atom -> . STRING
    (94) atom -> . TRIPLESTRING
    (95) atom -> . FNUMBER
    (96) atom -> . LSQB RSQB
    (97) atom -> . LSQB listmaker RSQB
    (98) atom -> . LPAREN RPAREN
    (99) atom -> . LPAREN testlist_comp RPAREN

    PLUS            shift and go to state 20
    MINUS           shift and go to state 12
    NAME            shift and go to state 61
    NUMBER          shift and go to state 53
    STRING          shift and go to state 28
    TRIPLESTRING    shift and go to state 51
    FNUMBER         shift and go to state 31
    LSQB            shift and go to state 39
    LPAREN          shift and go to state 36

    factor                         shift and go to state 69
    power                          shift and go to state 16
    atom                           shift and go to state 37

state 21

    (26) small_stmt -> print_stmt . Marker
    (46) Marker -> .

    NEWLINE         reduce using rule 46 (Marker -> .)

    Marker                         shift and go to state 70

state 22

    (27) expr_stmt -> test . EQUAL test
    (28) expr_stmt -> test . EQUAL function_call

    EQUAL           shift and go to state 71


state 23

    (54) test -> test_expr .

    COMMA           reduce using rule 54 (test -> test_expr .)
    RPAREN          reduce using rule 54 (test -> test_expr .)
    NEWLINE         reduce using rule 54 (test -> test_expr .)
    COLON           reduce using rule 54 (test -> test_expr .)
    EQUAL           reduce using rule 54 (test -> test_expr .)
    RSQB            reduce using rule 54 (test -> test_expr .)


state 24

    (21) stmt -> compound_stmt .

    IF              reduce using rule 21 (stmt -> compound_stmt .)
    FOR             reduce using rule 21 (stmt -> compound_stmt .)
    WHILE           reduce using rule 21 (stmt -> compound_stmt .)
    DEF             reduce using rule 21 (stmt -> compound_stmt .)
    NAME            reduce using rule 21 (stmt -> compound_stmt .)
    PRINT           reduce using rule 21 (stmt -> compound_stmt .)
    BREAK           reduce using rule 21 (stmt -> compound_stmt .)
    RETURN          reduce using rule 21 (stmt -> compound_stmt .)
    CONTINUE        reduce using rule 21 (stmt -> compound_stmt .)
    NOT             reduce using rule 21 (stmt -> compound_stmt .)
    PLUS            reduce using rule 21 (stmt -> compound_stmt .)
    MINUS           reduce using rule 21 (stmt -> compound_stmt .)
    NUMBER          reduce using rule 21 (stmt -> compound_stmt .)
    STRING          reduce using rule 21 (stmt -> compound_stmt .)
    TRIPLESTRING    reduce using rule 21 (stmt -> compound_stmt .)
    FNUMBER         reduce using rule 21 (stmt -> compound_stmt .)
    LSQB            reduce using rule 21 (stmt -> compound_stmt .)
    LPAREN          reduce using rule 21 (stmt -> compound_stmt .)
    DEDENT          reduce using rule 21 (stmt -> compound_stmt .)
    ENDMARKER       reduce using rule 21 (stmt -> compound_stmt .)
    NEWLINE         reduce using rule 21 (stmt -> compound_stmt .)


state 25

    (72) xor_expr -> and_expr .
    (73) xor_expr -> and_expr . CIRCUMFLEX xor_expr

    VBAR            reduce using rule 72 (xor_expr -> and_expr .)
    LESS            reduce using rule 72 (xor_expr -> and_expr .)
    GREATER         reduce using rule 72 (xor_expr -> and_expr .)
    EQEQUAL         reduce using rule 72 (xor_expr -> and_expr .)
    GREATEREQUAL    reduce using rule 72 (xor_expr -> and_expr .)
    LESSEQUAL       reduce using rule 72 (xor_expr -> and_expr .)
    NOTEQUAL        reduce using rule 72 (xor_expr -> and_expr .)
    AND             reduce using rule 72 (xor_expr -> and_expr .)
    OR              reduce using rule 72 (xor_expr -> and_expr .)
    EQUAL           reduce using rule 72 (xor_expr -> and_expr .)
    RSQB            reduce using rule 72 (xor_expr -> and_expr .)
    COMMA           reduce using rule 72 (xor_expr -> and_expr .)
    NEWLINE         reduce using rule 72 (xor_expr -> and_expr .)
    RPAREN          reduce using rule 72 (xor_expr -> and_expr .)
    COLON           reduce using rule 72 (xor_expr -> and_expr .)
    CIRCUMFLEX      shift and go to state 72


state 26

    (31) flow_stmt -> break_stmt . Marker
    (46) Marker -> .

    NEWLINE         reduce using rule 46 (Marker -> .)

    Marker                         shift and go to state 73

state 27

    (82) term -> factor .
    (83) term -> factor . STAR term
    (84) term -> factor . SLASH term
    (85) term -> factor . PERCENT term

    PLUS            reduce using rule 82 (term -> factor .)
    MINUS           reduce using rule 82 (term -> factor .)
    LEFTSHIFT       reduce using rule 82 (term -> factor .)
    RIGHTSHIFT      reduce using rule 82 (term -> factor .)
    AMPER           reduce using rule 82 (term -> factor .)
    CIRCUMFLEX      reduce using rule 82 (term -> factor .)
    VBAR            reduce using rule 82 (term -> factor .)
    LESS            reduce using rule 82 (term -> factor .)
    GREATER         reduce using rule 82 (term -> factor .)
    EQEQUAL         reduce using rule 82 (term -> factor .)
    GREATEREQUAL    reduce using rule 82 (term -> factor .)
    LESSEQUAL       reduce using rule 82 (term -> factor .)
    NOTEQUAL        reduce using rule 82 (term -> factor .)
    AND             reduce using rule 82 (term -> factor .)
    OR              reduce using rule 82 (term -> factor .)
    COMMA           reduce using rule 82 (term -> factor .)
    RSQB            reduce using rule 82 (term -> factor .)
    EQUAL           reduce using rule 82 (term -> factor .)
    NEWLINE         reduce using rule 82 (term -> factor .)
    RPAREN          reduce using rule 82 (term -> factor .)
    COLON           reduce using rule 82 (term -> factor .)
    STAR            shift and go to state 75
    SLASH           shift and go to state 76
    PERCENT         shift and go to state 74


state 28

    (93) atom -> STRING .

    LSQB            reduce using rule 93 (atom -> STRING .)
    STAR            reduce using rule 93 (atom -> STRING .)
    SLASH           reduce using rule 93 (atom -> STRING .)
    PERCENT         reduce using rule 93 (atom -> STRING .)
    PLUS            reduce using rule 93 (atom -> STRING .)
    MINUS           reduce using rule 93 (atom -> STRING .)
    LEFTSHIFT       reduce using rule 93 (atom -> STRING .)
    RIGHTSHIFT      reduce using rule 93 (atom -> STRING .)
    AMPER           reduce using rule 93 (atom -> STRING .)
    CIRCUMFLEX      reduce using rule 93 (atom -> STRING .)
    VBAR            reduce using rule 93 (atom -> STRING .)
    LESS            reduce using rule 93 (atom -> STRING .)
    GREATER         reduce using rule 93 (atom -> STRING .)
    EQEQUAL         reduce using rule 93 (atom -> STRING .)
    GREATEREQUAL    reduce using rule 93 (atom -> STRING .)
    LESSEQUAL       reduce using rule 93 (atom -> STRING .)
    NOTEQUAL        reduce using rule 93 (atom -> STRING .)
    AND             reduce using rule 93 (atom -> STRING .)
    OR              reduce using rule 93 (atom -> STRING .)
    EQUAL           reduce using rule 93 (atom -> STRING .)
    COMMA           reduce using rule 93 (atom -> STRING .)
    NEWLINE         reduce using rule 93 (atom -> STRING .)
    RPAREN          reduce using rule 93 (atom -> STRING .)
    RSQB            reduce using rule 93 (atom -> STRING .)
    COLON           reduce using rule 93 (atom -> STRING .)
    IN              reduce using rule 93 (atom -> STRING .)


state 29

    (50) for_stmt -> FOR . atom IN test COLON MarkerFor suite
    (91) atom -> . NAME
    (92) atom -> . NUMBER
    (93) atom -> . STRING
    (94) atom -> . TRIPLESTRING
    (95) atom -> . FNUMBER
    (96) atom -> . LSQB RSQB
    (97) atom -> . LSQB listmaker RSQB
    (98) atom -> . LPAREN RPAREN
    (99) atom -> . LPAREN testlist_comp RPAREN

    NAME            shift and go to state 61
    NUMBER          shift and go to state 53
    STRING          shift and go to state 28
    TRIPLESTRING    shift and go to state 51
    FNUMBER         shift and go to state 31
    LSQB            shift and go to state 39
    LPAREN          shift and go to state 36

    atom                           shift and go to state 77

state 30

    (20) stmt -> simple_stmt .

    IF              reduce using rule 20 (stmt -> simple_stmt .)
    FOR             reduce using rule 20 (stmt -> simple_stmt .)
    WHILE           reduce using rule 20 (stmt -> simple_stmt .)
    DEF             reduce using rule 20 (stmt -> simple_stmt .)
    NAME            reduce using rule 20 (stmt -> simple_stmt .)
    PRINT           reduce using rule 20 (stmt -> simple_stmt .)
    BREAK           reduce using rule 20 (stmt -> simple_stmt .)
    RETURN          reduce using rule 20 (stmt -> simple_stmt .)
    CONTINUE        reduce using rule 20 (stmt -> simple_stmt .)
    NOT             reduce using rule 20 (stmt -> simple_stmt .)
    PLUS            reduce using rule 20 (stmt -> simple_stmt .)
    MINUS           reduce using rule 20 (stmt -> simple_stmt .)
    NUMBER          reduce using rule 20 (stmt -> simple_stmt .)
    STRING          reduce using rule 20 (stmt -> simple_stmt .)
    TRIPLESTRING    reduce using rule 20 (stmt -> simple_stmt .)
    FNUMBER         reduce using rule 20 (stmt -> simple_stmt .)
    LSQB            reduce using rule 20 (stmt -> simple_stmt .)
    LPAREN          reduce using rule 20 (stmt -> simple_stmt .)
    DEDENT          reduce using rule 20 (stmt -> simple_stmt .)
    ENDMARKER       reduce using rule 20 (stmt -> simple_stmt .)
    NEWLINE         reduce using rule 20 (stmt -> simple_stmt .)


state 31

    (95) atom -> FNUMBER .

    LSQB            reduce using rule 95 (atom -> FNUMBER .)
    STAR            reduce using rule 95 (atom -> FNUMBER .)
    SLASH           reduce using rule 95 (atom -> FNUMBER .)
    PERCENT         reduce using rule 95 (atom -> FNUMBER .)
    PLUS            reduce using rule 95 (atom -> FNUMBER .)
    MINUS           reduce using rule 95 (atom -> FNUMBER .)
    LEFTSHIFT       reduce using rule 95 (atom -> FNUMBER .)
    RIGHTSHIFT      reduce using rule 95 (atom -> FNUMBER .)
    AMPER           reduce using rule 95 (atom -> FNUMBER .)
    CIRCUMFLEX      reduce using rule 95 (atom -> FNUMBER .)
    VBAR            reduce using rule 95 (atom -> FNUMBER .)
    LESS            reduce using rule 95 (atom -> FNUMBER .)
    GREATER         reduce using rule 95 (atom -> FNUMBER .)
    EQEQUAL         reduce using rule 95 (atom -> FNUMBER .)
    GREATEREQUAL    reduce using rule 95 (atom -> FNUMBER .)
    LESSEQUAL       reduce using rule 95 (atom -> FNUMBER .)
    NOTEQUAL        reduce using rule 95 (atom -> FNUMBER .)
    AND             reduce using rule 95 (atom -> FNUMBER .)
    OR              reduce using rule 95 (atom -> FNUMBER .)
    EQUAL           reduce using rule 95 (atom -> FNUMBER .)
    COMMA           reduce using rule 95 (atom -> FNUMBER .)
    NEWLINE         reduce using rule 95 (atom -> FNUMBER .)
    RPAREN          reduce using rule 95 (atom -> FNUMBER .)
    RSQB            reduce using rule 95 (atom -> FNUMBER .)
    COLON           reduce using rule 95 (atom -> FNUMBER .)
    IN              reduce using rule 95 (atom -> FNUMBER .)


state 32

    (4) single_stmt -> single_stmt stmt .

    ENDMARKER       reduce using rule 4 (single_stmt -> single_stmt stmt .)
    NEWLINE         reduce using rule 4 (single_stmt -> single_stmt stmt .)
    IF              reduce using rule 4 (single_stmt -> single_stmt stmt .)
    FOR             reduce using rule 4 (single_stmt -> single_stmt stmt .)
    WHILE           reduce using rule 4 (single_stmt -> single_stmt stmt .)
    DEF             reduce using rule 4 (single_stmt -> single_stmt stmt .)
    NAME            reduce using rule 4 (single_stmt -> single_stmt stmt .)
    PRINT           reduce using rule 4 (single_stmt -> single_stmt stmt .)
    BREAK           reduce using rule 4 (single_stmt -> single_stmt stmt .)
    RETURN          reduce using rule 4 (single_stmt -> single_stmt stmt .)
    CONTINUE        reduce using rule 4 (single_stmt -> single_stmt stmt .)
    NOT             reduce using rule 4 (single_stmt -> single_stmt stmt .)
    PLUS            reduce using rule 4 (single_stmt -> single_stmt stmt .)
    MINUS           reduce using rule 4 (single_stmt -> single_stmt stmt .)
    NUMBER          reduce using rule 4 (single_stmt -> single_stmt stmt .)
    STRING          reduce using rule 4 (single_stmt -> single_stmt stmt .)
    TRIPLESTRING    reduce using rule 4 (single_stmt -> single_stmt stmt .)
    FNUMBER         reduce using rule 4 (single_stmt -> single_stmt stmt .)
    LSQB            reduce using rule 4 (single_stmt -> single_stmt stmt .)
    LPAREN          reduce using rule 4 (single_stmt -> single_stmt stmt .)


state 33

    (60) not_test -> NOT . not_test
    (60) not_test -> . NOT not_test
    (61) not_test -> . comparison
    (62) comparison -> . expr
    (63) comparison -> . expr comp_op expr
    (70) expr -> . xor_expr
    (71) expr -> . xor_expr VBAR expr
    (72) xor_expr -> . and_expr
    (73) xor_expr -> . and_expr CIRCUMFLEX xor_expr
    (74) and_expr -> . shift_expr
    (75) and_expr -> . shift_expr AMPER and_expr
    (76) shift_expr -> . arith_expr
    (77) shift_expr -> . arith_expr LEFTSHIFT shift_expr
    (78) shift_expr -> . arith_expr RIGHTSHIFT shift_expr
    (79) arith_expr -> . term
    (80) arith_expr -> . term PLUS arith_expr
    (81) arith_expr -> . term MINUS arith_expr
    (82) term -> . factor
    (83) term -> . factor STAR term
    (84) term -> . factor SLASH term
    (85) term -> . factor PERCENT term
    (86) factor -> . power
    (87) factor -> . PLUS factor
    (88) factor -> . MINUS factor
    (89) power -> . atom
    (90) power -> . atom LSQB test RSQB
    (91) atom -> . NAME
    (92) atom -> . NUMBER
    (93) atom -> . STRING
    (94) atom -> . TRIPLESTRING
    (95) atom -> . FNUMBER
    (96) atom -> . LSQB RSQB
    (97) atom -> . LSQB listmaker RSQB
    (98) atom -> . LPAREN RPAREN
    (99) atom -> . LPAREN testlist_comp RPAREN

    NOT             shift and go to state 33
    PLUS            shift and go to state 20
    MINUS           shift and go to state 12
    NAME            shift and go to state 61
    NUMBER          shift and go to state 53
    STRING          shift and go to state 28
    TRIPLESTRING    shift and go to state 51
    FNUMBER         shift and go to state 31
    LSQB            shift and go to state 39
    LPAREN          shift and go to state 36

    comparison                     shift and go to state 42
    power                          shift and go to state 16
    arith_expr                     shift and go to state 45
    expr                           shift and go to state 46
    atom                           shift and go to state 37
    shift_expr                     shift and go to state 19
    term                           shift and go to state 43
    not_test                       shift and go to state 78
    factor                         shift and go to state 27
    xor_expr                       shift and go to state 15
    and_expr                       shift and go to state 25

state 34

    (39) compound_stmt -> for_stmt . Marker
    (46) Marker -> .

    ENDMARKER       reduce using rule 46 (Marker -> .)
    NEWLINE         reduce using rule 46 (Marker -> .)
    IF              reduce using rule 46 (Marker -> .)
    FOR             reduce using rule 46 (Marker -> .)
    WHILE           reduce using rule 46 (Marker -> .)
    DEF             reduce using rule 46 (Marker -> .)
    NAME            reduce using rule 46 (Marker -> .)
    PRINT           reduce using rule 46 (Marker -> .)
    BREAK           reduce using rule 46 (Marker -> .)
    RETURN          reduce using rule 46 (Marker -> .)
    CONTINUE        reduce using rule 46 (Marker -> .)
    NOT             reduce using rule 46 (Marker -> .)
    PLUS            reduce using rule 46 (Marker -> .)
    MINUS           reduce using rule 46 (Marker -> .)
    NUMBER          reduce using rule 46 (Marker -> .)
    STRING          reduce using rule 46 (Marker -> .)
    TRIPLESTRING    reduce using rule 46 (Marker -> .)
    FNUMBER         reduce using rule 46 (Marker -> .)
    LSQB            reduce using rule 46 (Marker -> .)
    LPAREN          reduce using rule 46 (Marker -> .)
    DEDENT          reduce using rule 46 (Marker -> .)

    Marker                         shift and go to state 79

state 35

    (56) or_test -> and_test .
    (57) or_test -> and_test . OR or_test

    EQUAL           reduce using rule 56 (or_test -> and_test .)
    COMMA           reduce using rule 56 (or_test -> and_test .)
    RSQB            reduce using rule 56 (or_test -> and_test .)
    RPAREN          reduce using rule 56 (or_test -> and_test .)
    COLON           reduce using rule 56 (or_test -> and_test .)
    NEWLINE         reduce using rule 56 (or_test -> and_test .)
    OR              shift and go to state 80


state 36

    (98) atom -> LPAREN . RPAREN
    (99) atom -> LPAREN . testlist_comp RPAREN
    (102) testlist_comp -> . test
    (103) testlist_comp -> . test COMMA testlist_comp
    (54) test -> . test_expr
    (55) test_expr -> . or_test
    (56) or_test -> . and_test
    (57) or_test -> . and_test OR or_test
    (58) and_test -> . not_test
    (59) and_test -> . not_test AND and_test
    (60) not_test -> . NOT not_test
    (61) not_test -> . comparison
    (62) comparison -> . expr
    (63) comparison -> . expr comp_op expr
    (70) expr -> . xor_expr
    (71) expr -> . xor_expr VBAR expr
    (72) xor_expr -> . and_expr
    (73) xor_expr -> . and_expr CIRCUMFLEX xor_expr
    (74) and_expr -> . shift_expr
    (75) and_expr -> . shift_expr AMPER and_expr
    (76) shift_expr -> . arith_expr
    (77) shift_expr -> . arith_expr LEFTSHIFT shift_expr
    (78) shift_expr -> . arith_expr RIGHTSHIFT shift_expr
    (79) arith_expr -> . term
    (80) arith_expr -> . term PLUS arith_expr
    (81) arith_expr -> . term MINUS arith_expr
    (82) term -> . factor
    (83) term -> . factor STAR term
    (84) term -> . factor SLASH term
    (85) term -> . factor PERCENT term
    (86) factor -> . power
    (87) factor -> . PLUS factor
    (88) factor -> . MINUS factor
    (89) power -> . atom
    (90) power -> . atom LSQB test RSQB
    (91) atom -> . NAME
    (92) atom -> . NUMBER
    (93) atom -> . STRING
    (94) atom -> . TRIPLESTRING
    (95) atom -> . FNUMBER
    (96) atom -> . LSQB RSQB
    (97) atom -> . LSQB listmaker RSQB
    (98) atom -> . LPAREN RPAREN
    (99) atom -> . LPAREN testlist_comp RPAREN

    RPAREN          shift and go to state 82
    NOT             shift and go to state 33
    PLUS            shift and go to state 20
    MINUS           shift and go to state 12
    NAME            shift and go to state 61
    NUMBER          shift and go to state 53
    STRING          shift and go to state 28
    TRIPLESTRING    shift and go to state 51
    FNUMBER         shift and go to state 31
    LSQB            shift and go to state 39
    LPAREN          shift and go to state 36

    comparison                     shift and go to state 42
    power                          shift and go to state 16
    arith_expr                     shift and go to state 45
    expr                           shift and go to state 46
    factor                         shift and go to state 27
    shift_expr                     shift and go to state 19
    or_test                        shift and go to state 47
    and_test                       shift and go to state 35
    atom                           shift and go to state 37
    term                           shift and go to state 43
    not_test                       shift and go to state 9
    testlist_comp                  shift and go to state 81
    test                           shift and go to state 83
    xor_expr                       shift and go to state 15
    and_expr                       shift and go to state 25
    test_expr                      shift and go to state 23

state 37

    (89) power -> atom .
    (90) power -> atom . LSQB test RSQB

    STAR            reduce using rule 89 (power -> atom .)
    SLASH           reduce using rule 89 (power -> atom .)
    PERCENT         reduce using rule 89 (power -> atom .)
    PLUS            reduce using rule 89 (power -> atom .)
    MINUS           reduce using rule 89 (power -> atom .)
    LEFTSHIFT       reduce using rule 89 (power -> atom .)
    RIGHTSHIFT      reduce using rule 89 (power -> atom .)
    AMPER           reduce using rule 89 (power -> atom .)
    CIRCUMFLEX      reduce using rule 89 (power -> atom .)
    VBAR            reduce using rule 89 (power -> atom .)
    LESS            reduce using rule 89 (power -> atom .)
    GREATER         reduce using rule 89 (power -> atom .)
    EQEQUAL         reduce using rule 89 (power -> atom .)
    GREATEREQUAL    reduce using rule 89 (power -> atom .)
    LESSEQUAL       reduce using rule 89 (power -> atom .)
    NOTEQUAL        reduce using rule 89 (power -> atom .)
    AND             reduce using rule 89 (power -> atom .)
    OR              reduce using rule 89 (power -> atom .)
    EQUAL           reduce using rule 89 (power -> atom .)
    COMMA           reduce using rule 89 (power -> atom .)
    NEWLINE         reduce using rule 89 (power -> atom .)
    RPAREN          reduce using rule 89 (power -> atom .)
    RSQB            reduce using rule 89 (power -> atom .)
    COLON           reduce using rule 89 (power -> atom .)
    LSQB            shift and go to state 84


state 38

    (41) compound_stmt -> funcdef . Marker
    (46) Marker -> .

    ENDMARKER       reduce using rule 46 (Marker -> .)
    NEWLINE         reduce using rule 46 (Marker -> .)
    IF              reduce using rule 46 (Marker -> .)
    FOR             reduce using rule 46 (Marker -> .)
    WHILE           reduce using rule 46 (Marker -> .)
    DEF             reduce using rule 46 (Marker -> .)
    NAME            reduce using rule 46 (Marker -> .)
    PRINT           reduce using rule 46 (Marker -> .)
    BREAK           reduce using rule 46 (Marker -> .)
    RETURN          reduce using rule 46 (Marker -> .)
    CONTINUE        reduce using rule 46 (Marker -> .)
    NOT             reduce using rule 46 (Marker -> .)
    PLUS            reduce using rule 46 (Marker -> .)
    MINUS           reduce using rule 46 (Marker -> .)
    NUMBER          reduce using rule 46 (Marker -> .)
    STRING          reduce using rule 46 (Marker -> .)
    TRIPLESTRING    reduce using rule 46 (Marker -> .)
    FNUMBER         reduce using rule 46 (Marker -> .)
    LSQB            reduce using rule 46 (Marker -> .)
    LPAREN          reduce using rule 46 (Marker -> .)
    DEDENT          reduce using rule 46 (Marker -> .)

    Marker                         shift and go to state 85

state 39

    (96) atom -> LSQB . RSQB
    (97) atom -> LSQB . listmaker RSQB
    (100) listmaker -> . test
    (101) listmaker -> . test COMMA listmaker
    (54) test -> . test_expr
    (55) test_expr -> . or_test
    (56) or_test -> . and_test
    (57) or_test -> . and_test OR or_test
    (58) and_test -> . not_test
    (59) and_test -> . not_test AND and_test
    (60) not_test -> . NOT not_test
    (61) not_test -> . comparison
    (62) comparison -> . expr
    (63) comparison -> . expr comp_op expr
    (70) expr -> . xor_expr
    (71) expr -> . xor_expr VBAR expr
    (72) xor_expr -> . and_expr
    (73) xor_expr -> . and_expr CIRCUMFLEX xor_expr
    (74) and_expr -> . shift_expr
    (75) and_expr -> . shift_expr AMPER and_expr
    (76) shift_expr -> . arith_expr
    (77) shift_expr -> . arith_expr LEFTSHIFT shift_expr
    (78) shift_expr -> . arith_expr RIGHTSHIFT shift_expr
    (79) arith_expr -> . term
    (80) arith_expr -> . term PLUS arith_expr
    (81) arith_expr -> . term MINUS arith_expr
    (82) term -> . factor
    (83) term -> . factor STAR term
    (84) term -> . factor SLASH term
    (85) term -> . factor PERCENT term
    (86) factor -> . power
    (87) factor -> . PLUS factor
    (88) factor -> . MINUS factor
    (89) power -> . atom
    (90) power -> . atom LSQB test RSQB
    (91) atom -> . NAME
    (92) atom -> . NUMBER
    (93) atom -> . STRING
    (94) atom -> . TRIPLESTRING
    (95) atom -> . FNUMBER
    (96) atom -> . LSQB RSQB
    (97) atom -> . LSQB listmaker RSQB
    (98) atom -> . LPAREN RPAREN
    (99) atom -> . LPAREN testlist_comp RPAREN

    RSQB            shift and go to state 88
    NOT             shift and go to state 33
    PLUS            shift and go to state 20
    MINUS           shift and go to state 12
    NAME            shift and go to state 61
    NUMBER          shift and go to state 53
    STRING          shift and go to state 28
    TRIPLESTRING    shift and go to state 51
    FNUMBER         shift and go to state 31
    LSQB            shift and go to state 39
    LPAREN          shift and go to state 36

    comparison                     shift and go to state 42
    power                          shift and go to state 16
    arith_expr                     shift and go to state 45
    expr                           shift and go to state 46
    atom                           shift and go to state 37
    shift_expr                     shift and go to state 19
    or_test                        shift and go to state 47
    and_test                       shift and go to state 35
    term                           shift and go to state 43
    not_test                       shift and go to state 9
    factor                         shift and go to state 27
    test                           shift and go to state 87
    listmaker                      shift and go to state 86
    xor_expr                       shift and go to state 15
    and_expr                       shift and go to state 25
    test_expr                      shift and go to state 23

state 40

    (25) small_stmt -> expr_stmt . Marker
    (46) Marker -> .

    NEWLINE         reduce using rule 46 (Marker -> .)

    Marker                         shift and go to state 89

state 41

    (43) if_stmt -> IF . test COLON MarkerIf suite
    (44) if_stmt -> IF . test COLON MarkerIf suite ELSE COLON MarkerElse suite
    (54) test -> . test_expr
    (55) test_expr -> . or_test
    (56) or_test -> . and_test
    (57) or_test -> . and_test OR or_test
    (58) and_test -> . not_test
    (59) and_test -> . not_test AND and_test
    (60) not_test -> . NOT not_test
    (61) not_test -> . comparison
    (62) comparison -> . expr
    (63) comparison -> . expr comp_op expr
    (70) expr -> . xor_expr
    (71) expr -> . xor_expr VBAR expr
    (72) xor_expr -> . and_expr
    (73) xor_expr -> . and_expr CIRCUMFLEX xor_expr
    (74) and_expr -> . shift_expr
    (75) and_expr -> . shift_expr AMPER and_expr
    (76) shift_expr -> . arith_expr
    (77) shift_expr -> . arith_expr LEFTSHIFT shift_expr
    (78) shift_expr -> . arith_expr RIGHTSHIFT shift_expr
    (79) arith_expr -> . term
    (80) arith_expr -> . term PLUS arith_expr
    (81) arith_expr -> . term MINUS arith_expr
    (82) term -> . factor
    (83) term -> . factor STAR term
    (84) term -> . factor SLASH term
    (85) term -> . factor PERCENT term
    (86) factor -> . power
    (87) factor -> . PLUS factor
    (88) factor -> . MINUS factor
    (89) power -> . atom
    (90) power -> . atom LSQB test RSQB
    (91) atom -> . NAME
    (92) atom -> . NUMBER
    (93) atom -> . STRING
    (94) atom -> . TRIPLESTRING
    (95) atom -> . FNUMBER
    (96) atom -> . LSQB RSQB
    (97) atom -> . LSQB listmaker RSQB
    (98) atom -> . LPAREN RPAREN
    (99) atom -> . LPAREN testlist_comp RPAREN

    NOT             shift and go to state 33
    PLUS            shift and go to state 20
    MINUS           shift and go to state 12
    NAME            shift and go to state 61
    NUMBER          shift and go to state 53
    STRING          shift and go to state 28
    TRIPLESTRING    shift and go to state 51
    FNUMBER         shift and go to state 31
    LSQB            shift and go to state 39
    LPAREN          shift and go to state 36

    comparison                     shift and go to state 42
    power                          shift and go to state 16
    arith_expr                     shift and go to state 45
    expr                           shift and go to state 46
    factor                         shift and go to state 27
    shift_expr                     shift and go to state 19
    or_test                        shift and go to state 47
    and_test                       shift and go to state 35
    atom                           shift and go to state 37
    term                           shift and go to state 43
    not_test                       shift and go to state 9
    test                           shift and go to state 90
    xor_expr                       shift and go to state 15
    and_expr                       shift and go to state 25
    test_expr                      shift and go to state 23

state 42

    (61) not_test -> comparison .

    AND             reduce using rule 61 (not_test -> comparison .)
    OR              reduce using rule 61 (not_test -> comparison .)
    EQUAL           reduce using rule 61 (not_test -> comparison .)
    NEWLINE         reduce using rule 61 (not_test -> comparison .)
    COLON           reduce using rule 61 (not_test -> comparison .)
    COMMA           reduce using rule 61 (not_test -> comparison .)
    RPAREN          reduce using rule 61 (not_test -> comparison .)
    RSQB            reduce using rule 61 (not_test -> comparison .)


state 43

    (79) arith_expr -> term .
    (80) arith_expr -> term . PLUS arith_expr
    (81) arith_expr -> term . MINUS arith_expr

    LEFTSHIFT       reduce using rule 79 (arith_expr -> term .)
    RIGHTSHIFT      reduce using rule 79 (arith_expr -> term .)
    AMPER           reduce using rule 79 (arith_expr -> term .)
    CIRCUMFLEX      reduce using rule 79 (arith_expr -> term .)
    VBAR            reduce using rule 79 (arith_expr -> term .)
    LESS            reduce using rule 79 (arith_expr -> term .)
    GREATER         reduce using rule 79 (arith_expr -> term .)
    EQEQUAL         reduce using rule 79 (arith_expr -> term .)
    GREATEREQUAL    reduce using rule 79 (arith_expr -> term .)
    LESSEQUAL       reduce using rule 79 (arith_expr -> term .)
    NOTEQUAL        reduce using rule 79 (arith_expr -> term .)
    AND             reduce using rule 79 (arith_expr -> term .)
    OR              reduce using rule 79 (arith_expr -> term .)
    EQUAL           reduce using rule 79 (arith_expr -> term .)
    COMMA           reduce using rule 79 (arith_expr -> term .)
    NEWLINE         reduce using rule 79 (arith_expr -> term .)
    RPAREN          reduce using rule 79 (arith_expr -> term .)
    RSQB            reduce using rule 79 (arith_expr -> term .)
    COLON           reduce using rule 79 (arith_expr -> term .)
    PLUS            shift and go to state 91
    MINUS           shift and go to state 92


state 44

    (38) compound_stmt -> if_stmt . Marker
    (46) Marker -> .

    ENDMARKER       reduce using rule 46 (Marker -> .)
    NEWLINE         reduce using rule 46 (Marker -> .)
    IF              reduce using rule 46 (Marker -> .)
    FOR             reduce using rule 46 (Marker -> .)
    WHILE           reduce using rule 46 (Marker -> .)
    DEF             reduce using rule 46 (Marker -> .)
    NAME            reduce using rule 46 (Marker -> .)
    PRINT           reduce using rule 46 (Marker -> .)
    BREAK           reduce using rule 46 (Marker -> .)
    RETURN          reduce using rule 46 (Marker -> .)
    CONTINUE        reduce using rule 46 (Marker -> .)
    NOT             reduce using rule 46 (Marker -> .)
    PLUS            reduce using rule 46 (Marker -> .)
    MINUS           reduce using rule 46 (Marker -> .)
    NUMBER          reduce using rule 46 (Marker -> .)
    STRING          reduce using rule 46 (Marker -> .)
    TRIPLESTRING    reduce using rule 46 (Marker -> .)
    FNUMBER         reduce using rule 46 (Marker -> .)
    LSQB            reduce using rule 46 (Marker -> .)
    LPAREN          reduce using rule 46 (Marker -> .)
    DEDENT          reduce using rule 46 (Marker -> .)

    Marker                         shift and go to state 93

state 45

    (76) shift_expr -> arith_expr .
    (77) shift_expr -> arith_expr . LEFTSHIFT shift_expr
    (78) shift_expr -> arith_expr . RIGHTSHIFT shift_expr

    AMPER           reduce using rule 76 (shift_expr -> arith_expr .)
    CIRCUMFLEX      reduce using rule 76 (shift_expr -> arith_expr .)
    VBAR            reduce using rule 76 (shift_expr -> arith_expr .)
    LESS            reduce using rule 76 (shift_expr -> arith_expr .)
    GREATER         reduce using rule 76 (shift_expr -> arith_expr .)
    EQEQUAL         reduce using rule 76 (shift_expr -> arith_expr .)
    GREATEREQUAL    reduce using rule 76 (shift_expr -> arith_expr .)
    LESSEQUAL       reduce using rule 76 (shift_expr -> arith_expr .)
    NOTEQUAL        reduce using rule 76 (shift_expr -> arith_expr .)
    AND             reduce using rule 76 (shift_expr -> arith_expr .)
    OR              reduce using rule 76 (shift_expr -> arith_expr .)
    COMMA           reduce using rule 76 (shift_expr -> arith_expr .)
    RPAREN          reduce using rule 76 (shift_expr -> arith_expr .)
    EQUAL           reduce using rule 76 (shift_expr -> arith_expr .)
    RSQB            reduce using rule 76 (shift_expr -> arith_expr .)
    NEWLINE         reduce using rule 76 (shift_expr -> arith_expr .)
    COLON           reduce using rule 76 (shift_expr -> arith_expr .)
    LEFTSHIFT       shift and go to state 94
    RIGHTSHIFT      shift and go to state 95


state 46

    (62) comparison -> expr .
    (63) comparison -> expr . comp_op expr
    (64) comp_op -> . LESS
    (65) comp_op -> . GREATER
    (66) comp_op -> . EQEQUAL
    (67) comp_op -> . GREATEREQUAL
    (68) comp_op -> . LESSEQUAL
    (69) comp_op -> . NOTEQUAL

    AND             reduce using rule 62 (comparison -> expr .)
    OR              reduce using rule 62 (comparison -> expr .)
    COMMA           reduce using rule 62 (comparison -> expr .)
    RPAREN          reduce using rule 62 (comparison -> expr .)
    COLON           reduce using rule 62 (comparison -> expr .)
    EQUAL           reduce using rule 62 (comparison -> expr .)
    NEWLINE         reduce using rule 62 (comparison -> expr .)
    RSQB            reduce using rule 62 (comparison -> expr .)
    LESS            shift and go to state 99
    GREATER         shift and go to state 98
    EQEQUAL         shift and go to state 102
    GREATEREQUAL    shift and go to state 100
    LESSEQUAL       shift and go to state 101
    NOTEQUAL        shift and go to state 96

    comp_op                        shift and go to state 97

state 47

    (55) test_expr -> or_test .

    COMMA           reduce using rule 55 (test_expr -> or_test .)
    NEWLINE         reduce using rule 55 (test_expr -> or_test .)
    RSQB            reduce using rule 55 (test_expr -> or_test .)
    EQUAL           reduce using rule 55 (test_expr -> or_test .)
    RPAREN          reduce using rule 55 (test_expr -> or_test .)
    COLON           reduce using rule 55 (test_expr -> or_test .)


state 48

    (34) break_stmt -> BREAK .

    NEWLINE         reduce using rule 34 (break_stmt -> BREAK .)


state 49

    (40) compound_stmt -> while_stmt . Marker
    (46) Marker -> .

    ENDMARKER       reduce using rule 46 (Marker -> .)
    NEWLINE         reduce using rule 46 (Marker -> .)
    IF              reduce using rule 46 (Marker -> .)
    FOR             reduce using rule 46 (Marker -> .)
    WHILE           reduce using rule 46 (Marker -> .)
    DEF             reduce using rule 46 (Marker -> .)
    NAME            reduce using rule 46 (Marker -> .)
    PRINT           reduce using rule 46 (Marker -> .)
    BREAK           reduce using rule 46 (Marker -> .)
    RETURN          reduce using rule 46 (Marker -> .)
    CONTINUE        reduce using rule 46 (Marker -> .)
    NOT             reduce using rule 46 (Marker -> .)
    PLUS            reduce using rule 46 (Marker -> .)
    MINUS           reduce using rule 46 (Marker -> .)
    NUMBER          reduce using rule 46 (Marker -> .)
    STRING          reduce using rule 46 (Marker -> .)
    TRIPLESTRING    reduce using rule 46 (Marker -> .)
    FNUMBER         reduce using rule 46 (Marker -> .)
    LSQB            reduce using rule 46 (Marker -> .)
    LPAREN          reduce using rule 46 (Marker -> .)
    DEDENT          reduce using rule 46 (Marker -> .)

    Marker                         shift and go to state 103

state 50

    (35) continue_stmt -> CONTINUE .

    NEWLINE         reduce using rule 35 (continue_stmt -> CONTINUE .)


state 51

    (94) atom -> TRIPLESTRING .

    LSQB            reduce using rule 94 (atom -> TRIPLESTRING .)
    STAR            reduce using rule 94 (atom -> TRIPLESTRING .)
    SLASH           reduce using rule 94 (atom -> TRIPLESTRING .)
    PERCENT         reduce using rule 94 (atom -> TRIPLESTRING .)
    PLUS            reduce using rule 94 (atom -> TRIPLESTRING .)
    MINUS           reduce using rule 94 (atom -> TRIPLESTRING .)
    LEFTSHIFT       reduce using rule 94 (atom -> TRIPLESTRING .)
    RIGHTSHIFT      reduce using rule 94 (atom -> TRIPLESTRING .)
    AMPER           reduce using rule 94 (atom -> TRIPLESTRING .)
    CIRCUMFLEX      reduce using rule 94 (atom -> TRIPLESTRING .)
    VBAR            reduce using rule 94 (atom -> TRIPLESTRING .)
    LESS            reduce using rule 94 (atom -> TRIPLESTRING .)
    GREATER         reduce using rule 94 (atom -> TRIPLESTRING .)
    EQEQUAL         reduce using rule 94 (atom -> TRIPLESTRING .)
    GREATEREQUAL    reduce using rule 94 (atom -> TRIPLESTRING .)
    LESSEQUAL       reduce using rule 94 (atom -> TRIPLESTRING .)
    NOTEQUAL        reduce using rule 94 (atom -> TRIPLESTRING .)
    AND             reduce using rule 94 (atom -> TRIPLESTRING .)
    OR              reduce using rule 94 (atom -> TRIPLESTRING .)
    EQUAL           reduce using rule 94 (atom -> TRIPLESTRING .)
    COMMA           reduce using rule 94 (atom -> TRIPLESTRING .)
    NEWLINE         reduce using rule 94 (atom -> TRIPLESTRING .)
    RPAREN          reduce using rule 94 (atom -> TRIPLESTRING .)
    RSQB            reduce using rule 94 (atom -> TRIPLESTRING .)
    COLON           reduce using rule 94 (atom -> TRIPLESTRING .)
    IN              reduce using rule 94 (atom -> TRIPLESTRING .)


state 52

    (22) simple_stmt -> small_stmts . NEWLINE

    NEWLINE         shift and go to state 104


state 53

    (92) atom -> NUMBER .

    LSQB            reduce using rule 92 (atom -> NUMBER .)
    STAR            reduce using rule 92 (atom -> NUMBER .)
    SLASH           reduce using rule 92 (atom -> NUMBER .)
    PERCENT         reduce using rule 92 (atom -> NUMBER .)
    PLUS            reduce using rule 92 (atom -> NUMBER .)
    MINUS           reduce using rule 92 (atom -> NUMBER .)
    LEFTSHIFT       reduce using rule 92 (atom -> NUMBER .)
    RIGHTSHIFT      reduce using rule 92 (atom -> NUMBER .)
    AMPER           reduce using rule 92 (atom -> NUMBER .)
    CIRCUMFLEX      reduce using rule 92 (atom -> NUMBER .)
    VBAR            reduce using rule 92 (atom -> NUMBER .)
    LESS            reduce using rule 92 (atom -> NUMBER .)
    GREATER         reduce using rule 92 (atom -> NUMBER .)
    EQEQUAL         reduce using rule 92 (atom -> NUMBER .)
    GREATEREQUAL    reduce using rule 92 (atom -> NUMBER .)
    LESSEQUAL       reduce using rule 92 (atom -> NUMBER .)
    NOTEQUAL        reduce using rule 92 (atom -> NUMBER .)
    AND             reduce using rule 92 (atom -> NUMBER .)
    OR              reduce using rule 92 (atom -> NUMBER .)
    EQUAL           reduce using rule 92 (atom -> NUMBER .)
    COMMA           reduce using rule 92 (atom -> NUMBER .)
    NEWLINE         reduce using rule 92 (atom -> NUMBER .)
    RPAREN          reduce using rule 92 (atom -> NUMBER .)
    RSQB            reduce using rule 92 (atom -> NUMBER .)
    COLON           reduce using rule 92 (atom -> NUMBER .)
    IN              reduce using rule 92 (atom -> NUMBER .)


state 54

    (10) function_call -> NAME LPAREN . RPAREN
    (11) function_call -> NAME LPAREN . testlist RPAREN
    (104) testlist -> . test
    (105) testlist -> . test COMMA testlist
    (54) test -> . test_expr
    (55) test_expr -> . or_test
    (56) or_test -> . and_test
    (57) or_test -> . and_test OR or_test
    (58) and_test -> . not_test
    (59) and_test -> . not_test AND and_test
    (60) not_test -> . NOT not_test
    (61) not_test -> . comparison
    (62) comparison -> . expr
    (63) comparison -> . expr comp_op expr
    (70) expr -> . xor_expr
    (71) expr -> . xor_expr VBAR expr
    (72) xor_expr -> . and_expr
    (73) xor_expr -> . and_expr CIRCUMFLEX xor_expr
    (74) and_expr -> . shift_expr
    (75) and_expr -> . shift_expr AMPER and_expr
    (76) shift_expr -> . arith_expr
    (77) shift_expr -> . arith_expr LEFTSHIFT shift_expr
    (78) shift_expr -> . arith_expr RIGHTSHIFT shift_expr
    (79) arith_expr -> . term
    (80) arith_expr -> . term PLUS arith_expr
    (81) arith_expr -> . term MINUS arith_expr
    (82) term -> . factor
    (83) term -> . factor STAR term
    (84) term -> . factor SLASH term
    (85) term -> . factor PERCENT term
    (86) factor -> . power
    (87) factor -> . PLUS factor
    (88) factor -> . MINUS factor
    (89) power -> . atom
    (90) power -> . atom LSQB test RSQB
    (91) atom -> . NAME
    (92) atom -> . NUMBER
    (93) atom -> . STRING
    (94) atom -> . TRIPLESTRING
    (95) atom -> . FNUMBER
    (96) atom -> . LSQB RSQB
    (97) atom -> . LSQB listmaker RSQB
    (98) atom -> . LPAREN RPAREN
    (99) atom -> . LPAREN testlist_comp RPAREN

    RPAREN          shift and go to state 105
    NOT             shift and go to state 33
    PLUS            shift and go to state 20
    MINUS           shift and go to state 12
    NAME            shift and go to state 61
    NUMBER          shift and go to state 53
    STRING          shift and go to state 28
    TRIPLESTRING    shift and go to state 51
    FNUMBER         shift and go to state 31
    LSQB            shift and go to state 39
    LPAREN          shift and go to state 36

    comparison                     shift and go to state 42
    power                          shift and go to state 16
    arith_expr                     shift and go to state 45
    expr                           shift and go to state 46
    atom                           shift and go to state 37
    testlist                       shift and go to state 106
    or_test                        shift and go to state 47
    and_test                       shift and go to state 35
    shift_expr                     shift and go to state 19
    term                           shift and go to state 43
    not_test                       shift and go to state 9
    factor                         shift and go to state 27
    test                           shift and go to state 59
    xor_expr                       shift and go to state 15
    and_expr                       shift and go to state 25
    test_expr                      shift and go to state 23

state 55

    (42) compound_stmt -> function_call Marker .

    ENDMARKER       reduce using rule 42 (compound_stmt -> function_call Marker .)
    NEWLINE         reduce using rule 42 (compound_stmt -> function_call Marker .)
    IF              reduce using rule 42 (compound_stmt -> function_call Marker .)
    FOR             reduce using rule 42 (compound_stmt -> function_call Marker .)
    WHILE           reduce using rule 42 (compound_stmt -> function_call Marker .)
    DEF             reduce using rule 42 (compound_stmt -> function_call Marker .)
    NAME            reduce using rule 42 (compound_stmt -> function_call Marker .)
    PRINT           reduce using rule 42 (compound_stmt -> function_call Marker .)
    BREAK           reduce using rule 42 (compound_stmt -> function_call Marker .)
    RETURN          reduce using rule 42 (compound_stmt -> function_call Marker .)
    CONTINUE        reduce using rule 42 (compound_stmt -> function_call Marker .)
    NOT             reduce using rule 42 (compound_stmt -> function_call Marker .)
    PLUS            reduce using rule 42 (compound_stmt -> function_call Marker .)
    MINUS           reduce using rule 42 (compound_stmt -> function_call Marker .)
    NUMBER          reduce using rule 42 (compound_stmt -> function_call Marker .)
    STRING          reduce using rule 42 (compound_stmt -> function_call Marker .)
    TRIPLESTRING    reduce using rule 42 (compound_stmt -> function_call Marker .)
    FNUMBER         reduce using rule 42 (compound_stmt -> function_call Marker .)
    LSQB            reduce using rule 42 (compound_stmt -> function_call Marker .)
    LPAREN          reduce using rule 42 (compound_stmt -> function_call Marker .)
    DEDENT          reduce using rule 42 (compound_stmt -> function_call Marker .)


state 56

    (45) while_stmt -> WHILE Marker . test COLON MarkerWhile suite
    (54) test -> . test_expr
    (55) test_expr -> . or_test
    (56) or_test -> . and_test
    (57) or_test -> . and_test OR or_test
    (58) and_test -> . not_test
    (59) and_test -> . not_test AND and_test
    (60) not_test -> . NOT not_test
    (61) not_test -> . comparison
    (62) comparison -> . expr
    (63) comparison -> . expr comp_op expr
    (70) expr -> . xor_expr
    (71) expr -> . xor_expr VBAR expr
    (72) xor_expr -> . and_expr
    (73) xor_expr -> . and_expr CIRCUMFLEX xor_expr
    (74) and_expr -> . shift_expr
    (75) and_expr -> . shift_expr AMPER and_expr
    (76) shift_expr -> . arith_expr
    (77) shift_expr -> . arith_expr LEFTSHIFT shift_expr
    (78) shift_expr -> . arith_expr RIGHTSHIFT shift_expr
    (79) arith_expr -> . term
    (80) arith_expr -> . term PLUS arith_expr
    (81) arith_expr -> . term MINUS arith_expr
    (82) term -> . factor
    (83) term -> . factor STAR term
    (84) term -> . factor SLASH term
    (85) term -> . factor PERCENT term
    (86) factor -> . power
    (87) factor -> . PLUS factor
    (88) factor -> . MINUS factor
    (89) power -> . atom
    (90) power -> . atom LSQB test RSQB
    (91) atom -> . NAME
    (92) atom -> . NUMBER
    (93) atom -> . STRING
    (94) atom -> . TRIPLESTRING
    (95) atom -> . FNUMBER
    (96) atom -> . LSQB RSQB
    (97) atom -> . LSQB listmaker RSQB
    (98) atom -> . LPAREN RPAREN
    (99) atom -> . LPAREN testlist_comp RPAREN

    NOT             shift and go to state 33
    PLUS            shift and go to state 20
    MINUS           shift and go to state 12
    NAME            shift and go to state 61
    NUMBER          shift and go to state 53
    STRING          shift and go to state 28
    TRIPLESTRING    shift and go to state 51
    FNUMBER         shift and go to state 31
    LSQB            shift and go to state 39
    LPAREN          shift and go to state 36

    comparison                     shift and go to state 42
    term                           shift and go to state 43
    power                          shift and go to state 16
    arith_expr                     shift and go to state 45
    expr                           shift and go to state 46
    atom                           shift and go to state 37
    shift_expr                     shift and go to state 19
    or_test                        shift and go to state 47
    test                           shift and go to state 107
    and_test                       shift and go to state 35
    not_test                       shift and go to state 9
    factor                         shift and go to state 27
    xor_expr                       shift and go to state 15
    and_expr                       shift and go to state 25
    test_expr                      shift and go to state 23

state 57

    (32) flow_stmt -> return_stmt Marker .

    NEWLINE         reduce using rule 32 (flow_stmt -> return_stmt Marker .)


state 58

    (59) and_test -> not_test AND . and_test
    (58) and_test -> . not_test
    (59) and_test -> . not_test AND and_test
    (60) not_test -> . NOT not_test
    (61) not_test -> . comparison
    (62) comparison -> . expr
    (63) comparison -> . expr comp_op expr
    (70) expr -> . xor_expr
    (71) expr -> . xor_expr VBAR expr
    (72) xor_expr -> . and_expr
    (73) xor_expr -> . and_expr CIRCUMFLEX xor_expr
    (74) and_expr -> . shift_expr
    (75) and_expr -> . shift_expr AMPER and_expr
    (76) shift_expr -> . arith_expr
    (77) shift_expr -> . arith_expr LEFTSHIFT shift_expr
    (78) shift_expr -> . arith_expr RIGHTSHIFT shift_expr
    (79) arith_expr -> . term
    (80) arith_expr -> . term PLUS arith_expr
    (81) arith_expr -> . term MINUS arith_expr
    (82) term -> . factor
    (83) term -> . factor STAR term
    (84) term -> . factor SLASH term
    (85) term -> . factor PERCENT term
    (86) factor -> . power
    (87) factor -> . PLUS factor
    (88) factor -> . MINUS factor
    (89) power -> . atom
    (90) power -> . atom LSQB test RSQB
    (91) atom -> . NAME
    (92) atom -> . NUMBER
    (93) atom -> . STRING
    (94) atom -> . TRIPLESTRING
    (95) atom -> . FNUMBER
    (96) atom -> . LSQB RSQB
    (97) atom -> . LSQB listmaker RSQB
    (98) atom -> . LPAREN RPAREN
    (99) atom -> . LPAREN testlist_comp RPAREN

    NOT             shift and go to state 33
    PLUS            shift and go to state 20
    MINUS           shift and go to state 12
    NAME            shift and go to state 61
    NUMBER          shift and go to state 53
    STRING          shift and go to state 28
    TRIPLESTRING    shift and go to state 51
    FNUMBER         shift and go to state 31
    LSQB            shift and go to state 39
    LPAREN          shift and go to state 36

    comparison                     shift and go to state 42
    power                          shift and go to state 16
    arith_expr                     shift and go to state 45
    expr                           shift and go to state 46
    atom                           shift and go to state 37
    shift_expr                     shift and go to state 19
    term                           shift and go to state 43
    and_test                       shift and go to state 108
    not_test                       shift and go to state 9
    factor                         shift and go to state 27
    xor_expr                       shift and go to state 15
    and_expr                       shift and go to state 25

state 59

    (104) testlist -> test .
    (105) testlist -> test . COMMA testlist

    RPAREN          reduce using rule 104 (testlist -> test .)
    NEWLINE         reduce using rule 104 (testlist -> test .)
    COMMA           shift and go to state 109


state 60

    (30) print_stmt -> PRINT testlist .

    NEWLINE         reduce using rule 30 (print_stmt -> PRINT testlist .)


state 61

    (91) atom -> NAME .

    LSQB            reduce using rule 91 (atom -> NAME .)
    STAR            reduce using rule 91 (atom -> NAME .)
    SLASH           reduce using rule 91 (atom -> NAME .)
    PERCENT         reduce using rule 91 (atom -> NAME .)
    PLUS            reduce using rule 91 (atom -> NAME .)
    MINUS           reduce using rule 91 (atom -> NAME .)
    LEFTSHIFT       reduce using rule 91 (atom -> NAME .)
    RIGHTSHIFT      reduce using rule 91 (atom -> NAME .)
    AMPER           reduce using rule 91 (atom -> NAME .)
    CIRCUMFLEX      reduce using rule 91 (atom -> NAME .)
    VBAR            reduce using rule 91 (atom -> NAME .)
    LESS            reduce using rule 91 (atom -> NAME .)
    GREATER         reduce using rule 91 (atom -> NAME .)
    EQEQUAL         reduce using rule 91 (atom -> NAME .)
    GREATEREQUAL    reduce using rule 91 (atom -> NAME .)
    LESSEQUAL       reduce using rule 91 (atom -> NAME .)
    NOTEQUAL        reduce using rule 91 (atom -> NAME .)
    AND             reduce using rule 91 (atom -> NAME .)
    OR              reduce using rule 91 (atom -> NAME .)
    EQUAL           reduce using rule 91 (atom -> NAME .)
    COMMA           reduce using rule 91 (atom -> NAME .)
    NEWLINE         reduce using rule 91 (atom -> NAME .)
    RPAREN          reduce using rule 91 (atom -> NAME .)
    RSQB            reduce using rule 91 (atom -> NAME .)
    COLON           reduce using rule 91 (atom -> NAME .)
    IN              reduce using rule 91 (atom -> NAME .)


state 62

    (37) return_stmt -> RETURN test .

    NEWLINE         reduce using rule 37 (return_stmt -> RETURN test .)


state 63

    (88) factor -> MINUS factor .

    STAR            reduce using rule 88 (factor -> MINUS factor .)
    SLASH           reduce using rule 88 (factor -> MINUS factor .)
    PERCENT         reduce using rule 88 (factor -> MINUS factor .)
    PLUS            reduce using rule 88 (factor -> MINUS factor .)
    MINUS           reduce using rule 88 (factor -> MINUS factor .)
    LEFTSHIFT       reduce using rule 88 (factor -> MINUS factor .)
    RIGHTSHIFT      reduce using rule 88 (factor -> MINUS factor .)
    AMPER           reduce using rule 88 (factor -> MINUS factor .)
    CIRCUMFLEX      reduce using rule 88 (factor -> MINUS factor .)
    VBAR            reduce using rule 88 (factor -> MINUS factor .)
    LESS            reduce using rule 88 (factor -> MINUS factor .)
    GREATER         reduce using rule 88 (factor -> MINUS factor .)
    EQEQUAL         reduce using rule 88 (factor -> MINUS factor .)
    GREATEREQUAL    reduce using rule 88 (factor -> MINUS factor .)
    LESSEQUAL       reduce using rule 88 (factor -> MINUS factor .)
    NOTEQUAL        reduce using rule 88 (factor -> MINUS factor .)
    AND             reduce using rule 88 (factor -> MINUS factor .)
    OR              reduce using rule 88 (factor -> MINUS factor .)
    COMMA           reduce using rule 88 (factor -> MINUS factor .)
    RPAREN          reduce using rule 88 (factor -> MINUS factor .)
    EQUAL           reduce using rule 88 (factor -> MINUS factor .)
    NEWLINE         reduce using rule 88 (factor -> MINUS factor .)
    RSQB            reduce using rule 88 (factor -> MINUS factor .)
    COLON           reduce using rule 88 (factor -> MINUS factor .)


state 64

    (5) funcdef -> DEF NAME . MarkerScope parameters MarkerArg COLON suite
    (6) MarkerScope -> .

    LPAREN          reduce using rule 6 (MarkerScope -> .)

    MarkerScope                    shift and go to state 110

state 65

    (24) small_stmt -> flow_stmt Marker .

    NEWLINE         reduce using rule 24 (small_stmt -> flow_stmt Marker .)


state 66

    (71) expr -> xor_expr VBAR . expr
    (70) expr -> . xor_expr
    (71) expr -> . xor_expr VBAR expr
    (72) xor_expr -> . and_expr
    (73) xor_expr -> . and_expr CIRCUMFLEX xor_expr
    (74) and_expr -> . shift_expr
    (75) and_expr -> . shift_expr AMPER and_expr
    (76) shift_expr -> . arith_expr
    (77) shift_expr -> . arith_expr LEFTSHIFT shift_expr
    (78) shift_expr -> . arith_expr RIGHTSHIFT shift_expr
    (79) arith_expr -> . term
    (80) arith_expr -> . term PLUS arith_expr
    (81) arith_expr -> . term MINUS arith_expr
    (82) term -> . factor
    (83) term -> . factor STAR term
    (84) term -> . factor SLASH term
    (85) term -> . factor PERCENT term
    (86) factor -> . power
    (87) factor -> . PLUS factor
    (88) factor -> . MINUS factor
    (89) power -> . atom
    (90) power -> . atom LSQB test RSQB
    (91) atom -> . NAME
    (92) atom -> . NUMBER
    (93) atom -> . STRING
    (94) atom -> . TRIPLESTRING
    (95) atom -> . FNUMBER
    (96) atom -> . LSQB RSQB
    (97) atom -> . LSQB listmaker RSQB
    (98) atom -> . LPAREN RPAREN
    (99) atom -> . LPAREN testlist_comp RPAREN

    PLUS            shift and go to state 20
    MINUS           shift and go to state 12
    NAME            shift and go to state 61
    NUMBER          shift and go to state 53
    STRING          shift and go to state 28
    TRIPLESTRING    shift and go to state 51
    FNUMBER         shift and go to state 31
    LSQB            shift and go to state 39
    LPAREN          shift and go to state 36

    term                           shift and go to state 43
    power                          shift and go to state 16
    arith_expr                     shift and go to state 45
    expr                           shift and go to state 111
    atom                           shift and go to state 37
    shift_expr                     shift and go to state 19
    factor                         shift and go to state 27
    xor_expr                       shift and go to state 15
    and_expr                       shift and go to state 25

state 67

    (33) flow_stmt -> continue_stmt Marker .

    NEWLINE         reduce using rule 33 (flow_stmt -> continue_stmt Marker .)


state 68

    (75) and_expr -> shift_expr AMPER . and_expr
    (74) and_expr -> . shift_expr
    (75) and_expr -> . shift_expr AMPER and_expr
    (76) shift_expr -> . arith_expr
    (77) shift_expr -> . arith_expr LEFTSHIFT shift_expr
    (78) shift_expr -> . arith_expr RIGHTSHIFT shift_expr
    (79) arith_expr -> . term
    (80) arith_expr -> . term PLUS arith_expr
    (81) arith_expr -> . term MINUS arith_expr
    (82) term -> . factor
    (83) term -> . factor STAR term
    (84) term -> . factor SLASH term
    (85) term -> . factor PERCENT term
    (86) factor -> . power
    (87) factor -> . PLUS factor
    (88) factor -> . MINUS factor
    (89) power -> . atom
    (90) power -> . atom LSQB test RSQB
    (91) atom -> . NAME
    (92) atom -> . NUMBER
    (93) atom -> . STRING
    (94) atom -> . TRIPLESTRING
    (95) atom -> . FNUMBER
    (96) atom -> . LSQB RSQB
    (97) atom -> . LSQB listmaker RSQB
    (98) atom -> . LPAREN RPAREN
    (99) atom -> . LPAREN testlist_comp RPAREN

    PLUS            shift and go to state 20
    MINUS           shift and go to state 12
    NAME            shift and go to state 61
    NUMBER          shift and go to state 53
    STRING          shift and go to state 28
    TRIPLESTRING    shift and go to state 51
    FNUMBER         shift and go to state 31
    LSQB            shift and go to state 39
    LPAREN          shift and go to state 36

    term                           shift and go to state 43
    arith_expr                     shift and go to state 45
    power                          shift and go to state 16
    atom                           shift and go to state 37
    shift_expr                     shift and go to state 19
    factor                         shift and go to state 27
    and_expr                       shift and go to state 112

state 69

    (87) factor -> PLUS factor .

    STAR            reduce using rule 87 (factor -> PLUS factor .)
    SLASH           reduce using rule 87 (factor -> PLUS factor .)
    PERCENT         reduce using rule 87 (factor -> PLUS factor .)
    PLUS            reduce using rule 87 (factor -> PLUS factor .)
    MINUS           reduce using rule 87 (factor -> PLUS factor .)
    LEFTSHIFT       reduce using rule 87 (factor -> PLUS factor .)
    RIGHTSHIFT      reduce using rule 87 (factor -> PLUS factor .)
    AMPER           reduce using rule 87 (factor -> PLUS factor .)
    CIRCUMFLEX      reduce using rule 87 (factor -> PLUS factor .)
    VBAR            reduce using rule 87 (factor -> PLUS factor .)
    LESS            reduce using rule 87 (factor -> PLUS factor .)
    GREATER         reduce using rule 87 (factor -> PLUS factor .)
    EQEQUAL         reduce using rule 87 (factor -> PLUS factor .)
    GREATEREQUAL    reduce using rule 87 (factor -> PLUS factor .)
    LESSEQUAL       reduce using rule 87 (factor -> PLUS factor .)
    NOTEQUAL        reduce using rule 87 (factor -> PLUS factor .)
    AND             reduce using rule 87 (factor -> PLUS factor .)
    OR              reduce using rule 87 (factor -> PLUS factor .)
    COMMA           reduce using rule 87 (factor -> PLUS factor .)
    RPAREN          reduce using rule 87 (factor -> PLUS factor .)
    EQUAL           reduce using rule 87 (factor -> PLUS factor .)
    NEWLINE         reduce using rule 87 (factor -> PLUS factor .)
    RSQB            reduce using rule 87 (factor -> PLUS factor .)
    COLON           reduce using rule 87 (factor -> PLUS factor .)


state 70

    (26) small_stmt -> print_stmt Marker .

    NEWLINE         reduce using rule 26 (small_stmt -> print_stmt Marker .)


state 71

    (27) expr_stmt -> test EQUAL . test
    (28) expr_stmt -> test EQUAL . function_call
    (54) test -> . test_expr
    (10) function_call -> . NAME LPAREN RPAREN
    (11) function_call -> . NAME LPAREN testlist RPAREN
    (55) test_expr -> . or_test
    (56) or_test -> . and_test
    (57) or_test -> . and_test OR or_test
    (58) and_test -> . not_test
    (59) and_test -> . not_test AND and_test
    (60) not_test -> . NOT not_test
    (61) not_test -> . comparison
    (62) comparison -> . expr
    (63) comparison -> . expr comp_op expr
    (70) expr -> . xor_expr
    (71) expr -> . xor_expr VBAR expr
    (72) xor_expr -> . and_expr
    (73) xor_expr -> . and_expr CIRCUMFLEX xor_expr
    (74) and_expr -> . shift_expr
    (75) and_expr -> . shift_expr AMPER and_expr
    (76) shift_expr -> . arith_expr
    (77) shift_expr -> . arith_expr LEFTSHIFT shift_expr
    (78) shift_expr -> . arith_expr RIGHTSHIFT shift_expr
    (79) arith_expr -> . term
    (80) arith_expr -> . term PLUS arith_expr
    (81) arith_expr -> . term MINUS arith_expr
    (82) term -> . factor
    (83) term -> . factor STAR term
    (84) term -> . factor SLASH term
    (85) term -> . factor PERCENT term
    (86) factor -> . power
    (87) factor -> . PLUS factor
    (88) factor -> . MINUS factor
    (89) power -> . atom
    (90) power -> . atom LSQB test RSQB
    (91) atom -> . NAME
    (92) atom -> . NUMBER
    (93) atom -> . STRING
    (94) atom -> . TRIPLESTRING
    (95) atom -> . FNUMBER
    (96) atom -> . LSQB RSQB
    (97) atom -> . LSQB listmaker RSQB
    (98) atom -> . LPAREN RPAREN
    (99) atom -> . LPAREN testlist_comp RPAREN

    NAME            shift and go to state 4
    NOT             shift and go to state 33
    PLUS            shift and go to state 20
    MINUS           shift and go to state 12
    NUMBER          shift and go to state 53
    STRING          shift and go to state 28
    TRIPLESTRING    shift and go to state 51
    FNUMBER         shift and go to state 31
    LSQB            shift and go to state 39
    LPAREN          shift and go to state 36

    comparison                     shift and go to state 42
    term                           shift and go to state 43
    power                          shift and go to state 16
    arith_expr                     shift and go to state 45
    expr                           shift and go to state 46
    atom                           shift and go to state 37
    or_test                        shift and go to state 47
    and_test                       shift and go to state 35
    shift_expr                     shift and go to state 19
    function_call                  shift and go to state 113
    not_test                       shift and go to state 9
    factor                         shift and go to state 27
    test                           shift and go to state 114
    xor_expr                       shift and go to state 15
    and_expr                       shift and go to state 25
    test_expr                      shift and go to state 23

state 72

    (73) xor_expr -> and_expr CIRCUMFLEX . xor_expr
    (72) xor_expr -> . and_expr
    (73) xor_expr -> . and_expr CIRCUMFLEX xor_expr
    (74) and_expr -> . shift_expr
    (75) and_expr -> . shift_expr AMPER and_expr
    (76) shift_expr -> . arith_expr
    (77) shift_expr -> . arith_expr LEFTSHIFT shift_expr
    (78) shift_expr -> . arith_expr RIGHTSHIFT shift_expr
    (79) arith_expr -> . term
    (80) arith_expr -> . term PLUS arith_expr
    (81) arith_expr -> . term MINUS arith_expr
    (82) term -> . factor
    (83) term -> . factor STAR term
    (84) term -> . factor SLASH term
    (85) term -> . factor PERCENT term
    (86) factor -> . power
    (87) factor -> . PLUS factor
    (88) factor -> . MINUS factor
    (89) power -> . atom
    (90) power -> . atom LSQB test RSQB
    (91) atom -> . NAME
    (92) atom -> . NUMBER
    (93) atom -> . STRING
    (94) atom -> . TRIPLESTRING
    (95) atom -> . FNUMBER
    (96) atom -> . LSQB RSQB
    (97) atom -> . LSQB listmaker RSQB
    (98) atom -> . LPAREN RPAREN
    (99) atom -> . LPAREN testlist_comp RPAREN

    PLUS            shift and go to state 20
    MINUS           shift and go to state 12
    NAME            shift and go to state 61
    NUMBER          shift and go to state 53
    STRING          shift and go to state 28
    TRIPLESTRING    shift and go to state 51
    FNUMBER         shift and go to state 31
    LSQB            shift and go to state 39
    LPAREN          shift and go to state 36

    term                           shift and go to state 43
    power                          shift and go to state 16
    arith_expr                     shift and go to state 45
    atom                           shift and go to state 37
    shift_expr                     shift and go to state 19
    factor                         shift and go to state 27
    xor_expr                       shift and go to state 115
    and_expr                       shift and go to state 25

state 73

    (31) flow_stmt -> break_stmt Marker .

    NEWLINE         reduce using rule 31 (flow_stmt -> break_stmt Marker .)


state 74

    (85) term -> factor PERCENT . term
    (82) term -> . factor
    (83) term -> . factor STAR term
    (84) term -> . factor SLASH term
    (85) term -> . factor PERCENT term
    (86) factor -> . power
    (87) factor -> . PLUS factor
    (88) factor -> . MINUS factor
    (89) power -> . atom
    (90) power -> . atom LSQB test RSQB
    (91) atom -> . NAME
    (92) atom -> . NUMBER
    (93) atom -> . STRING
    (94) atom -> . TRIPLESTRING
    (95) atom -> . FNUMBER
    (96) atom -> . LSQB RSQB
    (97) atom -> . LSQB listmaker RSQB
    (98) atom -> . LPAREN RPAREN
    (99) atom -> . LPAREN testlist_comp RPAREN

    PLUS            shift and go to state 20
    MINUS           shift and go to state 12
    NAME            shift and go to state 61
    NUMBER          shift and go to state 53
    STRING          shift and go to state 28
    TRIPLESTRING    shift and go to state 51
    FNUMBER         shift and go to state 31
    LSQB            shift and go to state 39
    LPAREN          shift and go to state 36

    term                           shift and go to state 116
    power                          shift and go to state 16
    factor                         shift and go to state 27
    atom                           shift and go to state 37

state 75

    (83) term -> factor STAR . term
    (82) term -> . factor
    (83) term -> . factor STAR term
    (84) term -> . factor SLASH term
    (85) term -> . factor PERCENT term
    (86) factor -> . power
    (87) factor -> . PLUS factor
    (88) factor -> . MINUS factor
    (89) power -> . atom
    (90) power -> . atom LSQB test RSQB
    (91) atom -> . NAME
    (92) atom -> . NUMBER
    (93) atom -> . STRING
    (94) atom -> . TRIPLESTRING
    (95) atom -> . FNUMBER
    (96) atom -> . LSQB RSQB
    (97) atom -> . LSQB listmaker RSQB
    (98) atom -> . LPAREN RPAREN
    (99) atom -> . LPAREN testlist_comp RPAREN

    PLUS            shift and go to state 20
    MINUS           shift and go to state 12
    NAME            shift and go to state 61
    NUMBER          shift and go to state 53
    STRING          shift and go to state 28
    TRIPLESTRING    shift and go to state 51
    FNUMBER         shift and go to state 31
    LSQB            shift and go to state 39
    LPAREN          shift and go to state 36

    term                           shift and go to state 117
    power                          shift and go to state 16
    factor                         shift and go to state 27
    atom                           shift and go to state 37

state 76

    (84) term -> factor SLASH . term
    (82) term -> . factor
    (83) term -> . factor STAR term
    (84) term -> . factor SLASH term
    (85) term -> . factor PERCENT term
    (86) factor -> . power
    (87) factor -> . PLUS factor
    (88) factor -> . MINUS factor
    (89) power -> . atom
    (90) power -> . atom LSQB test RSQB
    (91) atom -> . NAME
    (92) atom -> . NUMBER
    (93) atom -> . STRING
    (94) atom -> . TRIPLESTRING
    (95) atom -> . FNUMBER
    (96) atom -> . LSQB RSQB
    (97) atom -> . LSQB listmaker RSQB
    (98) atom -> . LPAREN RPAREN
    (99) atom -> . LPAREN testlist_comp RPAREN

    PLUS            shift and go to state 20
    MINUS           shift and go to state 12
    NAME            shift and go to state 61
    NUMBER          shift and go to state 53
    STRING          shift and go to state 28
    TRIPLESTRING    shift and go to state 51
    FNUMBER         shift and go to state 31
    LSQB            shift and go to state 39
    LPAREN          shift and go to state 36

    term                           shift and go to state 118
    power                          shift and go to state 16
    factor                         shift and go to state 27
    atom                           shift and go to state 37

state 77

    (50) for_stmt -> FOR atom . IN test COLON MarkerFor suite

    IN              shift and go to state 119


state 78

    (60) not_test -> NOT not_test .

    AND             reduce using rule 60 (not_test -> NOT not_test .)
    OR              reduce using rule 60 (not_test -> NOT not_test .)
    EQUAL           reduce using rule 60 (not_test -> NOT not_test .)
    NEWLINE         reduce using rule 60 (not_test -> NOT not_test .)
    COLON           reduce using rule 60 (not_test -> NOT not_test .)
    COMMA           reduce using rule 60 (not_test -> NOT not_test .)
    RPAREN          reduce using rule 60 (not_test -> NOT not_test .)
    RSQB            reduce using rule 60 (not_test -> NOT not_test .)


state 79

    (39) compound_stmt -> for_stmt Marker .

    ENDMARKER       reduce using rule 39 (compound_stmt -> for_stmt Marker .)
    NEWLINE         reduce using rule 39 (compound_stmt -> for_stmt Marker .)
    IF              reduce using rule 39 (compound_stmt -> for_stmt Marker .)
    FOR             reduce using rule 39 (compound_stmt -> for_stmt Marker .)
    WHILE           reduce using rule 39 (compound_stmt -> for_stmt Marker .)
    DEF             reduce using rule 39 (compound_stmt -> for_stmt Marker .)
    NAME            reduce using rule 39 (compound_stmt -> for_stmt Marker .)
    PRINT           reduce using rule 39 (compound_stmt -> for_stmt Marker .)
    BREAK           reduce using rule 39 (compound_stmt -> for_stmt Marker .)
    RETURN          reduce using rule 39 (compound_stmt -> for_stmt Marker .)
    CONTINUE        reduce using rule 39 (compound_stmt -> for_stmt Marker .)
    NOT             reduce using rule 39 (compound_stmt -> for_stmt Marker .)
    PLUS            reduce using rule 39 (compound_stmt -> for_stmt Marker .)
    MINUS           reduce using rule 39 (compound_stmt -> for_stmt Marker .)
    NUMBER          reduce using rule 39 (compound_stmt -> for_stmt Marker .)
    STRING          reduce using rule 39 (compound_stmt -> for_stmt Marker .)
    TRIPLESTRING    reduce using rule 39 (compound_stmt -> for_stmt Marker .)
    FNUMBER         reduce using rule 39 (compound_stmt -> for_stmt Marker .)
    LSQB            reduce using rule 39 (compound_stmt -> for_stmt Marker .)
    LPAREN          reduce using rule 39 (compound_stmt -> for_stmt Marker .)
    DEDENT          reduce using rule 39 (compound_stmt -> for_stmt Marker .)


state 80

    (57) or_test -> and_test OR . or_test
    (56) or_test -> . and_test
    (57) or_test -> . and_test OR or_test
    (58) and_test -> . not_test
    (59) and_test -> . not_test AND and_test
    (60) not_test -> . NOT not_test
    (61) not_test -> . comparison
    (62) comparison -> . expr
    (63) comparison -> . expr comp_op expr
    (70) expr -> . xor_expr
    (71) expr -> . xor_expr VBAR expr
    (72) xor_expr -> . and_expr
    (73) xor_expr -> . and_expr CIRCUMFLEX xor_expr
    (74) and_expr -> . shift_expr
    (75) and_expr -> . shift_expr AMPER and_expr
    (76) shift_expr -> . arith_expr
    (77) shift_expr -> . arith_expr LEFTSHIFT shift_expr
    (78) shift_expr -> . arith_expr RIGHTSHIFT shift_expr
    (79) arith_expr -> . term
    (80) arith_expr -> . term PLUS arith_expr
    (81) arith_expr -> . term MINUS arith_expr
    (82) term -> . factor
    (83) term -> . factor STAR term
    (84) term -> . factor SLASH term
    (85) term -> . factor PERCENT term
    (86) factor -> . power
    (87) factor -> . PLUS factor
    (88) factor -> . MINUS factor
    (89) power -> . atom
    (90) power -> . atom LSQB test RSQB
    (91) atom -> . NAME
    (92) atom -> . NUMBER
    (93) atom -> . STRING
    (94) atom -> . TRIPLESTRING
    (95) atom -> . FNUMBER
    (96) atom -> . LSQB RSQB
    (97) atom -> . LSQB listmaker RSQB
    (98) atom -> . LPAREN RPAREN
    (99) atom -> . LPAREN testlist_comp RPAREN

    NOT             shift and go to state 33
    PLUS            shift and go to state 20
    MINUS           shift and go to state 12
    NAME            shift and go to state 61
    NUMBER          shift and go to state 53
    STRING          shift and go to state 28
    TRIPLESTRING    shift and go to state 51
    FNUMBER         shift and go to state 31
    LSQB            shift and go to state 39
    LPAREN          shift and go to state 36

    comparison                     shift and go to state 42
    power                          shift and go to state 16
    arith_expr                     shift and go to state 45
    expr                           shift and go to state 46
    atom                           shift and go to state 37
    shift_expr                     shift and go to state 19
    or_test                        shift and go to state 120
    and_test                       shift and go to state 35
    term                           shift and go to state 43
    not_test                       shift and go to state 9
    factor                         shift and go to state 27
    xor_expr                       shift and go to state 15
    and_expr                       shift and go to state 25

state 81

    (99) atom -> LPAREN testlist_comp . RPAREN

    RPAREN          shift and go to state 121


state 82

    (98) atom -> LPAREN RPAREN .

    LSQB            reduce using rule 98 (atom -> LPAREN RPAREN .)
    STAR            reduce using rule 98 (atom -> LPAREN RPAREN .)
    SLASH           reduce using rule 98 (atom -> LPAREN RPAREN .)
    PERCENT         reduce using rule 98 (atom -> LPAREN RPAREN .)
    PLUS            reduce using rule 98 (atom -> LPAREN RPAREN .)
    MINUS           reduce using rule 98 (atom -> LPAREN RPAREN .)
    LEFTSHIFT       reduce using rule 98 (atom -> LPAREN RPAREN .)
    RIGHTSHIFT      reduce using rule 98 (atom -> LPAREN RPAREN .)
    AMPER           reduce using rule 98 (atom -> LPAREN RPAREN .)
    CIRCUMFLEX      reduce using rule 98 (atom -> LPAREN RPAREN .)
    VBAR            reduce using rule 98 (atom -> LPAREN RPAREN .)
    LESS            reduce using rule 98 (atom -> LPAREN RPAREN .)
    GREATER         reduce using rule 98 (atom -> LPAREN RPAREN .)
    EQEQUAL         reduce using rule 98 (atom -> LPAREN RPAREN .)
    GREATEREQUAL    reduce using rule 98 (atom -> LPAREN RPAREN .)
    LESSEQUAL       reduce using rule 98 (atom -> LPAREN RPAREN .)
    NOTEQUAL        reduce using rule 98 (atom -> LPAREN RPAREN .)
    AND             reduce using rule 98 (atom -> LPAREN RPAREN .)
    OR              reduce using rule 98 (atom -> LPAREN RPAREN .)
    EQUAL           reduce using rule 98 (atom -> LPAREN RPAREN .)
    COMMA           reduce using rule 98 (atom -> LPAREN RPAREN .)
    NEWLINE         reduce using rule 98 (atom -> LPAREN RPAREN .)
    RPAREN          reduce using rule 98 (atom -> LPAREN RPAREN .)
    RSQB            reduce using rule 98 (atom -> LPAREN RPAREN .)
    COLON           reduce using rule 98 (atom -> LPAREN RPAREN .)
    IN              reduce using rule 98 (atom -> LPAREN RPAREN .)


state 83

    (102) testlist_comp -> test .
    (103) testlist_comp -> test . COMMA testlist_comp

    RPAREN          reduce using rule 102 (testlist_comp -> test .)
    COMMA           shift and go to state 122


state 84

    (90) power -> atom LSQB . test RSQB
    (54) test -> . test_expr
    (55) test_expr -> . or_test
    (56) or_test -> . and_test
    (57) or_test -> . and_test OR or_test
    (58) and_test -> . not_test
    (59) and_test -> . not_test AND and_test
    (60) not_test -> . NOT not_test
    (61) not_test -> . comparison
    (62) comparison -> . expr
    (63) comparison -> . expr comp_op expr
    (70) expr -> . xor_expr
    (71) expr -> . xor_expr VBAR expr
    (72) xor_expr -> . and_expr
    (73) xor_expr -> . and_expr CIRCUMFLEX xor_expr
    (74) and_expr -> . shift_expr
    (75) and_expr -> . shift_expr AMPER and_expr
    (76) shift_expr -> . arith_expr
    (77) shift_expr -> . arith_expr LEFTSHIFT shift_expr
    (78) shift_expr -> . arith_expr RIGHTSHIFT shift_expr
    (79) arith_expr -> . term
    (80) arith_expr -> . term PLUS arith_expr
    (81) arith_expr -> . term MINUS arith_expr
    (82) term -> . factor
    (83) term -> . factor STAR term
    (84) term -> . factor SLASH term
    (85) term -> . factor PERCENT term
    (86) factor -> . power
    (87) factor -> . PLUS factor
    (88) factor -> . MINUS factor
    (89) power -> . atom
    (90) power -> . atom LSQB test RSQB
    (91) atom -> . NAME
    (92) atom -> . NUMBER
    (93) atom -> . STRING
    (94) atom -> . TRIPLESTRING
    (95) atom -> . FNUMBER
    (96) atom -> . LSQB RSQB
    (97) atom -> . LSQB listmaker RSQB
    (98) atom -> . LPAREN RPAREN
    (99) atom -> . LPAREN testlist_comp RPAREN

    NOT             shift and go to state 33
    PLUS            shift and go to state 20
    MINUS           shift and go to state 12
    NAME            shift and go to state 61
    NUMBER          shift and go to state 53
    STRING          shift and go to state 28
    TRIPLESTRING    shift and go to state 51
    FNUMBER         shift and go to state 31
    LSQB            shift and go to state 39
    LPAREN          shift and go to state 36

    comparison                     shift and go to state 42
    power                          shift and go to state 16
    arith_expr                     shift and go to state 45
    expr                           shift and go to state 46
    factor                         shift and go to state 27
    shift_expr                     shift and go to state 19
    or_test                        shift and go to state 47
    and_test                       shift and go to state 35
    term                           shift and go to state 43
    not_test                       shift and go to state 9
    atom                           shift and go to state 37
    test                           shift and go to state 123
    xor_expr                       shift and go to state 15
    and_expr                       shift and go to state 25
    test_expr                      shift and go to state 23

state 85

    (41) compound_stmt -> funcdef Marker .

    ENDMARKER       reduce using rule 41 (compound_stmt -> funcdef Marker .)
    NEWLINE         reduce using rule 41 (compound_stmt -> funcdef Marker .)
    IF              reduce using rule 41 (compound_stmt -> funcdef Marker .)
    FOR             reduce using rule 41 (compound_stmt -> funcdef Marker .)
    WHILE           reduce using rule 41 (compound_stmt -> funcdef Marker .)
    DEF             reduce using rule 41 (compound_stmt -> funcdef Marker .)
    NAME            reduce using rule 41 (compound_stmt -> funcdef Marker .)
    PRINT           reduce using rule 41 (compound_stmt -> funcdef Marker .)
    BREAK           reduce using rule 41 (compound_stmt -> funcdef Marker .)
    RETURN          reduce using rule 41 (compound_stmt -> funcdef Marker .)
    CONTINUE        reduce using rule 41 (compound_stmt -> funcdef Marker .)
    NOT             reduce using rule 41 (compound_stmt -> funcdef Marker .)
    PLUS            reduce using rule 41 (compound_stmt -> funcdef Marker .)
    MINUS           reduce using rule 41 (compound_stmt -> funcdef Marker .)
    NUMBER          reduce using rule 41 (compound_stmt -> funcdef Marker .)
    STRING          reduce using rule 41 (compound_stmt -> funcdef Marker .)
    TRIPLESTRING    reduce using rule 41 (compound_stmt -> funcdef Marker .)
    FNUMBER         reduce using rule 41 (compound_stmt -> funcdef Marker .)
    LSQB            reduce using rule 41 (compound_stmt -> funcdef Marker .)
    LPAREN          reduce using rule 41 (compound_stmt -> funcdef Marker .)
    DEDENT          reduce using rule 41 (compound_stmt -> funcdef Marker .)


state 86

    (97) atom -> LSQB listmaker . RSQB

    RSQB            shift and go to state 124


state 87

    (100) listmaker -> test .
    (101) listmaker -> test . COMMA listmaker

    RSQB            reduce using rule 100 (listmaker -> test .)
    COMMA           shift and go to state 125


state 88

    (96) atom -> LSQB RSQB .

    LSQB            reduce using rule 96 (atom -> LSQB RSQB .)
    STAR            reduce using rule 96 (atom -> LSQB RSQB .)
    SLASH           reduce using rule 96 (atom -> LSQB RSQB .)
    PERCENT         reduce using rule 96 (atom -> LSQB RSQB .)
    PLUS            reduce using rule 96 (atom -> LSQB RSQB .)
    MINUS           reduce using rule 96 (atom -> LSQB RSQB .)
    LEFTSHIFT       reduce using rule 96 (atom -> LSQB RSQB .)
    RIGHTSHIFT      reduce using rule 96 (atom -> LSQB RSQB .)
    AMPER           reduce using rule 96 (atom -> LSQB RSQB .)
    CIRCUMFLEX      reduce using rule 96 (atom -> LSQB RSQB .)
    VBAR            reduce using rule 96 (atom -> LSQB RSQB .)
    LESS            reduce using rule 96 (atom -> LSQB RSQB .)
    GREATER         reduce using rule 96 (atom -> LSQB RSQB .)
    EQEQUAL         reduce using rule 96 (atom -> LSQB RSQB .)
    GREATEREQUAL    reduce using rule 96 (atom -> LSQB RSQB .)
    LESSEQUAL       reduce using rule 96 (atom -> LSQB RSQB .)
    NOTEQUAL        reduce using rule 96 (atom -> LSQB RSQB .)
    AND             reduce using rule 96 (atom -> LSQB RSQB .)
    OR              reduce using rule 96 (atom -> LSQB RSQB .)
    EQUAL           reduce using rule 96 (atom -> LSQB RSQB .)
    COMMA           reduce using rule 96 (atom -> LSQB RSQB .)
    NEWLINE         reduce using rule 96 (atom -> LSQB RSQB .)
    RPAREN          reduce using rule 96 (atom -> LSQB RSQB .)
    RSQB            reduce using rule 96 (atom -> LSQB RSQB .)
    COLON           reduce using rule 96 (atom -> LSQB RSQB .)
    IN              reduce using rule 96 (atom -> LSQB RSQB .)


state 89

    (25) small_stmt -> expr_stmt Marker .

    NEWLINE         reduce using rule 25 (small_stmt -> expr_stmt Marker .)


state 90

    (43) if_stmt -> IF test . COLON MarkerIf suite
    (44) if_stmt -> IF test . COLON MarkerIf suite ELSE COLON MarkerElse suite

    COLON           shift and go to state 126


state 91

    (80) arith_expr -> term PLUS . arith_expr
    (79) arith_expr -> . term
    (80) arith_expr -> . term PLUS arith_expr
    (81) arith_expr -> . term MINUS arith_expr
    (82) term -> . factor
    (83) term -> . factor STAR term
    (84) term -> . factor SLASH term
    (85) term -> . factor PERCENT term
    (86) factor -> . power
    (87) factor -> . PLUS factor
    (88) factor -> . MINUS factor
    (89) power -> . atom
    (90) power -> . atom LSQB test RSQB
    (91) atom -> . NAME
    (92) atom -> . NUMBER
    (93) atom -> . STRING
    (94) atom -> . TRIPLESTRING
    (95) atom -> . FNUMBER
    (96) atom -> . LSQB RSQB
    (97) atom -> . LSQB listmaker RSQB
    (98) atom -> . LPAREN RPAREN
    (99) atom -> . LPAREN testlist_comp RPAREN

    PLUS            shift and go to state 20
    MINUS           shift and go to state 12
    NAME            shift and go to state 61
    NUMBER          shift and go to state 53
    STRING          shift and go to state 28
    TRIPLESTRING    shift and go to state 51
    FNUMBER         shift and go to state 31
    LSQB            shift and go to state 39
    LPAREN          shift and go to state 36

    term                           shift and go to state 43
    arith_expr                     shift and go to state 127
    power                          shift and go to state 16
    factor                         shift and go to state 27
    atom                           shift and go to state 37

state 92

    (81) arith_expr -> term MINUS . arith_expr
    (79) arith_expr -> . term
    (80) arith_expr -> . term PLUS arith_expr
    (81) arith_expr -> . term MINUS arith_expr
    (82) term -> . factor
    (83) term -> . factor STAR term
    (84) term -> . factor SLASH term
    (85) term -> . factor PERCENT term
    (86) factor -> . power
    (87) factor -> . PLUS factor
    (88) factor -> . MINUS factor
    (89) power -> . atom
    (90) power -> . atom LSQB test RSQB
    (91) atom -> . NAME
    (92) atom -> . NUMBER
    (93) atom -> . STRING
    (94) atom -> . TRIPLESTRING
    (95) atom -> . FNUMBER
    (96) atom -> . LSQB RSQB
    (97) atom -> . LSQB listmaker RSQB
    (98) atom -> . LPAREN RPAREN
    (99) atom -> . LPAREN testlist_comp RPAREN

    PLUS            shift and go to state 20
    MINUS           shift and go to state 12
    NAME            shift and go to state 61
    NUMBER          shift and go to state 53
    STRING          shift and go to state 28
    TRIPLESTRING    shift and go to state 51
    FNUMBER         shift and go to state 31
    LSQB            shift and go to state 39
    LPAREN          shift and go to state 36

    term                           shift and go to state 43
    arith_expr                     shift and go to state 128
    power                          shift and go to state 16
    factor                         shift and go to state 27
    atom                           shift and go to state 37

state 93

    (38) compound_stmt -> if_stmt Marker .

    ENDMARKER       reduce using rule 38 (compound_stmt -> if_stmt Marker .)
    NEWLINE         reduce using rule 38 (compound_stmt -> if_stmt Marker .)
    IF              reduce using rule 38 (compound_stmt -> if_stmt Marker .)
    FOR             reduce using rule 38 (compound_stmt -> if_stmt Marker .)
    WHILE           reduce using rule 38 (compound_stmt -> if_stmt Marker .)
    DEF             reduce using rule 38 (compound_stmt -> if_stmt Marker .)
    NAME            reduce using rule 38 (compound_stmt -> if_stmt Marker .)
    PRINT           reduce using rule 38 (compound_stmt -> if_stmt Marker .)
    BREAK           reduce using rule 38 (compound_stmt -> if_stmt Marker .)
    RETURN          reduce using rule 38 (compound_stmt -> if_stmt Marker .)
    CONTINUE        reduce using rule 38 (compound_stmt -> if_stmt Marker .)
    NOT             reduce using rule 38 (compound_stmt -> if_stmt Marker .)
    PLUS            reduce using rule 38 (compound_stmt -> if_stmt Marker .)
    MINUS           reduce using rule 38 (compound_stmt -> if_stmt Marker .)
    NUMBER          reduce using rule 38 (compound_stmt -> if_stmt Marker .)
    STRING          reduce using rule 38 (compound_stmt -> if_stmt Marker .)
    TRIPLESTRING    reduce using rule 38 (compound_stmt -> if_stmt Marker .)
    FNUMBER         reduce using rule 38 (compound_stmt -> if_stmt Marker .)
    LSQB            reduce using rule 38 (compound_stmt -> if_stmt Marker .)
    LPAREN          reduce using rule 38 (compound_stmt -> if_stmt Marker .)
    DEDENT          reduce using rule 38 (compound_stmt -> if_stmt Marker .)


state 94

    (77) shift_expr -> arith_expr LEFTSHIFT . shift_expr
    (76) shift_expr -> . arith_expr
    (77) shift_expr -> . arith_expr LEFTSHIFT shift_expr
    (78) shift_expr -> . arith_expr RIGHTSHIFT shift_expr
    (79) arith_expr -> . term
    (80) arith_expr -> . term PLUS arith_expr
    (81) arith_expr -> . term MINUS arith_expr
    (82) term -> . factor
    (83) term -> . factor STAR term
    (84) term -> . factor SLASH term
    (85) term -> . factor PERCENT term
    (86) factor -> . power
    (87) factor -> . PLUS factor
    (88) factor -> . MINUS factor
    (89) power -> . atom
    (90) power -> . atom LSQB test RSQB
    (91) atom -> . NAME
    (92) atom -> . NUMBER
    (93) atom -> . STRING
    (94) atom -> . TRIPLESTRING
    (95) atom -> . FNUMBER
    (96) atom -> . LSQB RSQB
    (97) atom -> . LSQB listmaker RSQB
    (98) atom -> . LPAREN RPAREN
    (99) atom -> . LPAREN testlist_comp RPAREN

    PLUS            shift and go to state 20
    MINUS           shift and go to state 12
    NAME            shift and go to state 61
    NUMBER          shift and go to state 53
    STRING          shift and go to state 28
    TRIPLESTRING    shift and go to state 51
    FNUMBER         shift and go to state 31
    LSQB            shift and go to state 39
    LPAREN          shift and go to state 36

    term                           shift and go to state 43
    arith_expr                     shift and go to state 45
    power                          shift and go to state 16
    factor                         shift and go to state 27
    shift_expr                     shift and go to state 129
    atom                           shift and go to state 37

state 95

    (78) shift_expr -> arith_expr RIGHTSHIFT . shift_expr
    (76) shift_expr -> . arith_expr
    (77) shift_expr -> . arith_expr LEFTSHIFT shift_expr
    (78) shift_expr -> . arith_expr RIGHTSHIFT shift_expr
    (79) arith_expr -> . term
    (80) arith_expr -> . term PLUS arith_expr
    (81) arith_expr -> . term MINUS arith_expr
    (82) term -> . factor
    (83) term -> . factor STAR term
    (84) term -> . factor SLASH term
    (85) term -> . factor PERCENT term
    (86) factor -> . power
    (87) factor -> . PLUS factor
    (88) factor -> . MINUS factor
    (89) power -> . atom
    (90) power -> . atom LSQB test RSQB
    (91) atom -> . NAME
    (92) atom -> . NUMBER
    (93) atom -> . STRING
    (94) atom -> . TRIPLESTRING
    (95) atom -> . FNUMBER
    (96) atom -> . LSQB RSQB
    (97) atom -> . LSQB listmaker RSQB
    (98) atom -> . LPAREN RPAREN
    (99) atom -> . LPAREN testlist_comp RPAREN

    PLUS            shift and go to state 20
    MINUS           shift and go to state 12
    NAME            shift and go to state 61
    NUMBER          shift and go to state 53
    STRING          shift and go to state 28
    TRIPLESTRING    shift and go to state 51
    FNUMBER         shift and go to state 31
    LSQB            shift and go to state 39
    LPAREN          shift and go to state 36

    term                           shift and go to state 43
    arith_expr                     shift and go to state 45
    power                          shift and go to state 16
    factor                         shift and go to state 27
    shift_expr                     shift and go to state 130
    atom                           shift and go to state 37

state 96

    (69) comp_op -> NOTEQUAL .

    PLUS            reduce using rule 69 (comp_op -> NOTEQUAL .)
    MINUS           reduce using rule 69 (comp_op -> NOTEQUAL .)
    NAME            reduce using rule 69 (comp_op -> NOTEQUAL .)
    NUMBER          reduce using rule 69 (comp_op -> NOTEQUAL .)
    STRING          reduce using rule 69 (comp_op -> NOTEQUAL .)
    TRIPLESTRING    reduce using rule 69 (comp_op -> NOTEQUAL .)
    FNUMBER         reduce using rule 69 (comp_op -> NOTEQUAL .)
    LSQB            reduce using rule 69 (comp_op -> NOTEQUAL .)
    LPAREN          reduce using rule 69 (comp_op -> NOTEQUAL .)


state 97

    (63) comparison -> expr comp_op . expr
    (70) expr -> . xor_expr
    (71) expr -> . xor_expr VBAR expr
    (72) xor_expr -> . and_expr
    (73) xor_expr -> . and_expr CIRCUMFLEX xor_expr
    (74) and_expr -> . shift_expr
    (75) and_expr -> . shift_expr AMPER and_expr
    (76) shift_expr -> . arith_expr
    (77) shift_expr -> . arith_expr LEFTSHIFT shift_expr
    (78) shift_expr -> . arith_expr RIGHTSHIFT shift_expr
    (79) arith_expr -> . term
    (80) arith_expr -> . term PLUS arith_expr
    (81) arith_expr -> . term MINUS arith_expr
    (82) term -> . factor
    (83) term -> . factor STAR term
    (84) term -> . factor SLASH term
    (85) term -> . factor PERCENT term
    (86) factor -> . power
    (87) factor -> . PLUS factor
    (88) factor -> . MINUS factor
    (89) power -> . atom
    (90) power -> . atom LSQB test RSQB
    (91) atom -> . NAME
    (92) atom -> . NUMBER
    (93) atom -> . STRING
    (94) atom -> . TRIPLESTRING
    (95) atom -> . FNUMBER
    (96) atom -> . LSQB RSQB
    (97) atom -> . LSQB listmaker RSQB
    (98) atom -> . LPAREN RPAREN
    (99) atom -> . LPAREN testlist_comp RPAREN

    PLUS            shift and go to state 20
    MINUS           shift and go to state 12
    NAME            shift and go to state 61
    NUMBER          shift and go to state 53
    STRING          shift and go to state 28
    TRIPLESTRING    shift and go to state 51
    FNUMBER         shift and go to state 31
    LSQB            shift and go to state 39
    LPAREN          shift and go to state 36

    power                          shift and go to state 16
    arith_expr                     shift and go to state 45
    expr                           shift and go to state 131
    atom                           shift and go to state 37
    shift_expr                     shift and go to state 19
    term                           shift and go to state 43
    factor                         shift and go to state 27
    xor_expr                       shift and go to state 15
    and_expr                       shift and go to state 25

state 98

    (65) comp_op -> GREATER .

    PLUS            reduce using rule 65 (comp_op -> GREATER .)
    MINUS           reduce using rule 65 (comp_op -> GREATER .)
    NAME            reduce using rule 65 (comp_op -> GREATER .)
    NUMBER          reduce using rule 65 (comp_op -> GREATER .)
    STRING          reduce using rule 65 (comp_op -> GREATER .)
    TRIPLESTRING    reduce using rule 65 (comp_op -> GREATER .)
    FNUMBER         reduce using rule 65 (comp_op -> GREATER .)
    LSQB            reduce using rule 65 (comp_op -> GREATER .)
    LPAREN          reduce using rule 65 (comp_op -> GREATER .)


state 99

    (64) comp_op -> LESS .

    PLUS            reduce using rule 64 (comp_op -> LESS .)
    MINUS           reduce using rule 64 (comp_op -> LESS .)
    NAME            reduce using rule 64 (comp_op -> LESS .)
    NUMBER          reduce using rule 64 (comp_op -> LESS .)
    STRING          reduce using rule 64 (comp_op -> LESS .)
    TRIPLESTRING    reduce using rule 64 (comp_op -> LESS .)
    FNUMBER         reduce using rule 64 (comp_op -> LESS .)
    LSQB            reduce using rule 64 (comp_op -> LESS .)
    LPAREN          reduce using rule 64 (comp_op -> LESS .)


state 100

    (67) comp_op -> GREATEREQUAL .

    PLUS            reduce using rule 67 (comp_op -> GREATEREQUAL .)
    MINUS           reduce using rule 67 (comp_op -> GREATEREQUAL .)
    NAME            reduce using rule 67 (comp_op -> GREATEREQUAL .)
    NUMBER          reduce using rule 67 (comp_op -> GREATEREQUAL .)
    STRING          reduce using rule 67 (comp_op -> GREATEREQUAL .)
    TRIPLESTRING    reduce using rule 67 (comp_op -> GREATEREQUAL .)
    FNUMBER         reduce using rule 67 (comp_op -> GREATEREQUAL .)
    LSQB            reduce using rule 67 (comp_op -> GREATEREQUAL .)
    LPAREN          reduce using rule 67 (comp_op -> GREATEREQUAL .)


state 101

    (68) comp_op -> LESSEQUAL .

    PLUS            reduce using rule 68 (comp_op -> LESSEQUAL .)
    MINUS           reduce using rule 68 (comp_op -> LESSEQUAL .)
    NAME            reduce using rule 68 (comp_op -> LESSEQUAL .)
    NUMBER          reduce using rule 68 (comp_op -> LESSEQUAL .)
    STRING          reduce using rule 68 (comp_op -> LESSEQUAL .)
    TRIPLESTRING    reduce using rule 68 (comp_op -> LESSEQUAL .)
    FNUMBER         reduce using rule 68 (comp_op -> LESSEQUAL .)
    LSQB            reduce using rule 68 (comp_op -> LESSEQUAL .)
    LPAREN          reduce using rule 68 (comp_op -> LESSEQUAL .)


state 102

    (66) comp_op -> EQEQUAL .

    PLUS            reduce using rule 66 (comp_op -> EQEQUAL .)
    MINUS           reduce using rule 66 (comp_op -> EQEQUAL .)
    NAME            reduce using rule 66 (comp_op -> EQEQUAL .)
    NUMBER          reduce using rule 66 (comp_op -> EQEQUAL .)
    STRING          reduce using rule 66 (comp_op -> EQEQUAL .)
    TRIPLESTRING    reduce using rule 66 (comp_op -> EQEQUAL .)
    FNUMBER         reduce using rule 66 (comp_op -> EQEQUAL .)
    LSQB            reduce using rule 66 (comp_op -> EQEQUAL .)
    LPAREN          reduce using rule 66 (comp_op -> EQEQUAL .)


state 103

    (40) compound_stmt -> while_stmt Marker .

    ENDMARKER       reduce using rule 40 (compound_stmt -> while_stmt Marker .)
    NEWLINE         reduce using rule 40 (compound_stmt -> while_stmt Marker .)
    IF              reduce using rule 40 (compound_stmt -> while_stmt Marker .)
    FOR             reduce using rule 40 (compound_stmt -> while_stmt Marker .)
    WHILE           reduce using rule 40 (compound_stmt -> while_stmt Marker .)
    DEF             reduce using rule 40 (compound_stmt -> while_stmt Marker .)
    NAME            reduce using rule 40 (compound_stmt -> while_stmt Marker .)
    PRINT           reduce using rule 40 (compound_stmt -> while_stmt Marker .)
    BREAK           reduce using rule 40 (compound_stmt -> while_stmt Marker .)
    RETURN          reduce using rule 40 (compound_stmt -> while_stmt Marker .)
    CONTINUE        reduce using rule 40 (compound_stmt -> while_stmt Marker .)
    NOT             reduce using rule 40 (compound_stmt -> while_stmt Marker .)
    PLUS            reduce using rule 40 (compound_stmt -> while_stmt Marker .)
    MINUS           reduce using rule 40 (compound_stmt -> while_stmt Marker .)
    NUMBER          reduce using rule 40 (compound_stmt -> while_stmt Marker .)
    STRING          reduce using rule 40 (compound_stmt -> while_stmt Marker .)
    TRIPLESTRING    reduce using rule 40 (compound_stmt -> while_stmt Marker .)
    FNUMBER         reduce using rule 40 (compound_stmt -> while_stmt Marker .)
    LSQB            reduce using rule 40 (compound_stmt -> while_stmt Marker .)
    LPAREN          reduce using rule 40 (compound_stmt -> while_stmt Marker .)
    DEDENT          reduce using rule 40 (compound_stmt -> while_stmt Marker .)


state 104

    (22) simple_stmt -> small_stmts NEWLINE .

    ELSE            reduce using rule 22 (simple_stmt -> small_stmts NEWLINE .)
    ENDMARKER       reduce using rule 22 (simple_stmt -> small_stmts NEWLINE .)
    NEWLINE         reduce using rule 22 (simple_stmt -> small_stmts NEWLINE .)
    IF              reduce using rule 22 (simple_stmt -> small_stmts NEWLINE .)
    FOR             reduce using rule 22 (simple_stmt -> small_stmts NEWLINE .)
    WHILE           reduce using rule 22 (simple_stmt -> small_stmts NEWLINE .)
    DEF             reduce using rule 22 (simple_stmt -> small_stmts NEWLINE .)
    NAME            reduce using rule 22 (simple_stmt -> small_stmts NEWLINE .)
    PRINT           reduce using rule 22 (simple_stmt -> small_stmts NEWLINE .)
    BREAK           reduce using rule 22 (simple_stmt -> small_stmts NEWLINE .)
    RETURN          reduce using rule 22 (simple_stmt -> small_stmts NEWLINE .)
    CONTINUE        reduce using rule 22 (simple_stmt -> small_stmts NEWLINE .)
    NOT             reduce using rule 22 (simple_stmt -> small_stmts NEWLINE .)
    PLUS            reduce using rule 22 (simple_stmt -> small_stmts NEWLINE .)
    MINUS           reduce using rule 22 (simple_stmt -> small_stmts NEWLINE .)
    NUMBER          reduce using rule 22 (simple_stmt -> small_stmts NEWLINE .)
    STRING          reduce using rule 22 (simple_stmt -> small_stmts NEWLINE .)
    TRIPLESTRING    reduce using rule 22 (simple_stmt -> small_stmts NEWLINE .)
    FNUMBER         reduce using rule 22 (simple_stmt -> small_stmts NEWLINE .)
    LSQB            reduce using rule 22 (simple_stmt -> small_stmts NEWLINE .)
    LPAREN          reduce using rule 22 (simple_stmt -> small_stmts NEWLINE .)
    DEDENT          reduce using rule 22 (simple_stmt -> small_stmts NEWLINE .)


state 105

    (10) function_call -> NAME LPAREN RPAREN .

    IF              reduce using rule 10 (function_call -> NAME LPAREN RPAREN .)
    FOR             reduce using rule 10 (function_call -> NAME LPAREN RPAREN .)
    WHILE           reduce using rule 10 (function_call -> NAME LPAREN RPAREN .)
    DEF             reduce using rule 10 (function_call -> NAME LPAREN RPAREN .)
    NAME            reduce using rule 10 (function_call -> NAME LPAREN RPAREN .)
    PRINT           reduce using rule 10 (function_call -> NAME LPAREN RPAREN .)
    BREAK           reduce using rule 10 (function_call -> NAME LPAREN RPAREN .)
    RETURN          reduce using rule 10 (function_call -> NAME LPAREN RPAREN .)
    CONTINUE        reduce using rule 10 (function_call -> NAME LPAREN RPAREN .)
    NOT             reduce using rule 10 (function_call -> NAME LPAREN RPAREN .)
    PLUS            reduce using rule 10 (function_call -> NAME LPAREN RPAREN .)
    MINUS           reduce using rule 10 (function_call -> NAME LPAREN RPAREN .)
    NUMBER          reduce using rule 10 (function_call -> NAME LPAREN RPAREN .)
    STRING          reduce using rule 10 (function_call -> NAME LPAREN RPAREN .)
    TRIPLESTRING    reduce using rule 10 (function_call -> NAME LPAREN RPAREN .)
    FNUMBER         reduce using rule 10 (function_call -> NAME LPAREN RPAREN .)
    LSQB            reduce using rule 10 (function_call -> NAME LPAREN RPAREN .)
    LPAREN          reduce using rule 10 (function_call -> NAME LPAREN RPAREN .)
    DEDENT          reduce using rule 10 (function_call -> NAME LPAREN RPAREN .)
    NEWLINE         reduce using rule 10 (function_call -> NAME LPAREN RPAREN .)
    ENDMARKER       reduce using rule 10 (function_call -> NAME LPAREN RPAREN .)


state 106

    (11) function_call -> NAME LPAREN testlist . RPAREN

    RPAREN          shift and go to state 132


state 107

    (45) while_stmt -> WHILE Marker test . COLON MarkerWhile suite

    COLON           shift and go to state 133


state 108

    (59) and_test -> not_test AND and_test .

    OR              reduce using rule 59 (and_test -> not_test AND and_test .)
    RSQB            reduce using rule 59 (and_test -> not_test AND and_test .)
    EQUAL           reduce using rule 59 (and_test -> not_test AND and_test .)
    COLON           reduce using rule 59 (and_test -> not_test AND and_test .)
    COMMA           reduce using rule 59 (and_test -> not_test AND and_test .)
    NEWLINE         reduce using rule 59 (and_test -> not_test AND and_test .)
    RPAREN          reduce using rule 59 (and_test -> not_test AND and_test .)


state 109

    (105) testlist -> test COMMA . testlist
    (104) testlist -> . test
    (105) testlist -> . test COMMA testlist
    (54) test -> . test_expr
    (55) test_expr -> . or_test
    (56) or_test -> . and_test
    (57) or_test -> . and_test OR or_test
    (58) and_test -> . not_test
    (59) and_test -> . not_test AND and_test
    (60) not_test -> . NOT not_test
    (61) not_test -> . comparison
    (62) comparison -> . expr
    (63) comparison -> . expr comp_op expr
    (70) expr -> . xor_expr
    (71) expr -> . xor_expr VBAR expr
    (72) xor_expr -> . and_expr
    (73) xor_expr -> . and_expr CIRCUMFLEX xor_expr
    (74) and_expr -> . shift_expr
    (75) and_expr -> . shift_expr AMPER and_expr
    (76) shift_expr -> . arith_expr
    (77) shift_expr -> . arith_expr LEFTSHIFT shift_expr
    (78) shift_expr -> . arith_expr RIGHTSHIFT shift_expr
    (79) arith_expr -> . term
    (80) arith_expr -> . term PLUS arith_expr
    (81) arith_expr -> . term MINUS arith_expr
    (82) term -> . factor
    (83) term -> . factor STAR term
    (84) term -> . factor SLASH term
    (85) term -> . factor PERCENT term
    (86) factor -> . power
    (87) factor -> . PLUS factor
    (88) factor -> . MINUS factor
    (89) power -> . atom
    (90) power -> . atom LSQB test RSQB
    (91) atom -> . NAME
    (92) atom -> . NUMBER
    (93) atom -> . STRING
    (94) atom -> . TRIPLESTRING
    (95) atom -> . FNUMBER
    (96) atom -> . LSQB RSQB
    (97) atom -> . LSQB listmaker RSQB
    (98) atom -> . LPAREN RPAREN
    (99) atom -> . LPAREN testlist_comp RPAREN

    NOT             shift and go to state 33
    PLUS            shift and go to state 20
    MINUS           shift and go to state 12
    NAME            shift and go to state 61
    NUMBER          shift and go to state 53
    STRING          shift and go to state 28
    TRIPLESTRING    shift and go to state 51
    FNUMBER         shift and go to state 31
    LSQB            shift and go to state 39
    LPAREN          shift and go to state 36

    comparison                     shift and go to state 42
    power                          shift and go to state 16
    arith_expr                     shift and go to state 45
    expr                           shift and go to state 46
    atom                           shift and go to state 37
    testlist                       shift and go to state 134
    or_test                        shift and go to state 47
    and_test                       shift and go to state 35
    shift_expr                     shift and go to state 19
    term                           shift and go to state 43
    not_test                       shift and go to state 9
    factor                         shift and go to state 27
    test                           shift and go to state 59
    xor_expr                       shift and go to state 15
    and_expr                       shift and go to state 25
    test_expr                      shift and go to state 23

state 110

    (5) funcdef -> DEF NAME MarkerScope . parameters MarkerArg COLON suite
    (8) parameters -> . LPAREN RPAREN
    (9) parameters -> . LPAREN varargslist RPAREN

    LPAREN          shift and go to state 136

    parameters                     shift and go to state 135

state 111

    (71) expr -> xor_expr VBAR expr .

    LESS            reduce using rule 71 (expr -> xor_expr VBAR expr .)
    GREATER         reduce using rule 71 (expr -> xor_expr VBAR expr .)
    EQEQUAL         reduce using rule 71 (expr -> xor_expr VBAR expr .)
    GREATEREQUAL    reduce using rule 71 (expr -> xor_expr VBAR expr .)
    LESSEQUAL       reduce using rule 71 (expr -> xor_expr VBAR expr .)
    NOTEQUAL        reduce using rule 71 (expr -> xor_expr VBAR expr .)
    AND             reduce using rule 71 (expr -> xor_expr VBAR expr .)
    OR              reduce using rule 71 (expr -> xor_expr VBAR expr .)
    NEWLINE         reduce using rule 71 (expr -> xor_expr VBAR expr .)
    RSQB            reduce using rule 71 (expr -> xor_expr VBAR expr .)
    EQUAL           reduce using rule 71 (expr -> xor_expr VBAR expr .)
    COMMA           reduce using rule 71 (expr -> xor_expr VBAR expr .)
    RPAREN          reduce using rule 71 (expr -> xor_expr VBAR expr .)
    COLON           reduce using rule 71 (expr -> xor_expr VBAR expr .)


state 112

    (75) and_expr -> shift_expr AMPER and_expr .

    CIRCUMFLEX      reduce using rule 75 (and_expr -> shift_expr AMPER and_expr .)
    VBAR            reduce using rule 75 (and_expr -> shift_expr AMPER and_expr .)
    LESS            reduce using rule 75 (and_expr -> shift_expr AMPER and_expr .)
    GREATER         reduce using rule 75 (and_expr -> shift_expr AMPER and_expr .)
    EQEQUAL         reduce using rule 75 (and_expr -> shift_expr AMPER and_expr .)
    GREATEREQUAL    reduce using rule 75 (and_expr -> shift_expr AMPER and_expr .)
    LESSEQUAL       reduce using rule 75 (and_expr -> shift_expr AMPER and_expr .)
    NOTEQUAL        reduce using rule 75 (and_expr -> shift_expr AMPER and_expr .)
    AND             reduce using rule 75 (and_expr -> shift_expr AMPER and_expr .)
    OR              reduce using rule 75 (and_expr -> shift_expr AMPER and_expr .)
    COMMA           reduce using rule 75 (and_expr -> shift_expr AMPER and_expr .)
    RSQB            reduce using rule 75 (and_expr -> shift_expr AMPER and_expr .)
    EQUAL           reduce using rule 75 (and_expr -> shift_expr AMPER and_expr .)
    RPAREN          reduce using rule 75 (and_expr -> shift_expr AMPER and_expr .)
    NEWLINE         reduce using rule 75 (and_expr -> shift_expr AMPER and_expr .)
    COLON           reduce using rule 75 (and_expr -> shift_expr AMPER and_expr .)


state 113

    (28) expr_stmt -> test EQUAL function_call .

    NEWLINE         reduce using rule 28 (expr_stmt -> test EQUAL function_call .)


state 114

    (27) expr_stmt -> test EQUAL test .

    NEWLINE         reduce using rule 27 (expr_stmt -> test EQUAL test .)


state 115

    (73) xor_expr -> and_expr CIRCUMFLEX xor_expr .

    VBAR            reduce using rule 73 (xor_expr -> and_expr CIRCUMFLEX xor_expr .)
    LESS            reduce using rule 73 (xor_expr -> and_expr CIRCUMFLEX xor_expr .)
    GREATER         reduce using rule 73 (xor_expr -> and_expr CIRCUMFLEX xor_expr .)
    EQEQUAL         reduce using rule 73 (xor_expr -> and_expr CIRCUMFLEX xor_expr .)
    GREATEREQUAL    reduce using rule 73 (xor_expr -> and_expr CIRCUMFLEX xor_expr .)
    LESSEQUAL       reduce using rule 73 (xor_expr -> and_expr CIRCUMFLEX xor_expr .)
    NOTEQUAL        reduce using rule 73 (xor_expr -> and_expr CIRCUMFLEX xor_expr .)
    AND             reduce using rule 73 (xor_expr -> and_expr CIRCUMFLEX xor_expr .)
    OR              reduce using rule 73 (xor_expr -> and_expr CIRCUMFLEX xor_expr .)
    EQUAL           reduce using rule 73 (xor_expr -> and_expr CIRCUMFLEX xor_expr .)
    RSQB            reduce using rule 73 (xor_expr -> and_expr CIRCUMFLEX xor_expr .)
    COMMA           reduce using rule 73 (xor_expr -> and_expr CIRCUMFLEX xor_expr .)
    NEWLINE         reduce using rule 73 (xor_expr -> and_expr CIRCUMFLEX xor_expr .)
    RPAREN          reduce using rule 73 (xor_expr -> and_expr CIRCUMFLEX xor_expr .)
    COLON           reduce using rule 73 (xor_expr -> and_expr CIRCUMFLEX xor_expr .)


state 116

    (85) term -> factor PERCENT term .

    PLUS            reduce using rule 85 (term -> factor PERCENT term .)
    MINUS           reduce using rule 85 (term -> factor PERCENT term .)
    LEFTSHIFT       reduce using rule 85 (term -> factor PERCENT term .)
    RIGHTSHIFT      reduce using rule 85 (term -> factor PERCENT term .)
    AMPER           reduce using rule 85 (term -> factor PERCENT term .)
    CIRCUMFLEX      reduce using rule 85 (term -> factor PERCENT term .)
    VBAR            reduce using rule 85 (term -> factor PERCENT term .)
    LESS            reduce using rule 85 (term -> factor PERCENT term .)
    GREATER         reduce using rule 85 (term -> factor PERCENT term .)
    EQEQUAL         reduce using rule 85 (term -> factor PERCENT term .)
    GREATEREQUAL    reduce using rule 85 (term -> factor PERCENT term .)
    LESSEQUAL       reduce using rule 85 (term -> factor PERCENT term .)
    NOTEQUAL        reduce using rule 85 (term -> factor PERCENT term .)
    AND             reduce using rule 85 (term -> factor PERCENT term .)
    OR              reduce using rule 85 (term -> factor PERCENT term .)
    COMMA           reduce using rule 85 (term -> factor PERCENT term .)
    RSQB            reduce using rule 85 (term -> factor PERCENT term .)
    EQUAL           reduce using rule 85 (term -> factor PERCENT term .)
    NEWLINE         reduce using rule 85 (term -> factor PERCENT term .)
    RPAREN          reduce using rule 85 (term -> factor PERCENT term .)
    COLON           reduce using rule 85 (term -> factor PERCENT term .)


state 117

    (83) term -> factor STAR term .

    PLUS            reduce using rule 83 (term -> factor STAR term .)
    MINUS           reduce using rule 83 (term -> factor STAR term .)
    LEFTSHIFT       reduce using rule 83 (term -> factor STAR term .)
    RIGHTSHIFT      reduce using rule 83 (term -> factor STAR term .)
    AMPER           reduce using rule 83 (term -> factor STAR term .)
    CIRCUMFLEX      reduce using rule 83 (term -> factor STAR term .)
    VBAR            reduce using rule 83 (term -> factor STAR term .)
    LESS            reduce using rule 83 (term -> factor STAR term .)
    GREATER         reduce using rule 83 (term -> factor STAR term .)
    EQEQUAL         reduce using rule 83 (term -> factor STAR term .)
    GREATEREQUAL    reduce using rule 83 (term -> factor STAR term .)
    LESSEQUAL       reduce using rule 83 (term -> factor STAR term .)
    NOTEQUAL        reduce using rule 83 (term -> factor STAR term .)
    AND             reduce using rule 83 (term -> factor STAR term .)
    OR              reduce using rule 83 (term -> factor STAR term .)
    COMMA           reduce using rule 83 (term -> factor STAR term .)
    RSQB            reduce using rule 83 (term -> factor STAR term .)
    EQUAL           reduce using rule 83 (term -> factor STAR term .)
    NEWLINE         reduce using rule 83 (term -> factor STAR term .)
    RPAREN          reduce using rule 83 (term -> factor STAR term .)
    COLON           reduce using rule 83 (term -> factor STAR term .)


state 118

    (84) term -> factor SLASH term .

    PLUS            reduce using rule 84 (term -> factor SLASH term .)
    MINUS           reduce using rule 84 (term -> factor SLASH term .)
    LEFTSHIFT       reduce using rule 84 (term -> factor SLASH term .)
    RIGHTSHIFT      reduce using rule 84 (term -> factor SLASH term .)
    AMPER           reduce using rule 84 (term -> factor SLASH term .)
    CIRCUMFLEX      reduce using rule 84 (term -> factor SLASH term .)
    VBAR            reduce using rule 84 (term -> factor SLASH term .)
    LESS            reduce using rule 84 (term -> factor SLASH term .)
    GREATER         reduce using rule 84 (term -> factor SLASH term .)
    EQEQUAL         reduce using rule 84 (term -> factor SLASH term .)
    GREATEREQUAL    reduce using rule 84 (term -> factor SLASH term .)
    LESSEQUAL       reduce using rule 84 (term -> factor SLASH term .)
    NOTEQUAL        reduce using rule 84 (term -> factor SLASH term .)
    AND             reduce using rule 84 (term -> factor SLASH term .)
    OR              reduce using rule 84 (term -> factor SLASH term .)
    COMMA           reduce using rule 84 (term -> factor SLASH term .)
    RSQB            reduce using rule 84 (term -> factor SLASH term .)
    EQUAL           reduce using rule 84 (term -> factor SLASH term .)
    NEWLINE         reduce using rule 84 (term -> factor SLASH term .)
    RPAREN          reduce using rule 84 (term -> factor SLASH term .)
    COLON           reduce using rule 84 (term -> factor SLASH term .)


state 119

    (50) for_stmt -> FOR atom IN . test COLON MarkerFor suite
    (54) test -> . test_expr
    (55) test_expr -> . or_test
    (56) or_test -> . and_test
    (57) or_test -> . and_test OR or_test
    (58) and_test -> . not_test
    (59) and_test -> . not_test AND and_test
    (60) not_test -> . NOT not_test
    (61) not_test -> . comparison
    (62) comparison -> . expr
    (63) comparison -> . expr comp_op expr
    (70) expr -> . xor_expr
    (71) expr -> . xor_expr VBAR expr
    (72) xor_expr -> . and_expr
    (73) xor_expr -> . and_expr CIRCUMFLEX xor_expr
    (74) and_expr -> . shift_expr
    (75) and_expr -> . shift_expr AMPER and_expr
    (76) shift_expr -> . arith_expr
    (77) shift_expr -> . arith_expr LEFTSHIFT shift_expr
    (78) shift_expr -> . arith_expr RIGHTSHIFT shift_expr
    (79) arith_expr -> . term
    (80) arith_expr -> . term PLUS arith_expr
    (81) arith_expr -> . term MINUS arith_expr
    (82) term -> . factor
    (83) term -> . factor STAR term
    (84) term -> . factor SLASH term
    (85) term -> . factor PERCENT term
    (86) factor -> . power
    (87) factor -> . PLUS factor
    (88) factor -> . MINUS factor
    (89) power -> . atom
    (90) power -> . atom LSQB test RSQB
    (91) atom -> . NAME
    (92) atom -> . NUMBER
    (93) atom -> . STRING
    (94) atom -> . TRIPLESTRING
    (95) atom -> . FNUMBER
    (96) atom -> . LSQB RSQB
    (97) atom -> . LSQB listmaker RSQB
    (98) atom -> . LPAREN RPAREN
    (99) atom -> . LPAREN testlist_comp RPAREN

    NOT             shift and go to state 33
    PLUS            shift and go to state 20
    MINUS           shift and go to state 12
    NAME            shift and go to state 61
    NUMBER          shift and go to state 53
    STRING          shift and go to state 28
    TRIPLESTRING    shift and go to state 51
    FNUMBER         shift and go to state 31
    LSQB            shift and go to state 39
    LPAREN          shift and go to state 36

    comparison                     shift and go to state 42
    power                          shift and go to state 16
    arith_expr                     shift and go to state 45
    expr                           shift and go to state 46
    factor                         shift and go to state 27
    shift_expr                     shift and go to state 19
    or_test                        shift and go to state 47
    and_test                       shift and go to state 35
    term                           shift and go to state 43
    not_test                       shift and go to state 9
    atom                           shift and go to state 37
    test                           shift and go to state 137
    xor_expr                       shift and go to state 15
    and_expr                       shift and go to state 25
    test_expr                      shift and go to state 23

state 120

    (57) or_test -> and_test OR or_test .

    EQUAL           reduce using rule 57 (or_test -> and_test OR or_test .)
    COMMA           reduce using rule 57 (or_test -> and_test OR or_test .)
    RSQB            reduce using rule 57 (or_test -> and_test OR or_test .)
    RPAREN          reduce using rule 57 (or_test -> and_test OR or_test .)
    COLON           reduce using rule 57 (or_test -> and_test OR or_test .)
    NEWLINE         reduce using rule 57 (or_test -> and_test OR or_test .)


state 121

    (99) atom -> LPAREN testlist_comp RPAREN .

    LSQB            reduce using rule 99 (atom -> LPAREN testlist_comp RPAREN .)
    STAR            reduce using rule 99 (atom -> LPAREN testlist_comp RPAREN .)
    SLASH           reduce using rule 99 (atom -> LPAREN testlist_comp RPAREN .)
    PERCENT         reduce using rule 99 (atom -> LPAREN testlist_comp RPAREN .)
    PLUS            reduce using rule 99 (atom -> LPAREN testlist_comp RPAREN .)
    MINUS           reduce using rule 99 (atom -> LPAREN testlist_comp RPAREN .)
    LEFTSHIFT       reduce using rule 99 (atom -> LPAREN testlist_comp RPAREN .)
    RIGHTSHIFT      reduce using rule 99 (atom -> LPAREN testlist_comp RPAREN .)
    AMPER           reduce using rule 99 (atom -> LPAREN testlist_comp RPAREN .)
    CIRCUMFLEX      reduce using rule 99 (atom -> LPAREN testlist_comp RPAREN .)
    VBAR            reduce using rule 99 (atom -> LPAREN testlist_comp RPAREN .)
    LESS            reduce using rule 99 (atom -> LPAREN testlist_comp RPAREN .)
    GREATER         reduce using rule 99 (atom -> LPAREN testlist_comp RPAREN .)
    EQEQUAL         reduce using rule 99 (atom -> LPAREN testlist_comp RPAREN .)
    GREATEREQUAL    reduce using rule 99 (atom -> LPAREN testlist_comp RPAREN .)
    LESSEQUAL       reduce using rule 99 (atom -> LPAREN testlist_comp RPAREN .)
    NOTEQUAL        reduce using rule 99 (atom -> LPAREN testlist_comp RPAREN .)
    AND             reduce using rule 99 (atom -> LPAREN testlist_comp RPAREN .)
    OR              reduce using rule 99 (atom -> LPAREN testlist_comp RPAREN .)
    EQUAL           reduce using rule 99 (atom -> LPAREN testlist_comp RPAREN .)
    COMMA           reduce using rule 99 (atom -> LPAREN testlist_comp RPAREN .)
    NEWLINE         reduce using rule 99 (atom -> LPAREN testlist_comp RPAREN .)
    RPAREN          reduce using rule 99 (atom -> LPAREN testlist_comp RPAREN .)
    RSQB            reduce using rule 99 (atom -> LPAREN testlist_comp RPAREN .)
    COLON           reduce using rule 99 (atom -> LPAREN testlist_comp RPAREN .)
    IN              reduce using rule 99 (atom -> LPAREN testlist_comp RPAREN .)


state 122

    (103) testlist_comp -> test COMMA . testlist_comp
    (102) testlist_comp -> . test
    (103) testlist_comp -> . test COMMA testlist_comp
    (54) test -> . test_expr
    (55) test_expr -> . or_test
    (56) or_test -> . and_test
    (57) or_test -> . and_test OR or_test
    (58) and_test -> . not_test
    (59) and_test -> . not_test AND and_test
    (60) not_test -> . NOT not_test
    (61) not_test -> . comparison
    (62) comparison -> . expr
    (63) comparison -> . expr comp_op expr
    (70) expr -> . xor_expr
    (71) expr -> . xor_expr VBAR expr
    (72) xor_expr -> . and_expr
    (73) xor_expr -> . and_expr CIRCUMFLEX xor_expr
    (74) and_expr -> . shift_expr
    (75) and_expr -> . shift_expr AMPER and_expr
    (76) shift_expr -> . arith_expr
    (77) shift_expr -> . arith_expr LEFTSHIFT shift_expr
    (78) shift_expr -> . arith_expr RIGHTSHIFT shift_expr
    (79) arith_expr -> . term
    (80) arith_expr -> . term PLUS arith_expr
    (81) arith_expr -> . term MINUS arith_expr
    (82) term -> . factor
    (83) term -> . factor STAR term
    (84) term -> . factor SLASH term
    (85) term -> . factor PERCENT term
    (86) factor -> . power
    (87) factor -> . PLUS factor
    (88) factor -> . MINUS factor
    (89) power -> . atom
    (90) power -> . atom LSQB test RSQB
    (91) atom -> . NAME
    (92) atom -> . NUMBER
    (93) atom -> . STRING
    (94) atom -> . TRIPLESTRING
    (95) atom -> . FNUMBER
    (96) atom -> . LSQB RSQB
    (97) atom -> . LSQB listmaker RSQB
    (98) atom -> . LPAREN RPAREN
    (99) atom -> . LPAREN testlist_comp RPAREN

    NOT             shift and go to state 33
    PLUS            shift and go to state 20
    MINUS           shift and go to state 12
    NAME            shift and go to state 61
    NUMBER          shift and go to state 53
    STRING          shift and go to state 28
    TRIPLESTRING    shift and go to state 51
    FNUMBER         shift and go to state 31
    LSQB            shift and go to state 39
    LPAREN          shift and go to state 36

    comparison                     shift and go to state 42
    power                          shift and go to state 16
    arith_expr                     shift and go to state 45
    expr                           shift and go to state 46
    factor                         shift and go to state 27
    shift_expr                     shift and go to state 19
    or_test                        shift and go to state 47
    and_test                       shift and go to state 35
    atom                           shift and go to state 37
    term                           shift and go to state 43
    not_test                       shift and go to state 9
    testlist_comp                  shift and go to state 138
    test                           shift and go to state 83
    xor_expr                       shift and go to state 15
    and_expr                       shift and go to state 25
    test_expr                      shift and go to state 23

state 123

    (90) power -> atom LSQB test . RSQB

    RSQB            shift and go to state 139


state 124

    (97) atom -> LSQB listmaker RSQB .

    LSQB            reduce using rule 97 (atom -> LSQB listmaker RSQB .)
    STAR            reduce using rule 97 (atom -> LSQB listmaker RSQB .)
    SLASH           reduce using rule 97 (atom -> LSQB listmaker RSQB .)
    PERCENT         reduce using rule 97 (atom -> LSQB listmaker RSQB .)
    PLUS            reduce using rule 97 (atom -> LSQB listmaker RSQB .)
    MINUS           reduce using rule 97 (atom -> LSQB listmaker RSQB .)
    LEFTSHIFT       reduce using rule 97 (atom -> LSQB listmaker RSQB .)
    RIGHTSHIFT      reduce using rule 97 (atom -> LSQB listmaker RSQB .)
    AMPER           reduce using rule 97 (atom -> LSQB listmaker RSQB .)
    CIRCUMFLEX      reduce using rule 97 (atom -> LSQB listmaker RSQB .)
    VBAR            reduce using rule 97 (atom -> LSQB listmaker RSQB .)
    LESS            reduce using rule 97 (atom -> LSQB listmaker RSQB .)
    GREATER         reduce using rule 97 (atom -> LSQB listmaker RSQB .)
    EQEQUAL         reduce using rule 97 (atom -> LSQB listmaker RSQB .)
    GREATEREQUAL    reduce using rule 97 (atom -> LSQB listmaker RSQB .)
    LESSEQUAL       reduce using rule 97 (atom -> LSQB listmaker RSQB .)
    NOTEQUAL        reduce using rule 97 (atom -> LSQB listmaker RSQB .)
    AND             reduce using rule 97 (atom -> LSQB listmaker RSQB .)
    OR              reduce using rule 97 (atom -> LSQB listmaker RSQB .)
    EQUAL           reduce using rule 97 (atom -> LSQB listmaker RSQB .)
    COMMA           reduce using rule 97 (atom -> LSQB listmaker RSQB .)
    NEWLINE         reduce using rule 97 (atom -> LSQB listmaker RSQB .)
    RPAREN          reduce using rule 97 (atom -> LSQB listmaker RSQB .)
    RSQB            reduce using rule 97 (atom -> LSQB listmaker RSQB .)
    COLON           reduce using rule 97 (atom -> LSQB listmaker RSQB .)
    IN              reduce using rule 97 (atom -> LSQB listmaker RSQB .)


state 125

    (101) listmaker -> test COMMA . listmaker
    (100) listmaker -> . test
    (101) listmaker -> . test COMMA listmaker
    (54) test -> . test_expr
    (55) test_expr -> . or_test
    (56) or_test -> . and_test
    (57) or_test -> . and_test OR or_test
    (58) and_test -> . not_test
    (59) and_test -> . not_test AND and_test
    (60) not_test -> . NOT not_test
    (61) not_test -> . comparison
    (62) comparison -> . expr
    (63) comparison -> . expr comp_op expr
    (70) expr -> . xor_expr
    (71) expr -> . xor_expr VBAR expr
    (72) xor_expr -> . and_expr
    (73) xor_expr -> . and_expr CIRCUMFLEX xor_expr
    (74) and_expr -> . shift_expr
    (75) and_expr -> . shift_expr AMPER and_expr
    (76) shift_expr -> . arith_expr
    (77) shift_expr -> . arith_expr LEFTSHIFT shift_expr
    (78) shift_expr -> . arith_expr RIGHTSHIFT shift_expr
    (79) arith_expr -> . term
    (80) arith_expr -> . term PLUS arith_expr
    (81) arith_expr -> . term MINUS arith_expr
    (82) term -> . factor
    (83) term -> . factor STAR term
    (84) term -> . factor SLASH term
    (85) term -> . factor PERCENT term
    (86) factor -> . power
    (87) factor -> . PLUS factor
    (88) factor -> . MINUS factor
    (89) power -> . atom
    (90) power -> . atom LSQB test RSQB
    (91) atom -> . NAME
    (92) atom -> . NUMBER
    (93) atom -> . STRING
    (94) atom -> . TRIPLESTRING
    (95) atom -> . FNUMBER
    (96) atom -> . LSQB RSQB
    (97) atom -> . LSQB listmaker RSQB
    (98) atom -> . LPAREN RPAREN
    (99) atom -> . LPAREN testlist_comp RPAREN

    NOT             shift and go to state 33
    PLUS            shift and go to state 20
    MINUS           shift and go to state 12
    NAME            shift and go to state 61
    NUMBER          shift and go to state 53
    STRING          shift and go to state 28
    TRIPLESTRING    shift and go to state 51
    FNUMBER         shift and go to state 31
    LSQB            shift and go to state 39
    LPAREN          shift and go to state 36

    comparison                     shift and go to state 42
    power                          shift and go to state 16
    arith_expr                     shift and go to state 45
    expr                           shift and go to state 46
    atom                           shift and go to state 37
    shift_expr                     shift and go to state 19
    or_test                        shift and go to state 47
    and_test                       shift and go to state 35
    term                           shift and go to state 43
    not_test                       shift and go to state 9
    factor                         shift and go to state 27
    test                           shift and go to state 87
    listmaker                      shift and go to state 140
    xor_expr                       shift and go to state 15
    and_expr                       shift and go to state 25
    test_expr                      shift and go to state 23

state 126

    (43) if_stmt -> IF test COLON . MarkerIf suite
    (44) if_stmt -> IF test COLON . MarkerIf suite ELSE COLON MarkerElse suite
    (48) MarkerIf -> .

    NEWLINE         reduce using rule 48 (MarkerIf -> .)
    PRINT           reduce using rule 48 (MarkerIf -> .)
    BREAK           reduce using rule 48 (MarkerIf -> .)
    RETURN          reduce using rule 48 (MarkerIf -> .)
    CONTINUE        reduce using rule 48 (MarkerIf -> .)
    NOT             reduce using rule 48 (MarkerIf -> .)
    PLUS            reduce using rule 48 (MarkerIf -> .)
    MINUS           reduce using rule 48 (MarkerIf -> .)
    NAME            reduce using rule 48 (MarkerIf -> .)
    NUMBER          reduce using rule 48 (MarkerIf -> .)
    STRING          reduce using rule 48 (MarkerIf -> .)
    TRIPLESTRING    reduce using rule 48 (MarkerIf -> .)
    FNUMBER         reduce using rule 48 (MarkerIf -> .)
    LSQB            reduce using rule 48 (MarkerIf -> .)
    LPAREN          reduce using rule 48 (MarkerIf -> .)

    MarkerIf                       shift and go to state 141

state 127

    (80) arith_expr -> term PLUS arith_expr .

    LEFTSHIFT       reduce using rule 80 (arith_expr -> term PLUS arith_expr .)
    RIGHTSHIFT      reduce using rule 80 (arith_expr -> term PLUS arith_expr .)
    AMPER           reduce using rule 80 (arith_expr -> term PLUS arith_expr .)
    CIRCUMFLEX      reduce using rule 80 (arith_expr -> term PLUS arith_expr .)
    VBAR            reduce using rule 80 (arith_expr -> term PLUS arith_expr .)
    LESS            reduce using rule 80 (arith_expr -> term PLUS arith_expr .)
    GREATER         reduce using rule 80 (arith_expr -> term PLUS arith_expr .)
    EQEQUAL         reduce using rule 80 (arith_expr -> term PLUS arith_expr .)
    GREATEREQUAL    reduce using rule 80 (arith_expr -> term PLUS arith_expr .)
    LESSEQUAL       reduce using rule 80 (arith_expr -> term PLUS arith_expr .)
    NOTEQUAL        reduce using rule 80 (arith_expr -> term PLUS arith_expr .)
    AND             reduce using rule 80 (arith_expr -> term PLUS arith_expr .)
    OR              reduce using rule 80 (arith_expr -> term PLUS arith_expr .)
    EQUAL           reduce using rule 80 (arith_expr -> term PLUS arith_expr .)
    COMMA           reduce using rule 80 (arith_expr -> term PLUS arith_expr .)
    NEWLINE         reduce using rule 80 (arith_expr -> term PLUS arith_expr .)
    RPAREN          reduce using rule 80 (arith_expr -> term PLUS arith_expr .)
    RSQB            reduce using rule 80 (arith_expr -> term PLUS arith_expr .)
    COLON           reduce using rule 80 (arith_expr -> term PLUS arith_expr .)


state 128

    (81) arith_expr -> term MINUS arith_expr .

    LEFTSHIFT       reduce using rule 81 (arith_expr -> term MINUS arith_expr .)
    RIGHTSHIFT      reduce using rule 81 (arith_expr -> term MINUS arith_expr .)
    AMPER           reduce using rule 81 (arith_expr -> term MINUS arith_expr .)
    CIRCUMFLEX      reduce using rule 81 (arith_expr -> term MINUS arith_expr .)
    VBAR            reduce using rule 81 (arith_expr -> term MINUS arith_expr .)
    LESS            reduce using rule 81 (arith_expr -> term MINUS arith_expr .)
    GREATER         reduce using rule 81 (arith_expr -> term MINUS arith_expr .)
    EQEQUAL         reduce using rule 81 (arith_expr -> term MINUS arith_expr .)
    GREATEREQUAL    reduce using rule 81 (arith_expr -> term MINUS arith_expr .)
    LESSEQUAL       reduce using rule 81 (arith_expr -> term MINUS arith_expr .)
    NOTEQUAL        reduce using rule 81 (arith_expr -> term MINUS arith_expr .)
    AND             reduce using rule 81 (arith_expr -> term MINUS arith_expr .)
    OR              reduce using rule 81 (arith_expr -> term MINUS arith_expr .)
    EQUAL           reduce using rule 81 (arith_expr -> term MINUS arith_expr .)
    COMMA           reduce using rule 81 (arith_expr -> term MINUS arith_expr .)
    NEWLINE         reduce using rule 81 (arith_expr -> term MINUS arith_expr .)
    RPAREN          reduce using rule 81 (arith_expr -> term MINUS arith_expr .)
    RSQB            reduce using rule 81 (arith_expr -> term MINUS arith_expr .)
    COLON           reduce using rule 81 (arith_expr -> term MINUS arith_expr .)


state 129

    (77) shift_expr -> arith_expr LEFTSHIFT shift_expr .

    AMPER           reduce using rule 77 (shift_expr -> arith_expr LEFTSHIFT shift_expr .)
    CIRCUMFLEX      reduce using rule 77 (shift_expr -> arith_expr LEFTSHIFT shift_expr .)
    VBAR            reduce using rule 77 (shift_expr -> arith_expr LEFTSHIFT shift_expr .)
    LESS            reduce using rule 77 (shift_expr -> arith_expr LEFTSHIFT shift_expr .)
    GREATER         reduce using rule 77 (shift_expr -> arith_expr LEFTSHIFT shift_expr .)
    EQEQUAL         reduce using rule 77 (shift_expr -> arith_expr LEFTSHIFT shift_expr .)
    GREATEREQUAL    reduce using rule 77 (shift_expr -> arith_expr LEFTSHIFT shift_expr .)
    LESSEQUAL       reduce using rule 77 (shift_expr -> arith_expr LEFTSHIFT shift_expr .)
    NOTEQUAL        reduce using rule 77 (shift_expr -> arith_expr LEFTSHIFT shift_expr .)
    AND             reduce using rule 77 (shift_expr -> arith_expr LEFTSHIFT shift_expr .)
    OR              reduce using rule 77 (shift_expr -> arith_expr LEFTSHIFT shift_expr .)
    COMMA           reduce using rule 77 (shift_expr -> arith_expr LEFTSHIFT shift_expr .)
    RPAREN          reduce using rule 77 (shift_expr -> arith_expr LEFTSHIFT shift_expr .)
    EQUAL           reduce using rule 77 (shift_expr -> arith_expr LEFTSHIFT shift_expr .)
    RSQB            reduce using rule 77 (shift_expr -> arith_expr LEFTSHIFT shift_expr .)
    NEWLINE         reduce using rule 77 (shift_expr -> arith_expr LEFTSHIFT shift_expr .)
    COLON           reduce using rule 77 (shift_expr -> arith_expr LEFTSHIFT shift_expr .)


state 130

    (78) shift_expr -> arith_expr RIGHTSHIFT shift_expr .

    AMPER           reduce using rule 78 (shift_expr -> arith_expr RIGHTSHIFT shift_expr .)
    CIRCUMFLEX      reduce using rule 78 (shift_expr -> arith_expr RIGHTSHIFT shift_expr .)
    VBAR            reduce using rule 78 (shift_expr -> arith_expr RIGHTSHIFT shift_expr .)
    LESS            reduce using rule 78 (shift_expr -> arith_expr RIGHTSHIFT shift_expr .)
    GREATER         reduce using rule 78 (shift_expr -> arith_expr RIGHTSHIFT shift_expr .)
    EQEQUAL         reduce using rule 78 (shift_expr -> arith_expr RIGHTSHIFT shift_expr .)
    GREATEREQUAL    reduce using rule 78 (shift_expr -> arith_expr RIGHTSHIFT shift_expr .)
    LESSEQUAL       reduce using rule 78 (shift_expr -> arith_expr RIGHTSHIFT shift_expr .)
    NOTEQUAL        reduce using rule 78 (shift_expr -> arith_expr RIGHTSHIFT shift_expr .)
    AND             reduce using rule 78 (shift_expr -> arith_expr RIGHTSHIFT shift_expr .)
    OR              reduce using rule 78 (shift_expr -> arith_expr RIGHTSHIFT shift_expr .)
    COMMA           reduce using rule 78 (shift_expr -> arith_expr RIGHTSHIFT shift_expr .)
    RPAREN          reduce using rule 78 (shift_expr -> arith_expr RIGHTSHIFT shift_expr .)
    EQUAL           reduce using rule 78 (shift_expr -> arith_expr RIGHTSHIFT shift_expr .)
    RSQB            reduce using rule 78 (shift_expr -> arith_expr RIGHTSHIFT shift_expr .)
    NEWLINE         reduce using rule 78 (shift_expr -> arith_expr RIGHTSHIFT shift_expr .)
    COLON           reduce using rule 78 (shift_expr -> arith_expr RIGHTSHIFT shift_expr .)


state 131

    (63) comparison -> expr comp_op expr .

    AND             reduce using rule 63 (comparison -> expr comp_op expr .)
    OR              reduce using rule 63 (comparison -> expr comp_op expr .)
    COMMA           reduce using rule 63 (comparison -> expr comp_op expr .)
    RPAREN          reduce using rule 63 (comparison -> expr comp_op expr .)
    COLON           reduce using rule 63 (comparison -> expr comp_op expr .)
    EQUAL           reduce using rule 63 (comparison -> expr comp_op expr .)
    NEWLINE         reduce using rule 63 (comparison -> expr comp_op expr .)
    RSQB            reduce using rule 63 (comparison -> expr comp_op expr .)


state 132

    (11) function_call -> NAME LPAREN testlist RPAREN .

    IF              reduce using rule 11 (function_call -> NAME LPAREN testlist RPAREN .)
    FOR             reduce using rule 11 (function_call -> NAME LPAREN testlist RPAREN .)
    WHILE           reduce using rule 11 (function_call -> NAME LPAREN testlist RPAREN .)
    DEF             reduce using rule 11 (function_call -> NAME LPAREN testlist RPAREN .)
    NAME            reduce using rule 11 (function_call -> NAME LPAREN testlist RPAREN .)
    PRINT           reduce using rule 11 (function_call -> NAME LPAREN testlist RPAREN .)
    BREAK           reduce using rule 11 (function_call -> NAME LPAREN testlist RPAREN .)
    RETURN          reduce using rule 11 (function_call -> NAME LPAREN testlist RPAREN .)
    CONTINUE        reduce using rule 11 (function_call -> NAME LPAREN testlist RPAREN .)
    NOT             reduce using rule 11 (function_call -> NAME LPAREN testlist RPAREN .)
    PLUS            reduce using rule 11 (function_call -> NAME LPAREN testlist RPAREN .)
    MINUS           reduce using rule 11 (function_call -> NAME LPAREN testlist RPAREN .)
    NUMBER          reduce using rule 11 (function_call -> NAME LPAREN testlist RPAREN .)
    STRING          reduce using rule 11 (function_call -> NAME LPAREN testlist RPAREN .)
    TRIPLESTRING    reduce using rule 11 (function_call -> NAME LPAREN testlist RPAREN .)
    FNUMBER         reduce using rule 11 (function_call -> NAME LPAREN testlist RPAREN .)
    LSQB            reduce using rule 11 (function_call -> NAME LPAREN testlist RPAREN .)
    LPAREN          reduce using rule 11 (function_call -> NAME LPAREN testlist RPAREN .)
    DEDENT          reduce using rule 11 (function_call -> NAME LPAREN testlist RPAREN .)
    NEWLINE         reduce using rule 11 (function_call -> NAME LPAREN testlist RPAREN .)
    ENDMARKER       reduce using rule 11 (function_call -> NAME LPAREN testlist RPAREN .)


state 133

    (45) while_stmt -> WHILE Marker test COLON . MarkerWhile suite
    (47) MarkerWhile -> .

    NEWLINE         reduce using rule 47 (MarkerWhile -> .)
    PRINT           reduce using rule 47 (MarkerWhile -> .)
    BREAK           reduce using rule 47 (MarkerWhile -> .)
    RETURN          reduce using rule 47 (MarkerWhile -> .)
    CONTINUE        reduce using rule 47 (MarkerWhile -> .)
    NOT             reduce using rule 47 (MarkerWhile -> .)
    PLUS            reduce using rule 47 (MarkerWhile -> .)
    MINUS           reduce using rule 47 (MarkerWhile -> .)
    NAME            reduce using rule 47 (MarkerWhile -> .)
    NUMBER          reduce using rule 47 (MarkerWhile -> .)
    STRING          reduce using rule 47 (MarkerWhile -> .)
    TRIPLESTRING    reduce using rule 47 (MarkerWhile -> .)
    FNUMBER         reduce using rule 47 (MarkerWhile -> .)
    LSQB            reduce using rule 47 (MarkerWhile -> .)
    LPAREN          reduce using rule 47 (MarkerWhile -> .)

    MarkerWhile                    shift and go to state 142

state 134

    (105) testlist -> test COMMA testlist .

    RPAREN          reduce using rule 105 (testlist -> test COMMA testlist .)
    NEWLINE         reduce using rule 105 (testlist -> test COMMA testlist .)


state 135

    (5) funcdef -> DEF NAME MarkerScope parameters . MarkerArg COLON suite
    (7) MarkerArg -> .

    COLON           reduce using rule 7 (MarkerArg -> .)

    MarkerArg                      shift and go to state 143

state 136

    (8) parameters -> LPAREN . RPAREN
    (9) parameters -> LPAREN . varargslist RPAREN
    (12) varargslist -> . fpdef
    (13) varargslist -> . fpdef EQUAL test
    (14) varargslist -> . fpdef COMMA varargslist
    (15) varargslist -> . fpdef EQUAL test COMMA varargslist
    (16) fpdef -> . NAME
    (17) fpdef -> . LPAREN fplist RPAREN

    RPAREN          shift and go to state 144
    NAME            shift and go to state 145
    LPAREN          shift and go to state 148

    fpdef                          shift and go to state 146
    varargslist                    shift and go to state 147

state 137

    (50) for_stmt -> FOR atom IN test . COLON MarkerFor suite

    COLON           shift and go to state 149


state 138

    (103) testlist_comp -> test COMMA testlist_comp .

    RPAREN          reduce using rule 103 (testlist_comp -> test COMMA testlist_comp .)


state 139

    (90) power -> atom LSQB test RSQB .

    STAR            reduce using rule 90 (power -> atom LSQB test RSQB .)
    SLASH           reduce using rule 90 (power -> atom LSQB test RSQB .)
    PERCENT         reduce using rule 90 (power -> atom LSQB test RSQB .)
    PLUS            reduce using rule 90 (power -> atom LSQB test RSQB .)
    MINUS           reduce using rule 90 (power -> atom LSQB test RSQB .)
    LEFTSHIFT       reduce using rule 90 (power -> atom LSQB test RSQB .)
    RIGHTSHIFT      reduce using rule 90 (power -> atom LSQB test RSQB .)
    AMPER           reduce using rule 90 (power -> atom LSQB test RSQB .)
    CIRCUMFLEX      reduce using rule 90 (power -> atom LSQB test RSQB .)
    VBAR            reduce using rule 90 (power -> atom LSQB test RSQB .)
    LESS            reduce using rule 90 (power -> atom LSQB test RSQB .)
    GREATER         reduce using rule 90 (power -> atom LSQB test RSQB .)
    EQEQUAL         reduce using rule 90 (power -> atom LSQB test RSQB .)
    GREATEREQUAL    reduce using rule 90 (power -> atom LSQB test RSQB .)
    LESSEQUAL       reduce using rule 90 (power -> atom LSQB test RSQB .)
    NOTEQUAL        reduce using rule 90 (power -> atom LSQB test RSQB .)
    AND             reduce using rule 90 (power -> atom LSQB test RSQB .)
    OR              reduce using rule 90 (power -> atom LSQB test RSQB .)
    EQUAL           reduce using rule 90 (power -> atom LSQB test RSQB .)
    COMMA           reduce using rule 90 (power -> atom LSQB test RSQB .)
    NEWLINE         reduce using rule 90 (power -> atom LSQB test RSQB .)
    RPAREN          reduce using rule 90 (power -> atom LSQB test RSQB .)
    RSQB            reduce using rule 90 (power -> atom LSQB test RSQB .)
    COLON           reduce using rule 90 (power -> atom LSQB test RSQB .)


state 140

    (101) listmaker -> test COMMA listmaker .

    RSQB            reduce using rule 101 (listmaker -> test COMMA listmaker .)


state 141

    (43) if_stmt -> IF test COLON MarkerIf . suite
    (44) if_stmt -> IF test COLON MarkerIf . suite ELSE COLON MarkerElse suite
    (52) suite -> . simple_stmt
    (53) suite -> . NEWLINE INDENT stmts DEDENT
    (22) simple_stmt -> . small_stmts NEWLINE
    (23) small_stmts -> . small_stmt
    (24) small_stmt -> . flow_stmt Marker
    (25) small_stmt -> . expr_stmt Marker
    (26) small_stmt -> . print_stmt Marker
    (31) flow_stmt -> . break_stmt Marker
    (32) flow_stmt -> . return_stmt Marker
    (33) flow_stmt -> . continue_stmt Marker
    (27) expr_stmt -> . test EQUAL test
    (28) expr_stmt -> . test EQUAL function_call
    (29) print_stmt -> . PRINT
    (30) print_stmt -> . PRINT testlist
    (34) break_stmt -> . BREAK
    (36) return_stmt -> . RETURN
    (37) return_stmt -> . RETURN test
    (35) continue_stmt -> . CONTINUE
    (54) test -> . test_expr
    (55) test_expr -> . or_test
    (56) or_test -> . and_test
    (57) or_test -> . and_test OR or_test
    (58) and_test -> . not_test
    (59) and_test -> . not_test AND and_test
    (60) not_test -> . NOT not_test
    (61) not_test -> . comparison
    (62) comparison -> . expr
    (63) comparison -> . expr comp_op expr
    (70) expr -> . xor_expr
    (71) expr -> . xor_expr VBAR expr
    (72) xor_expr -> . and_expr
    (73) xor_expr -> . and_expr CIRCUMFLEX xor_expr
    (74) and_expr -> . shift_expr
    (75) and_expr -> . shift_expr AMPER and_expr
    (76) shift_expr -> . arith_expr
    (77) shift_expr -> . arith_expr LEFTSHIFT shift_expr
    (78) shift_expr -> . arith_expr RIGHTSHIFT shift_expr
    (79) arith_expr -> . term
    (80) arith_expr -> . term PLUS arith_expr
    (81) arith_expr -> . term MINUS arith_expr
    (82) term -> . factor
    (83) term -> . factor STAR term
    (84) term -> . factor SLASH term
    (85) term -> . factor PERCENT term
    (86) factor -> . power
    (87) factor -> . PLUS factor
    (88) factor -> . MINUS factor
    (89) power -> . atom
    (90) power -> . atom LSQB test RSQB
    (91) atom -> . NAME
    (92) atom -> . NUMBER
    (93) atom -> . STRING
    (94) atom -> . TRIPLESTRING
    (95) atom -> . FNUMBER
    (96) atom -> . LSQB RSQB
    (97) atom -> . LSQB listmaker RSQB
    (98) atom -> . LPAREN RPAREN
    (99) atom -> . LPAREN testlist_comp RPAREN

    NEWLINE         shift and go to state 150
    PRINT           shift and go to state 10
    BREAK           shift and go to state 48
    RETURN          shift and go to state 11
    CONTINUE        shift and go to state 50
    NOT             shift and go to state 33
    PLUS            shift and go to state 20
    MINUS           shift and go to state 12
    NAME            shift and go to state 61
    NUMBER          shift and go to state 53
    STRING          shift and go to state 28
    TRIPLESTRING    shift and go to state 51
    FNUMBER         shift and go to state 31
    LSQB            shift and go to state 39
    LPAREN          shift and go to state 36

    small_stmt                     shift and go to state 5
    return_stmt                    shift and go to state 8
    not_test                       shift and go to state 9
    flow_stmt                      shift and go to state 14
    xor_expr                       shift and go to state 15
    continue_stmt                  shift and go to state 17
    shift_expr                     shift and go to state 19
    print_stmt                     shift and go to state 21
    test                           shift and go to state 22
    suite                          shift and go to state 151
    and_expr                       shift and go to state 25
    break_stmt                     shift and go to state 26
    power                          shift and go to state 16
    simple_stmt                    shift and go to state 152
    factor                         shift and go to state 27
    and_test                       shift and go to state 35
    atom                           shift and go to state 37
    expr_stmt                      shift and go to state 40
    test_expr                      shift and go to state 23
    comparison                     shift and go to state 42
    term                           shift and go to state 43
    arith_expr                     shift and go to state 45
    expr                           shift and go to state 46
    or_test                        shift and go to state 47
    small_stmts                    shift and go to state 52

state 142

    (45) while_stmt -> WHILE Marker test COLON MarkerWhile . suite
    (52) suite -> . simple_stmt
    (53) suite -> . NEWLINE INDENT stmts DEDENT
    (22) simple_stmt -> . small_stmts NEWLINE
    (23) small_stmts -> . small_stmt
    (24) small_stmt -> . flow_stmt Marker
    (25) small_stmt -> . expr_stmt Marker
    (26) small_stmt -> . print_stmt Marker
    (31) flow_stmt -> . break_stmt Marker
    (32) flow_stmt -> . return_stmt Marker
    (33) flow_stmt -> . continue_stmt Marker
    (27) expr_stmt -> . test EQUAL test
    (28) expr_stmt -> . test EQUAL function_call
    (29) print_stmt -> . PRINT
    (30) print_stmt -> . PRINT testlist
    (34) break_stmt -> . BREAK
    (36) return_stmt -> . RETURN
    (37) return_stmt -> . RETURN test
    (35) continue_stmt -> . CONTINUE
    (54) test -> . test_expr
    (55) test_expr -> . or_test
    (56) or_test -> . and_test
    (57) or_test -> . and_test OR or_test
    (58) and_test -> . not_test
    (59) and_test -> . not_test AND and_test
    (60) not_test -> . NOT not_test
    (61) not_test -> . comparison
    (62) comparison -> . expr
    (63) comparison -> . expr comp_op expr
    (70) expr -> . xor_expr
    (71) expr -> . xor_expr VBAR expr
    (72) xor_expr -> . and_expr
    (73) xor_expr -> . and_expr CIRCUMFLEX xor_expr
    (74) and_expr -> . shift_expr
    (75) and_expr -> . shift_expr AMPER and_expr
    (76) shift_expr -> . arith_expr
    (77) shift_expr -> . arith_expr LEFTSHIFT shift_expr
    (78) shift_expr -> . arith_expr RIGHTSHIFT shift_expr
    (79) arith_expr -> . term
    (80) arith_expr -> . term PLUS arith_expr
    (81) arith_expr -> . term MINUS arith_expr
    (82) term -> . factor
    (83) term -> . factor STAR term
    (84) term -> . factor SLASH term
    (85) term -> . factor PERCENT term
    (86) factor -> . power
    (87) factor -> . PLUS factor
    (88) factor -> . MINUS factor
    (89) power -> . atom
    (90) power -> . atom LSQB test RSQB
    (91) atom -> . NAME
    (92) atom -> . NUMBER
    (93) atom -> . STRING
    (94) atom -> . TRIPLESTRING
    (95) atom -> . FNUMBER
    (96) atom -> . LSQB RSQB
    (97) atom -> . LSQB listmaker RSQB
    (98) atom -> . LPAREN RPAREN
    (99) atom -> . LPAREN testlist_comp RPAREN

    NEWLINE         shift and go to state 150
    PRINT           shift and go to state 10
    BREAK           shift and go to state 48
    RETURN          shift and go to state 11
    CONTINUE        shift and go to state 50
    NOT             shift and go to state 33
    PLUS            shift and go to state 20
    MINUS           shift and go to state 12
    NAME            shift and go to state 61
    NUMBER          shift and go to state 53
    STRING          shift and go to state 28
    TRIPLESTRING    shift and go to state 51
    FNUMBER         shift and go to state 31
    LSQB            shift and go to state 39
    LPAREN          shift and go to state 36

    small_stmt                     shift and go to state 5
    return_stmt                    shift and go to state 8
    not_test                       shift and go to state 9
    flow_stmt                      shift and go to state 14
    xor_expr                       shift and go to state 15
    continue_stmt                  shift and go to state 17
    shift_expr                     shift and go to state 19
    print_stmt                     shift and go to state 21
    factor                         shift and go to state 27
    test                           shift and go to state 22
    suite                          shift and go to state 153
    and_expr                       shift and go to state 25
    break_stmt                     shift and go to state 26
    power                          shift and go to state 16
    simple_stmt                    shift and go to state 152
    and_test                       shift and go to state 35
    atom                           shift and go to state 37
    expr_stmt                      shift and go to state 40
    test_expr                      shift and go to state 23
    comparison                     shift and go to state 42
    term                           shift and go to state 43
    arith_expr                     shift and go to state 45
    expr                           shift and go to state 46
    or_test                        shift and go to state 47
    small_stmts                    shift and go to state 52

state 143

    (5) funcdef -> DEF NAME MarkerScope parameters MarkerArg . COLON suite

    COLON           shift and go to state 154


state 144

    (8) parameters -> LPAREN RPAREN .

    COLON           reduce using rule 8 (parameters -> LPAREN RPAREN .)


state 145

    (16) fpdef -> NAME .

    EQUAL           reduce using rule 16 (fpdef -> NAME .)
    COMMA           reduce using rule 16 (fpdef -> NAME .)
    RPAREN          reduce using rule 16 (fpdef -> NAME .)


state 146

    (12) varargslist -> fpdef .
    (13) varargslist -> fpdef . EQUAL test
    (14) varargslist -> fpdef . COMMA varargslist
    (15) varargslist -> fpdef . EQUAL test COMMA varargslist

    RPAREN          reduce using rule 12 (varargslist -> fpdef .)
    EQUAL           shift and go to state 156
    COMMA           shift and go to state 155


state 147

    (9) parameters -> LPAREN varargslist . RPAREN

    RPAREN          shift and go to state 157


state 148

    (17) fpdef -> LPAREN . fplist RPAREN
    (18) fplist -> . fpdef
    (19) fplist -> . fpdef COMMA fplist
    (16) fpdef -> . NAME
    (17) fpdef -> . LPAREN fplist RPAREN

    NAME            shift and go to state 145
    LPAREN          shift and go to state 148

    fplist                         shift and go to state 159
    fpdef                          shift and go to state 158

state 149

    (50) for_stmt -> FOR atom IN test COLON . MarkerFor suite
    (51) MarkerFor -> .

    NEWLINE         reduce using rule 51 (MarkerFor -> .)
    PRINT           reduce using rule 51 (MarkerFor -> .)
    BREAK           reduce using rule 51 (MarkerFor -> .)
    RETURN          reduce using rule 51 (MarkerFor -> .)
    CONTINUE        reduce using rule 51 (MarkerFor -> .)
    NOT             reduce using rule 51 (MarkerFor -> .)
    PLUS            reduce using rule 51 (MarkerFor -> .)
    MINUS           reduce using rule 51 (MarkerFor -> .)
    NAME            reduce using rule 51 (MarkerFor -> .)
    NUMBER          reduce using rule 51 (MarkerFor -> .)
    STRING          reduce using rule 51 (MarkerFor -> .)
    TRIPLESTRING    reduce using rule 51 (MarkerFor -> .)
    FNUMBER         reduce using rule 51 (MarkerFor -> .)
    LSQB            reduce using rule 51 (MarkerFor -> .)
    LPAREN          reduce using rule 51 (MarkerFor -> .)

    MarkerFor                      shift and go to state 160

state 150

    (53) suite -> NEWLINE . INDENT stmts DEDENT

    INDENT          shift and go to state 161


state 151

    (43) if_stmt -> IF test COLON MarkerIf suite .
    (44) if_stmt -> IF test COLON MarkerIf suite . ELSE COLON MarkerElse suite

    IF              reduce using rule 43 (if_stmt -> IF test COLON MarkerIf suite .)
    FOR             reduce using rule 43 (if_stmt -> IF test COLON MarkerIf suite .)
    WHILE           reduce using rule 43 (if_stmt -> IF test COLON MarkerIf suite .)
    DEF             reduce using rule 43 (if_stmt -> IF test COLON MarkerIf suite .)
    NAME            reduce using rule 43 (if_stmt -> IF test COLON MarkerIf suite .)
    PRINT           reduce using rule 43 (if_stmt -> IF test COLON MarkerIf suite .)
    BREAK           reduce using rule 43 (if_stmt -> IF test COLON MarkerIf suite .)
    RETURN          reduce using rule 43 (if_stmt -> IF test COLON MarkerIf suite .)
    CONTINUE        reduce using rule 43 (if_stmt -> IF test COLON MarkerIf suite .)
    NOT             reduce using rule 43 (if_stmt -> IF test COLON MarkerIf suite .)
    PLUS            reduce using rule 43 (if_stmt -> IF test COLON MarkerIf suite .)
    MINUS           reduce using rule 43 (if_stmt -> IF test COLON MarkerIf suite .)
    NUMBER          reduce using rule 43 (if_stmt -> IF test COLON MarkerIf suite .)
    STRING          reduce using rule 43 (if_stmt -> IF test COLON MarkerIf suite .)
    TRIPLESTRING    reduce using rule 43 (if_stmt -> IF test COLON MarkerIf suite .)
    FNUMBER         reduce using rule 43 (if_stmt -> IF test COLON MarkerIf suite .)
    LSQB            reduce using rule 43 (if_stmt -> IF test COLON MarkerIf suite .)
    LPAREN          reduce using rule 43 (if_stmt -> IF test COLON MarkerIf suite .)
    DEDENT          reduce using rule 43 (if_stmt -> IF test COLON MarkerIf suite .)
    ENDMARKER       reduce using rule 43 (if_stmt -> IF test COLON MarkerIf suite .)
    NEWLINE         reduce using rule 43 (if_stmt -> IF test COLON MarkerIf suite .)
    ELSE            shift and go to state 162


state 152

    (52) suite -> simple_stmt .

    ENDMARKER       reduce using rule 52 (suite -> simple_stmt .)
    NEWLINE         reduce using rule 52 (suite -> simple_stmt .)
    IF              reduce using rule 52 (suite -> simple_stmt .)
    FOR             reduce using rule 52 (suite -> simple_stmt .)
    WHILE           reduce using rule 52 (suite -> simple_stmt .)
    DEF             reduce using rule 52 (suite -> simple_stmt .)
    NAME            reduce using rule 52 (suite -> simple_stmt .)
    PRINT           reduce using rule 52 (suite -> simple_stmt .)
    BREAK           reduce using rule 52 (suite -> simple_stmt .)
    RETURN          reduce using rule 52 (suite -> simple_stmt .)
    CONTINUE        reduce using rule 52 (suite -> simple_stmt .)
    NOT             reduce using rule 52 (suite -> simple_stmt .)
    PLUS            reduce using rule 52 (suite -> simple_stmt .)
    MINUS           reduce using rule 52 (suite -> simple_stmt .)
    NUMBER          reduce using rule 52 (suite -> simple_stmt .)
    STRING          reduce using rule 52 (suite -> simple_stmt .)
    TRIPLESTRING    reduce using rule 52 (suite -> simple_stmt .)
    FNUMBER         reduce using rule 52 (suite -> simple_stmt .)
    LSQB            reduce using rule 52 (suite -> simple_stmt .)
    LPAREN          reduce using rule 52 (suite -> simple_stmt .)
    DEDENT          reduce using rule 52 (suite -> simple_stmt .)
    ELSE            reduce using rule 52 (suite -> simple_stmt .)


state 153

    (45) while_stmt -> WHILE Marker test COLON MarkerWhile suite .

    ENDMARKER       reduce using rule 45 (while_stmt -> WHILE Marker test COLON MarkerWhile suite .)
    NEWLINE         reduce using rule 45 (while_stmt -> WHILE Marker test COLON MarkerWhile suite .)
    IF              reduce using rule 45 (while_stmt -> WHILE Marker test COLON MarkerWhile suite .)
    FOR             reduce using rule 45 (while_stmt -> WHILE Marker test COLON MarkerWhile suite .)
    WHILE           reduce using rule 45 (while_stmt -> WHILE Marker test COLON MarkerWhile suite .)
    DEF             reduce using rule 45 (while_stmt -> WHILE Marker test COLON MarkerWhile suite .)
    NAME            reduce using rule 45 (while_stmt -> WHILE Marker test COLON MarkerWhile suite .)
    PRINT           reduce using rule 45 (while_stmt -> WHILE Marker test COLON MarkerWhile suite .)
    BREAK           reduce using rule 45 (while_stmt -> WHILE Marker test COLON MarkerWhile suite .)
    RETURN          reduce using rule 45 (while_stmt -> WHILE Marker test COLON MarkerWhile suite .)
    CONTINUE        reduce using rule 45 (while_stmt -> WHILE Marker test COLON MarkerWhile suite .)
    NOT             reduce using rule 45 (while_stmt -> WHILE Marker test COLON MarkerWhile suite .)
    PLUS            reduce using rule 45 (while_stmt -> WHILE Marker test COLON MarkerWhile suite .)
    MINUS           reduce using rule 45 (while_stmt -> WHILE Marker test COLON MarkerWhile suite .)
    NUMBER          reduce using rule 45 (while_stmt -> WHILE Marker test COLON MarkerWhile suite .)
    STRING          reduce using rule 45 (while_stmt -> WHILE Marker test COLON MarkerWhile suite .)
    TRIPLESTRING    reduce using rule 45 (while_stmt -> WHILE Marker test COLON MarkerWhile suite .)
    FNUMBER         reduce using rule 45 (while_stmt -> WHILE Marker test COLON MarkerWhile suite .)
    LSQB            reduce using rule 45 (while_stmt -> WHILE Marker test COLON MarkerWhile suite .)
    LPAREN          reduce using rule 45 (while_stmt -> WHILE Marker test COLON MarkerWhile suite .)
    DEDENT          reduce using rule 45 (while_stmt -> WHILE Marker test COLON MarkerWhile suite .)


state 154

    (5) funcdef -> DEF NAME MarkerScope parameters MarkerArg COLON . suite
    (52) suite -> . simple_stmt
    (53) suite -> . NEWLINE INDENT stmts DEDENT
    (22) simple_stmt -> . small_stmts NEWLINE
    (23) small_stmts -> . small_stmt
    (24) small_stmt -> . flow_stmt Marker
    (25) small_stmt -> . expr_stmt Marker
    (26) small_stmt -> . print_stmt Marker
    (31) flow_stmt -> . break_stmt Marker
    (32) flow_stmt -> . return_stmt Marker
    (33) flow_stmt -> . continue_stmt Marker
    (27) expr_stmt -> . test EQUAL test
    (28) expr_stmt -> . test EQUAL function_call
    (29) print_stmt -> . PRINT
    (30) print_stmt -> . PRINT testlist
    (34) break_stmt -> . BREAK
    (36) return_stmt -> . RETURN
    (37) return_stmt -> . RETURN test
    (35) continue_stmt -> . CONTINUE
    (54) test -> . test_expr
    (55) test_expr -> . or_test
    (56) or_test -> . and_test
    (57) or_test -> . and_test OR or_test
    (58) and_test -> . not_test
    (59) and_test -> . not_test AND and_test
    (60) not_test -> . NOT not_test
    (61) not_test -> . comparison
    (62) comparison -> . expr
    (63) comparison -> . expr comp_op expr
    (70) expr -> . xor_expr
    (71) expr -> . xor_expr VBAR expr
    (72) xor_expr -> . and_expr
    (73) xor_expr -> . and_expr CIRCUMFLEX xor_expr
    (74) and_expr -> . shift_expr
    (75) and_expr -> . shift_expr AMPER and_expr
    (76) shift_expr -> . arith_expr
    (77) shift_expr -> . arith_expr LEFTSHIFT shift_expr
    (78) shift_expr -> . arith_expr RIGHTSHIFT shift_expr
    (79) arith_expr -> . term
    (80) arith_expr -> . term PLUS arith_expr
    (81) arith_expr -> . term MINUS arith_expr
    (82) term -> . factor
    (83) term -> . factor STAR term
    (84) term -> . factor SLASH term
    (85) term -> . factor PERCENT term
    (86) factor -> . power
    (87) factor -> . PLUS factor
    (88) factor -> . MINUS factor
    (89) power -> . atom
    (90) power -> . atom LSQB test RSQB
    (91) atom -> . NAME
    (92) atom -> . NUMBER
    (93) atom -> . STRING
    (94) atom -> . TRIPLESTRING
    (95) atom -> . FNUMBER
    (96) atom -> . LSQB RSQB
    (97) atom -> . LSQB listmaker RSQB
    (98) atom -> . LPAREN RPAREN
    (99) atom -> . LPAREN testlist_comp RPAREN

    NEWLINE         shift and go to state 150
    PRINT           shift and go to state 10
    BREAK           shift and go to state 48
    RETURN          shift and go to state 11
    CONTINUE        shift and go to state 50
    NOT             shift and go to state 33
    PLUS            shift and go to state 20
    MINUS           shift and go to state 12
    NAME            shift and go to state 61
    NUMBER          shift and go to state 53
    STRING          shift and go to state 28
    TRIPLESTRING    shift and go to state 51
    FNUMBER         shift and go to state 31
    LSQB            shift and go to state 39
    LPAREN          shift and go to state 36

    small_stmt                     shift and go to state 5
    return_stmt                    shift and go to state 8
    not_test                       shift and go to state 9
    flow_stmt                      shift and go to state 14
    xor_expr                       shift and go to state 15
    continue_stmt                  shift and go to state 17
    shift_expr                     shift and go to state 19
    print_stmt                     shift and go to state 21
    factor                         shift and go to state 27
    test                           shift and go to state 22
    suite                          shift and go to state 163
    and_expr                       shift and go to state 25
    break_stmt                     shift and go to state 26
    power                          shift and go to state 16
    simple_stmt                    shift and go to state 152
    and_test                       shift and go to state 35
    atom                           shift and go to state 37
    expr_stmt                      shift and go to state 40
    test_expr                      shift and go to state 23
    comparison                     shift and go to state 42
    term                           shift and go to state 43
    arith_expr                     shift and go to state 45
    expr                           shift and go to state 46
    or_test                        shift and go to state 47
    small_stmts                    shift and go to state 52

state 155

    (14) varargslist -> fpdef COMMA . varargslist
    (12) varargslist -> . fpdef
    (13) varargslist -> . fpdef EQUAL test
    (14) varargslist -> . fpdef COMMA varargslist
    (15) varargslist -> . fpdef EQUAL test COMMA varargslist
    (16) fpdef -> . NAME
    (17) fpdef -> . LPAREN fplist RPAREN

    NAME            shift and go to state 145
    LPAREN          shift and go to state 148

    fpdef                          shift and go to state 146
    varargslist                    shift and go to state 164

state 156

    (13) varargslist -> fpdef EQUAL . test
    (15) varargslist -> fpdef EQUAL . test COMMA varargslist
    (54) test -> . test_expr
    (55) test_expr -> . or_test
    (56) or_test -> . and_test
    (57) or_test -> . and_test OR or_test
    (58) and_test -> . not_test
    (59) and_test -> . not_test AND and_test
    (60) not_test -> . NOT not_test
    (61) not_test -> . comparison
    (62) comparison -> . expr
    (63) comparison -> . expr comp_op expr
    (70) expr -> . xor_expr
    (71) expr -> . xor_expr VBAR expr
    (72) xor_expr -> . and_expr
    (73) xor_expr -> . and_expr CIRCUMFLEX xor_expr
    (74) and_expr -> . shift_expr
    (75) and_expr -> . shift_expr AMPER and_expr
    (76) shift_expr -> . arith_expr
    (77) shift_expr -> . arith_expr LEFTSHIFT shift_expr
    (78) shift_expr -> . arith_expr RIGHTSHIFT shift_expr
    (79) arith_expr -> . term
    (80) arith_expr -> . term PLUS arith_expr
    (81) arith_expr -> . term MINUS arith_expr
    (82) term -> . factor
    (83) term -> . factor STAR term
    (84) term -> . factor SLASH term
    (85) term -> . factor PERCENT term
    (86) factor -> . power
    (87) factor -> . PLUS factor
    (88) factor -> . MINUS factor
    (89) power -> . atom
    (90) power -> . atom LSQB test RSQB
    (91) atom -> . NAME
    (92) atom -> . NUMBER
    (93) atom -> . STRING
    (94) atom -> . TRIPLESTRING
    (95) atom -> . FNUMBER
    (96) atom -> . LSQB RSQB
    (97) atom -> . LSQB listmaker RSQB
    (98) atom -> . LPAREN RPAREN
    (99) atom -> . LPAREN testlist_comp RPAREN

    NOT             shift and go to state 33
    PLUS            shift and go to state 20
    MINUS           shift and go to state 12
    NAME            shift and go to state 61
    NUMBER          shift and go to state 53
    STRING          shift and go to state 28
    TRIPLESTRING    shift and go to state 51
    FNUMBER         shift and go to state 31
    LSQB            shift and go to state 39
    LPAREN          shift and go to state 36

    comparison                     shift and go to state 42
    power                          shift and go to state 16
    arith_expr                     shift and go to state 45
    expr                           shift and go to state 46
    atom                           shift and go to state 37
    shift_expr                     shift and go to state 19
    or_test                        shift and go to state 47
    and_test                       shift and go to state 35
    term                           shift and go to state 43
    not_test                       shift and go to state 9
    factor                         shift and go to state 27
    test                           shift and go to state 165
    xor_expr                       shift and go to state 15
    and_expr                       shift and go to state 25
    test_expr                      shift and go to state 23

state 157

    (9) parameters -> LPAREN varargslist RPAREN .

    COLON           reduce using rule 9 (parameters -> LPAREN varargslist RPAREN .)


state 158

    (18) fplist -> fpdef .
    (19) fplist -> fpdef . COMMA fplist

    RPAREN          reduce using rule 18 (fplist -> fpdef .)
    COMMA           shift and go to state 166


state 159

    (17) fpdef -> LPAREN fplist . RPAREN

    RPAREN          shift and go to state 167


state 160

    (50) for_stmt -> FOR atom IN test COLON MarkerFor . suite
    (52) suite -> . simple_stmt
    (53) suite -> . NEWLINE INDENT stmts DEDENT
    (22) simple_stmt -> . small_stmts NEWLINE
    (23) small_stmts -> . small_stmt
    (24) small_stmt -> . flow_stmt Marker
    (25) small_stmt -> . expr_stmt Marker
    (26) small_stmt -> . print_stmt Marker
    (31) flow_stmt -> . break_stmt Marker
    (32) flow_stmt -> . return_stmt Marker
    (33) flow_stmt -> . continue_stmt Marker
    (27) expr_stmt -> . test EQUAL test
    (28) expr_stmt -> . test EQUAL function_call
    (29) print_stmt -> . PRINT
    (30) print_stmt -> . PRINT testlist
    (34) break_stmt -> . BREAK
    (36) return_stmt -> . RETURN
    (37) return_stmt -> . RETURN test
    (35) continue_stmt -> . CONTINUE
    (54) test -> . test_expr
    (55) test_expr -> . or_test
    (56) or_test -> . and_test
    (57) or_test -> . and_test OR or_test
    (58) and_test -> . not_test
    (59) and_test -> . not_test AND and_test
    (60) not_test -> . NOT not_test
    (61) not_test -> . comparison
    (62) comparison -> . expr
    (63) comparison -> . expr comp_op expr
    (70) expr -> . xor_expr
    (71) expr -> . xor_expr VBAR expr
    (72) xor_expr -> . and_expr
    (73) xor_expr -> . and_expr CIRCUMFLEX xor_expr
    (74) and_expr -> . shift_expr
    (75) and_expr -> . shift_expr AMPER and_expr
    (76) shift_expr -> . arith_expr
    (77) shift_expr -> . arith_expr LEFTSHIFT shift_expr
    (78) shift_expr -> . arith_expr RIGHTSHIFT shift_expr
    (79) arith_expr -> . term
    (80) arith_expr -> . term PLUS arith_expr
    (81) arith_expr -> . term MINUS arith_expr
    (82) term -> . factor
    (83) term -> . factor STAR term
    (84) term -> . factor SLASH term
    (85) term -> . factor PERCENT term
    (86) factor -> . power
    (87) factor -> . PLUS factor
    (88) factor -> . MINUS factor
    (89) power -> . atom
    (90) power -> . atom LSQB test RSQB
    (91) atom -> . NAME
    (92) atom -> . NUMBER
    (93) atom -> . STRING
    (94) atom -> . TRIPLESTRING
    (95) atom -> . FNUMBER
    (96) atom -> . LSQB RSQB
    (97) atom -> . LSQB listmaker RSQB
    (98) atom -> . LPAREN RPAREN
    (99) atom -> . LPAREN testlist_comp RPAREN

    NEWLINE         shift and go to state 150
    PRINT           shift and go to state 10
    BREAK           shift and go to state 48
    RETURN          shift and go to state 11
    CONTINUE        shift and go to state 50
    NOT             shift and go to state 33
    PLUS            shift and go to state 20
    MINUS           shift and go to state 12
    NAME            shift and go to state 61
    NUMBER          shift and go to state 53
    STRING          shift and go to state 28
    TRIPLESTRING    shift and go to state 51
    FNUMBER         shift and go to state 31
    LSQB            shift and go to state 39
    LPAREN          shift and go to state 36

    small_stmt                     shift and go to state 5
    return_stmt                    shift and go to state 8
    not_test                       shift and go to state 9
    flow_stmt                      shift and go to state 14
    xor_expr                       shift and go to state 15
    continue_stmt                  shift and go to state 17
    shift_expr                     shift and go to state 19
    simple_stmt                    shift and go to state 152
    factor                         shift and go to state 27
    test                           shift and go to state 22
    suite                          shift and go to state 168
    and_expr                       shift and go to state 25
    break_stmt                     shift and go to state 26
    power                          shift and go to state 16
    print_stmt                     shift and go to state 21
    and_test                       shift and go to state 35
    atom                           shift and go to state 37
    expr_stmt                      shift and go to state 40
    test_expr                      shift and go to state 23
    comparison                     shift and go to state 42
    term                           shift and go to state 43
    arith_expr                     shift and go to state 45
    expr                           shift and go to state 46
    or_test                        shift and go to state 47
    small_stmts                    shift and go to state 52

state 161

    (53) suite -> NEWLINE INDENT . stmts DEDENT
    (106) stmts -> . stmt stmts
    (107) stmts -> . stmt Marker
    (20) stmt -> . simple_stmt
    (21) stmt -> . compound_stmt
    (22) simple_stmt -> . small_stmts NEWLINE
    (38) compound_stmt -> . if_stmt Marker
    (39) compound_stmt -> . for_stmt Marker
    (40) compound_stmt -> . while_stmt Marker
    (41) compound_stmt -> . funcdef Marker
    (42) compound_stmt -> . function_call Marker
    (23) small_stmts -> . small_stmt
    (43) if_stmt -> . IF test COLON MarkerIf suite
    (44) if_stmt -> . IF test COLON MarkerIf suite ELSE COLON MarkerElse suite
    (50) for_stmt -> . FOR atom IN test COLON MarkerFor suite
    (45) while_stmt -> . WHILE Marker test COLON MarkerWhile suite
    (5) funcdef -> . DEF NAME MarkerScope parameters MarkerArg COLON suite
    (10) function_call -> . NAME LPAREN RPAREN
    (11) function_call -> . NAME LPAREN testlist RPAREN
    (24) small_stmt -> . flow_stmt Marker
    (25) small_stmt -> . expr_stmt Marker
    (26) small_stmt -> . print_stmt Marker
    (31) flow_stmt -> . break_stmt Marker
    (32) flow_stmt -> . return_stmt Marker
    (33) flow_stmt -> . continue_stmt Marker
    (27) expr_stmt -> . test EQUAL test
    (28) expr_stmt -> . test EQUAL function_call
    (29) print_stmt -> . PRINT
    (30) print_stmt -> . PRINT testlist
    (34) break_stmt -> . BREAK
    (36) return_stmt -> . RETURN
    (37) return_stmt -> . RETURN test
    (35) continue_stmt -> . CONTINUE
    (54) test -> . test_expr
    (55) test_expr -> . or_test
    (56) or_test -> . and_test
    (57) or_test -> . and_test OR or_test
    (58) and_test -> . not_test
    (59) and_test -> . not_test AND and_test
    (60) not_test -> . NOT not_test
    (61) not_test -> . comparison
    (62) comparison -> . expr
    (63) comparison -> . expr comp_op expr
    (70) expr -> . xor_expr
    (71) expr -> . xor_expr VBAR expr
    (72) xor_expr -> . and_expr
    (73) xor_expr -> . and_expr CIRCUMFLEX xor_expr
    (74) and_expr -> . shift_expr
    (75) and_expr -> . shift_expr AMPER and_expr
    (76) shift_expr -> . arith_expr
    (77) shift_expr -> . arith_expr LEFTSHIFT shift_expr
    (78) shift_expr -> . arith_expr RIGHTSHIFT shift_expr
    (79) arith_expr -> . term
    (80) arith_expr -> . term PLUS arith_expr
    (81) arith_expr -> . term MINUS arith_expr
    (82) term -> . factor
    (83) term -> . factor STAR term
    (84) term -> . factor SLASH term
    (85) term -> . factor PERCENT term
    (86) factor -> . power
    (87) factor -> . PLUS factor
    (88) factor -> . MINUS factor
    (89) power -> . atom
    (90) power -> . atom LSQB test RSQB
    (91) atom -> . NAME
    (92) atom -> . NUMBER
    (93) atom -> . STRING
    (94) atom -> . TRIPLESTRING
    (95) atom -> . FNUMBER
    (96) atom -> . LSQB RSQB
    (97) atom -> . LSQB listmaker RSQB
    (98) atom -> . LPAREN RPAREN
    (99) atom -> . LPAREN testlist_comp RPAREN

    IF              shift and go to state 41
    FOR             shift and go to state 29
    WHILE           shift and go to state 7
    DEF             shift and go to state 13
    NAME            shift and go to state 4
    PRINT           shift and go to state 10
    BREAK           shift and go to state 48
    RETURN          shift and go to state 11
    CONTINUE        shift and go to state 50
    NOT             shift and go to state 33
    PLUS            shift and go to state 20
    MINUS           shift and go to state 12
    NUMBER          shift and go to state 53
    STRING          shift and go to state 28
    TRIPLESTRING    shift and go to state 51
    FNUMBER         shift and go to state 31
    LSQB            shift and go to state 39
    LPAREN          shift and go to state 36

    small_stmt                     shift and go to state 5
    function_call                  shift and go to state 6
    return_stmt                    shift and go to state 8
    not_test                       shift and go to state 9
    flow_stmt                      shift and go to state 14
    xor_expr                       shift and go to state 15
    stmts                          shift and go to state 169
    continue_stmt                  shift and go to state 17
    shift_expr                     shift and go to state 19
    print_stmt                     shift and go to state 21
    test                           shift and go to state 22
    compound_stmt                  shift and go to state 24
    and_expr                       shift and go to state 25
    break_stmt                     shift and go to state 26
    power                          shift and go to state 16
    simple_stmt                    shift and go to state 30
    factor                         shift and go to state 27
    stmt                           shift and go to state 170
    for_stmt                       shift and go to state 34
    and_test                       shift and go to state 35
    atom                           shift and go to state 37
    funcdef                        shift and go to state 38
    expr_stmt                      shift and go to state 40
    test_expr                      shift and go to state 23
    comparison                     shift and go to state 42
    term                           shift and go to state 43
    if_stmt                        shift and go to state 44
    arith_expr                     shift and go to state 45
    expr                           shift and go to state 46
    or_test                        shift and go to state 47
    while_stmt                     shift and go to state 49
    small_stmts                    shift and go to state 52

state 162

    (44) if_stmt -> IF test COLON MarkerIf suite ELSE . COLON MarkerElse suite

    COLON           shift and go to state 171


state 163

    (5) funcdef -> DEF NAME MarkerScope parameters MarkerArg COLON suite .

    IF              reduce using rule 5 (funcdef -> DEF NAME MarkerScope parameters MarkerArg COLON suite .)
    FOR             reduce using rule 5 (funcdef -> DEF NAME MarkerScope parameters MarkerArg COLON suite .)
    WHILE           reduce using rule 5 (funcdef -> DEF NAME MarkerScope parameters MarkerArg COLON suite .)
    DEF             reduce using rule 5 (funcdef -> DEF NAME MarkerScope parameters MarkerArg COLON suite .)
    NAME            reduce using rule 5 (funcdef -> DEF NAME MarkerScope parameters MarkerArg COLON suite .)
    PRINT           reduce using rule 5 (funcdef -> DEF NAME MarkerScope parameters MarkerArg COLON suite .)
    BREAK           reduce using rule 5 (funcdef -> DEF NAME MarkerScope parameters MarkerArg COLON suite .)
    RETURN          reduce using rule 5 (funcdef -> DEF NAME MarkerScope parameters MarkerArg COLON suite .)
    CONTINUE        reduce using rule 5 (funcdef -> DEF NAME MarkerScope parameters MarkerArg COLON suite .)
    NOT             reduce using rule 5 (funcdef -> DEF NAME MarkerScope parameters MarkerArg COLON suite .)
    PLUS            reduce using rule 5 (funcdef -> DEF NAME MarkerScope parameters MarkerArg COLON suite .)
    MINUS           reduce using rule 5 (funcdef -> DEF NAME MarkerScope parameters MarkerArg COLON suite .)
    NUMBER          reduce using rule 5 (funcdef -> DEF NAME MarkerScope parameters MarkerArg COLON suite .)
    STRING          reduce using rule 5 (funcdef -> DEF NAME MarkerScope parameters MarkerArg COLON suite .)
    TRIPLESTRING    reduce using rule 5 (funcdef -> DEF NAME MarkerScope parameters MarkerArg COLON suite .)
    FNUMBER         reduce using rule 5 (funcdef -> DEF NAME MarkerScope parameters MarkerArg COLON suite .)
    LSQB            reduce using rule 5 (funcdef -> DEF NAME MarkerScope parameters MarkerArg COLON suite .)
    LPAREN          reduce using rule 5 (funcdef -> DEF NAME MarkerScope parameters MarkerArg COLON suite .)
    DEDENT          reduce using rule 5 (funcdef -> DEF NAME MarkerScope parameters MarkerArg COLON suite .)
    ENDMARKER       reduce using rule 5 (funcdef -> DEF NAME MarkerScope parameters MarkerArg COLON suite .)
    NEWLINE         reduce using rule 5 (funcdef -> DEF NAME MarkerScope parameters MarkerArg COLON suite .)


state 164

    (14) varargslist -> fpdef COMMA varargslist .

    RPAREN          reduce using rule 14 (varargslist -> fpdef COMMA varargslist .)


state 165

    (13) varargslist -> fpdef EQUAL test .
    (15) varargslist -> fpdef EQUAL test . COMMA varargslist

    RPAREN          reduce using rule 13 (varargslist -> fpdef EQUAL test .)
    COMMA           shift and go to state 172


state 166

    (19) fplist -> fpdef COMMA . fplist
    (18) fplist -> . fpdef
    (19) fplist -> . fpdef COMMA fplist
    (16) fpdef -> . NAME
    (17) fpdef -> . LPAREN fplist RPAREN

    NAME            shift and go to state 145
    LPAREN          shift and go to state 148

    fplist                         shift and go to state 173
    fpdef                          shift and go to state 158

state 167

    (17) fpdef -> LPAREN fplist RPAREN .

    EQUAL           reduce using rule 17 (fpdef -> LPAREN fplist RPAREN .)
    COMMA           reduce using rule 17 (fpdef -> LPAREN fplist RPAREN .)
    RPAREN          reduce using rule 17 (fpdef -> LPAREN fplist RPAREN .)


state 168

    (50) for_stmt -> FOR atom IN test COLON MarkerFor suite .

    IF              reduce using rule 50 (for_stmt -> FOR atom IN test COLON MarkerFor suite .)
    FOR             reduce using rule 50 (for_stmt -> FOR atom IN test COLON MarkerFor suite .)
    WHILE           reduce using rule 50 (for_stmt -> FOR atom IN test COLON MarkerFor suite .)
    DEF             reduce using rule 50 (for_stmt -> FOR atom IN test COLON MarkerFor suite .)
    NAME            reduce using rule 50 (for_stmt -> FOR atom IN test COLON MarkerFor suite .)
    PRINT           reduce using rule 50 (for_stmt -> FOR atom IN test COLON MarkerFor suite .)
    BREAK           reduce using rule 50 (for_stmt -> FOR atom IN test COLON MarkerFor suite .)
    RETURN          reduce using rule 50 (for_stmt -> FOR atom IN test COLON MarkerFor suite .)
    CONTINUE        reduce using rule 50 (for_stmt -> FOR atom IN test COLON MarkerFor suite .)
    NOT             reduce using rule 50 (for_stmt -> FOR atom IN test COLON MarkerFor suite .)
    PLUS            reduce using rule 50 (for_stmt -> FOR atom IN test COLON MarkerFor suite .)
    MINUS           reduce using rule 50 (for_stmt -> FOR atom IN test COLON MarkerFor suite .)
    NUMBER          reduce using rule 50 (for_stmt -> FOR atom IN test COLON MarkerFor suite .)
    STRING          reduce using rule 50 (for_stmt -> FOR atom IN test COLON MarkerFor suite .)
    TRIPLESTRING    reduce using rule 50 (for_stmt -> FOR atom IN test COLON MarkerFor suite .)
    FNUMBER         reduce using rule 50 (for_stmt -> FOR atom IN test COLON MarkerFor suite .)
    LSQB            reduce using rule 50 (for_stmt -> FOR atom IN test COLON MarkerFor suite .)
    LPAREN          reduce using rule 50 (for_stmt -> FOR atom IN test COLON MarkerFor suite .)
    DEDENT          reduce using rule 50 (for_stmt -> FOR atom IN test COLON MarkerFor suite .)
    ENDMARKER       reduce using rule 50 (for_stmt -> FOR atom IN test COLON MarkerFor suite .)
    NEWLINE         reduce using rule 50 (for_stmt -> FOR atom IN test COLON MarkerFor suite .)


state 169

    (53) suite -> NEWLINE INDENT stmts . DEDENT

    DEDENT          shift and go to state 174


state 170

    (106) stmts -> stmt . stmts
    (107) stmts -> stmt . Marker
    (106) stmts -> . stmt stmts
    (107) stmts -> . stmt Marker
    (46) Marker -> .
    (20) stmt -> . simple_stmt
    (21) stmt -> . compound_stmt
    (22) simple_stmt -> . small_stmts NEWLINE
    (38) compound_stmt -> . if_stmt Marker
    (39) compound_stmt -> . for_stmt Marker
    (40) compound_stmt -> . while_stmt Marker
    (41) compound_stmt -> . funcdef Marker
    (42) compound_stmt -> . function_call Marker
    (23) small_stmts -> . small_stmt
    (43) if_stmt -> . IF test COLON MarkerIf suite
    (44) if_stmt -> . IF test COLON MarkerIf suite ELSE COLON MarkerElse suite
    (50) for_stmt -> . FOR atom IN test COLON MarkerFor suite
    (45) while_stmt -> . WHILE Marker test COLON MarkerWhile suite
    (5) funcdef -> . DEF NAME MarkerScope parameters MarkerArg COLON suite
    (10) function_call -> . NAME LPAREN RPAREN
    (11) function_call -> . NAME LPAREN testlist RPAREN
    (24) small_stmt -> . flow_stmt Marker
    (25) small_stmt -> . expr_stmt Marker
    (26) small_stmt -> . print_stmt Marker
    (31) flow_stmt -> . break_stmt Marker
    (32) flow_stmt -> . return_stmt Marker
    (33) flow_stmt -> . continue_stmt Marker
    (27) expr_stmt -> . test EQUAL test
    (28) expr_stmt -> . test EQUAL function_call
    (29) print_stmt -> . PRINT
    (30) print_stmt -> . PRINT testlist
    (34) break_stmt -> . BREAK
    (36) return_stmt -> . RETURN
    (37) return_stmt -> . RETURN test
    (35) continue_stmt -> . CONTINUE
    (54) test -> . test_expr
    (55) test_expr -> . or_test
    (56) or_test -> . and_test
    (57) or_test -> . and_test OR or_test
    (58) and_test -> . not_test
    (59) and_test -> . not_test AND and_test
    (60) not_test -> . NOT not_test
    (61) not_test -> . comparison
    (62) comparison -> . expr
    (63) comparison -> . expr comp_op expr
    (70) expr -> . xor_expr
    (71) expr -> . xor_expr VBAR expr
    (72) xor_expr -> . and_expr
    (73) xor_expr -> . and_expr CIRCUMFLEX xor_expr
    (74) and_expr -> . shift_expr
    (75) and_expr -> . shift_expr AMPER and_expr
    (76) shift_expr -> . arith_expr
    (77) shift_expr -> . arith_expr LEFTSHIFT shift_expr
    (78) shift_expr -> . arith_expr RIGHTSHIFT shift_expr
    (79) arith_expr -> . term
    (80) arith_expr -> . term PLUS arith_expr
    (81) arith_expr -> . term MINUS arith_expr
    (82) term -> . factor
    (83) term -> . factor STAR term
    (84) term -> . factor SLASH term
    (85) term -> . factor PERCENT term
    (86) factor -> . power
    (87) factor -> . PLUS factor
    (88) factor -> . MINUS factor
    (89) power -> . atom
    (90) power -> . atom LSQB test RSQB
    (91) atom -> . NAME
    (92) atom -> . NUMBER
    (93) atom -> . STRING
    (94) atom -> . TRIPLESTRING
    (95) atom -> . FNUMBER
    (96) atom -> . LSQB RSQB
    (97) atom -> . LSQB listmaker RSQB
    (98) atom -> . LPAREN RPAREN
    (99) atom -> . LPAREN testlist_comp RPAREN

    DEDENT          reduce using rule 46 (Marker -> .)
    IF              shift and go to state 41
    FOR             shift and go to state 29
    WHILE           shift and go to state 7
    DEF             shift and go to state 13
    NAME            shift and go to state 4
    PRINT           shift and go to state 10
    BREAK           shift and go to state 48
    RETURN          shift and go to state 11
    CONTINUE        shift and go to state 50
    NOT             shift and go to state 33
    PLUS            shift and go to state 20
    MINUS           shift and go to state 12
    NUMBER          shift and go to state 53
    STRING          shift and go to state 28
    TRIPLESTRING    shift and go to state 51
    FNUMBER         shift and go to state 31
    LSQB            shift and go to state 39
    LPAREN          shift and go to state 36

    small_stmt                     shift and go to state 5
    function_call                  shift and go to state 6
    return_stmt                    shift and go to state 8
    not_test                       shift and go to state 9
    flow_stmt                      shift and go to state 14
    xor_expr                       shift and go to state 15
    stmts                          shift and go to state 175
    continue_stmt                  shift and go to state 17
    shift_expr                     shift and go to state 19
    print_stmt                     shift and go to state 21
    test                           shift and go to state 22
    compound_stmt                  shift and go to state 24
    and_expr                       shift and go to state 25
    break_stmt                     shift and go to state 26
    power                          shift and go to state 16
    simple_stmt                    shift and go to state 30
    factor                         shift and go to state 27
    stmt                           shift and go to state 170
    for_stmt                       shift and go to state 34
    and_test                       shift and go to state 35
    atom                           shift and go to state 37
    funcdef                        shift and go to state 38
    expr_stmt                      shift and go to state 40
    test_expr                      shift and go to state 23
    comparison                     shift and go to state 42
    term                           shift and go to state 43
    if_stmt                        shift and go to state 44
    arith_expr                     shift and go to state 45
    expr                           shift and go to state 46
    or_test                        shift and go to state 47
    while_stmt                     shift and go to state 49
    Marker                         shift and go to state 176
    small_stmts                    shift and go to state 52

state 171

    (44) if_stmt -> IF test COLON MarkerIf suite ELSE COLON . MarkerElse suite
    (49) MarkerElse -> .

    NEWLINE         reduce using rule 49 (MarkerElse -> .)
    PRINT           reduce using rule 49 (MarkerElse -> .)
    BREAK           reduce using rule 49 (MarkerElse -> .)
    RETURN          reduce using rule 49 (MarkerElse -> .)
    CONTINUE        reduce using rule 49 (MarkerElse -> .)
    NOT             reduce using rule 49 (MarkerElse -> .)
    PLUS            reduce using rule 49 (MarkerElse -> .)
    MINUS           reduce using rule 49 (MarkerElse -> .)
    NAME            reduce using rule 49 (MarkerElse -> .)
    NUMBER          reduce using rule 49 (MarkerElse -> .)
    STRING          reduce using rule 49 (MarkerElse -> .)
    TRIPLESTRING    reduce using rule 49 (MarkerElse -> .)
    FNUMBER         reduce using rule 49 (MarkerElse -> .)
    LSQB            reduce using rule 49 (MarkerElse -> .)
    LPAREN          reduce using rule 49 (MarkerElse -> .)

    MarkerElse                     shift and go to state 177

state 172

    (15) varargslist -> fpdef EQUAL test COMMA . varargslist
    (12) varargslist -> . fpdef
    (13) varargslist -> . fpdef EQUAL test
    (14) varargslist -> . fpdef COMMA varargslist
    (15) varargslist -> . fpdef EQUAL test COMMA varargslist
    (16) fpdef -> . NAME
    (17) fpdef -> . LPAREN fplist RPAREN

    NAME            shift and go to state 145
    LPAREN          shift and go to state 148

    fpdef                          shift and go to state 146
    varargslist                    shift and go to state 178

state 173

    (19) fplist -> fpdef COMMA fplist .

    RPAREN          reduce using rule 19 (fplist -> fpdef COMMA fplist .)


state 174

    (53) suite -> NEWLINE INDENT stmts DEDENT .

    ENDMARKER       reduce using rule 53 (suite -> NEWLINE INDENT stmts DEDENT .)
    NEWLINE         reduce using rule 53 (suite -> NEWLINE INDENT stmts DEDENT .)
    IF              reduce using rule 53 (suite -> NEWLINE INDENT stmts DEDENT .)
    FOR             reduce using rule 53 (suite -> NEWLINE INDENT stmts DEDENT .)
    WHILE           reduce using rule 53 (suite -> NEWLINE INDENT stmts DEDENT .)
    DEF             reduce using rule 53 (suite -> NEWLINE INDENT stmts DEDENT .)
    NAME            reduce using rule 53 (suite -> NEWLINE INDENT stmts DEDENT .)
    PRINT           reduce using rule 53 (suite -> NEWLINE INDENT stmts DEDENT .)
    BREAK           reduce using rule 53 (suite -> NEWLINE INDENT stmts DEDENT .)
    RETURN          reduce using rule 53 (suite -> NEWLINE INDENT stmts DEDENT .)
    CONTINUE        reduce using rule 53 (suite -> NEWLINE INDENT stmts DEDENT .)
    NOT             reduce using rule 53 (suite -> NEWLINE INDENT stmts DEDENT .)
    PLUS            reduce using rule 53 (suite -> NEWLINE INDENT stmts DEDENT .)
    MINUS           reduce using rule 53 (suite -> NEWLINE INDENT stmts DEDENT .)
    NUMBER          reduce using rule 53 (suite -> NEWLINE INDENT stmts DEDENT .)
    STRING          reduce using rule 53 (suite -> NEWLINE INDENT stmts DEDENT .)
    TRIPLESTRING    reduce using rule 53 (suite -> NEWLINE INDENT stmts DEDENT .)
    FNUMBER         reduce using rule 53 (suite -> NEWLINE INDENT stmts DEDENT .)
    LSQB            reduce using rule 53 (suite -> NEWLINE INDENT stmts DEDENT .)
    LPAREN          reduce using rule 53 (suite -> NEWLINE INDENT stmts DEDENT .)
    DEDENT          reduce using rule 53 (suite -> NEWLINE INDENT stmts DEDENT .)
    ELSE            reduce using rule 53 (suite -> NEWLINE INDENT stmts DEDENT .)


state 175

    (106) stmts -> stmt stmts .

    DEDENT          reduce using rule 106 (stmts -> stmt stmts .)


state 176

    (107) stmts -> stmt Marker .

    DEDENT          reduce using rule 107 (stmts -> stmt Marker .)


state 177

    (44) if_stmt -> IF test COLON MarkerIf suite ELSE COLON MarkerElse . suite
    (52) suite -> . simple_stmt
    (53) suite -> . NEWLINE INDENT stmts DEDENT
    (22) simple_stmt -> . small_stmts NEWLINE
    (23) small_stmts -> . small_stmt
    (24) small_stmt -> . flow_stmt Marker
    (25) small_stmt -> . expr_stmt Marker
    (26) small_stmt -> . print_stmt Marker
    (31) flow_stmt -> . break_stmt Marker
    (32) flow_stmt -> . return_stmt Marker
    (33) flow_stmt -> . continue_stmt Marker
    (27) expr_stmt -> . test EQUAL test
    (28) expr_stmt -> . test EQUAL function_call
    (29) print_stmt -> . PRINT
    (30) print_stmt -> . PRINT testlist
    (34) break_stmt -> . BREAK
    (36) return_stmt -> . RETURN
    (37) return_stmt -> . RETURN test
    (35) continue_stmt -> . CONTINUE
    (54) test -> . test_expr
    (55) test_expr -> . or_test
    (56) or_test -> . and_test
    (57) or_test -> . and_test OR or_test
    (58) and_test -> . not_test
    (59) and_test -> . not_test AND and_test
    (60) not_test -> . NOT not_test
    (61) not_test -> . comparison
    (62) comparison -> . expr
    (63) comparison -> . expr comp_op expr
    (70) expr -> . xor_expr
    (71) expr -> . xor_expr VBAR expr
    (72) xor_expr -> . and_expr
    (73) xor_expr -> . and_expr CIRCUMFLEX xor_expr
    (74) and_expr -> . shift_expr
    (75) and_expr -> . shift_expr AMPER and_expr
    (76) shift_expr -> . arith_expr
    (77) shift_expr -> . arith_expr LEFTSHIFT shift_expr
    (78) shift_expr -> . arith_expr RIGHTSHIFT shift_expr
    (79) arith_expr -> . term
    (80) arith_expr -> . term PLUS arith_expr
    (81) arith_expr -> . term MINUS arith_expr
    (82) term -> . factor
    (83) term -> . factor STAR term
    (84) term -> . factor SLASH term
    (85) term -> . factor PERCENT term
    (86) factor -> . power
    (87) factor -> . PLUS factor
    (88) factor -> . MINUS factor
    (89) power -> . atom
    (90) power -> . atom LSQB test RSQB
    (91) atom -> . NAME
    (92) atom -> . NUMBER
    (93) atom -> . STRING
    (94) atom -> . TRIPLESTRING
    (95) atom -> . FNUMBER
    (96) atom -> . LSQB RSQB
    (97) atom -> . LSQB listmaker RSQB
    (98) atom -> . LPAREN RPAREN
    (99) atom -> . LPAREN testlist_comp RPAREN

    NEWLINE         shift and go to state 150
    PRINT           shift and go to state 10
    BREAK           shift and go to state 48
    RETURN          shift and go to state 11
    CONTINUE        shift and go to state 50
    NOT             shift and go to state 33
    PLUS            shift and go to state 20
    MINUS           shift and go to state 12
    NAME            shift and go to state 61
    NUMBER          shift and go to state 53
    STRING          shift and go to state 28
    TRIPLESTRING    shift and go to state 51
    FNUMBER         shift and go to state 31
    LSQB            shift and go to state 39
    LPAREN          shift and go to state 36

    small_stmt                     shift and go to state 5
    return_stmt                    shift and go to state 8
    not_test                       shift and go to state 9
    flow_stmt                      shift and go to state 14
    xor_expr                       shift and go to state 15
    continue_stmt                  shift and go to state 17
    shift_expr                     shift and go to state 19
    print_stmt                     shift and go to state 21
    test                           shift and go to state 22
    suite                          shift and go to state 179
    and_expr                       shift and go to state 25
    break_stmt                     shift and go to state 26
    power                          shift and go to state 16
    simple_stmt                    shift and go to state 152
    factor                         shift and go to state 27
    and_test                       shift and go to state 35
    atom                           shift and go to state 37
    expr_stmt                      shift and go to state 40
    test_expr                      shift and go to state 23
    comparison                     shift and go to state 42
    term                           shift and go to state 43
    arith_expr                     shift and go to state 45
    expr                           shift and go to state 46
    or_test                        shift and go to state 47
    small_stmts                    shift and go to state 52

state 178

    (15) varargslist -> fpdef EQUAL test COMMA varargslist .

    RPAREN          reduce using rule 15 (varargslist -> fpdef EQUAL test COMMA varargslist .)


state 179

    (44) if_stmt -> IF test COLON MarkerIf suite ELSE COLON MarkerElse suite .

    IF              reduce using rule 44 (if_stmt -> IF test COLON MarkerIf suite ELSE COLON MarkerElse suite .)
    FOR             reduce using rule 44 (if_stmt -> IF test COLON MarkerIf suite ELSE COLON MarkerElse suite .)
    WHILE           reduce using rule 44 (if_stmt -> IF test COLON MarkerIf suite ELSE COLON MarkerElse suite .)
    DEF             reduce using rule 44 (if_stmt -> IF test COLON MarkerIf suite ELSE COLON MarkerElse suite .)
    NAME            reduce using rule 44 (if_stmt -> IF test COLON MarkerIf suite ELSE COLON MarkerElse suite .)
    PRINT           reduce using rule 44 (if_stmt -> IF test COLON MarkerIf suite ELSE COLON MarkerElse suite .)
    BREAK           reduce using rule 44 (if_stmt -> IF test COLON MarkerIf suite ELSE COLON MarkerElse suite .)
    RETURN          reduce using rule 44 (if_stmt -> IF test COLON MarkerIf suite ELSE COLON MarkerElse suite .)
    CONTINUE        reduce using rule 44 (if_stmt -> IF test COLON MarkerIf suite ELSE COLON MarkerElse suite .)
    NOT             reduce using rule 44 (if_stmt -> IF test COLON MarkerIf suite ELSE COLON MarkerElse suite .)
    PLUS            reduce using rule 44 (if_stmt -> IF test COLON MarkerIf suite ELSE COLON MarkerElse suite .)
    MINUS           reduce using rule 44 (if_stmt -> IF test COLON MarkerIf suite ELSE COLON MarkerElse suite .)
    NUMBER          reduce using rule 44 (if_stmt -> IF test COLON MarkerIf suite ELSE COLON MarkerElse suite .)
    STRING          reduce using rule 44 (if_stmt -> IF test COLON MarkerIf suite ELSE COLON MarkerElse suite .)
    TRIPLESTRING    reduce using rule 44 (if_stmt -> IF test COLON MarkerIf suite ELSE COLON MarkerElse suite .)
    FNUMBER         reduce using rule 44 (if_stmt -> IF test COLON MarkerIf suite ELSE COLON MarkerElse suite .)
    LSQB            reduce using rule 44 (if_stmt -> IF test COLON MarkerIf suite ELSE COLON MarkerElse suite .)
    LPAREN          reduce using rule 44 (if_stmt -> IF test COLON MarkerIf suite ELSE COLON MarkerElse suite .)
    DEDENT          reduce using rule 44 (if_stmt -> IF test COLON MarkerIf suite ELSE COLON MarkerElse suite .)
    ENDMARKER       reduce using rule 44 (if_stmt -> IF test COLON MarkerIf suite ELSE COLON MarkerElse suite .)
    NEWLINE         reduce using rule 44 (if_stmt -> IF test COLON MarkerIf suite ELSE COLON MarkerElse suite .)

